{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserQuestions.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Link from \"next/link\";\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport Tag from \"./Tag\";\n\nconst UserQuestions = ({\n  uuid\n}) => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchUserPosts = async page => {\n    const res = await fetch(`${host}/users/${uuid}/posts?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"user-posts\", page], () => fetchUserPosts(page), {\n    keepPreviousData: true,\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]),\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"user-posts-container\",\n      children: [data.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"user-post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"post-aside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"number\",\n              children: post.votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"text\",\n              children: [\"Vote\", post.votes === 1 ? \"\" : \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"comments\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"number\",\n              children: post.comments.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"text\",\n              children: [\"Answer\", post.comments.length === 1 ? \"\" : \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"post-main\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: `/questions/${post.uuid}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"post-title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"post-main-bottom\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"communities-container\",\n              children: post.communities.slice(0, 4).map(community => /*#__PURE__*/_jsxDEV(Tag, {\n                name: community.name\n              }, community.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, post.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]) + \" \" + \"page-handlers\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(old => Math.max(old - 1, 0)),\n          disabled: page === 1,\n          className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]),\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!isPreviousData && data.hasMore) {\n              setPage(old => old + 1);\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          className: _JSXStyle.dynamic([[\"1039709124\", [css.floatingPostBackground]]]),\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1039709124\",\n      dynamic: [css.floatingPostBackground],\n      children: `.user-post-container.__jsx-style-dynamic-selector{height:100px;background:${css.floatingPostBackground};margin:30px 20px;border-radius:10px;padding:15px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.post-aside.__jsx-style-dynamic-selector{width:7%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0 5px;}.votes.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector{width:100%;height:50%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyUXVlc3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RmtCLEFBR3dCLEFBU0osQUFTRSxTQVJFLEVBU0YsRUFsQjZCLFNBbUIzQiwrQkFsQkksaUJBQ0UsYUFRRyxNQVBULE9BaUJTLE1BaEJULDJEQU9VLGFBVUEsRUFoQnpCLG9GQU9lLGFBQ2YsQUFTcUIsNkZBQ3JCIiwiZmlsZSI6Ii9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyUXVlc3Rpb25zLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tIFwicmVhY3QtcXVlcnlcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuaW1wb3J0IGhvc3QgZnJvbSBcIi4uL3V0aWxzL2hvc3RcIjtcbmltcG9ydCB7IFVzZXJQb3N0c1R5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvdXNlclBvc3RzVHlwZVwiO1xuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcbmltcG9ydCBUYWcgZnJvbSBcIi4vVGFnXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHV1aWQ6IHN0cmluZztcbn1cblxuY29uc3QgVXNlclF1ZXN0aW9uczogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdXVpZCB9KSA9PiB7XG4gIGNvbnN0IFtwYWdlLCBzZXRQYWdlXSA9IHVzZVN0YXRlPG51bWJlcj4oMSk7XG5cbiAgY29uc3QgZmV0Y2hVc2VyUG9zdHMgPSBhc3luYyAocGFnZTogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICBgJHtob3N0fS91c2Vycy8ke3V1aWR9L3Bvc3RzP3BhZ2U9JHtwYWdlfSZsaW1pdD0yMGBcbiAgICApO1xuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICB9O1xuXG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0Vycm9yLCBlcnJvciwgZGF0YSwgaXNQcmV2aW91c0RhdGEgfSA9IHVzZVF1ZXJ5PFxuICAgIFVzZXJQb3N0c1R5cGUsXG4gICAgRXJyb3JcbiAgPihbXCJ1c2VyLXBvc3RzXCIsIHBhZ2VdLCAoKSA9PiBmZXRjaFVzZXJQb3N0cyhwYWdlKSwge1xuICAgIGtlZXBQcmV2aW91c0RhdGE6IHRydWUsXG4gICAgY2FjaGVUaW1lOiAwLFxuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgIDxkaXY+TG9hZGluZy4uLjwvZGl2PlxuICAgICAgKSA6IGlzRXJyb3IgPyAoXG4gICAgICAgIDxkaXY+e2Vycm9yLm1lc3NhZ2V9PC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItcG9zdHMtY29udGFpbmVyXCI+XG4gICAgICAgICAge2RhdGEucG9zdHMubWFwKChwb3N0KSA9PiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItcG9zdC1jb250YWluZXJcIiBrZXk9e3Bvc3QudXVpZH0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zdC1hc2lkZVwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidm90ZXNcIj5cbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm51bWJlclwiPntwb3N0LnZvdGVzfTwvcD5cbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHRcIj5Wb3Rle3Bvc3Qudm90ZXMgPT09IDEgPyBcIlwiIDogXCJzXCJ9PC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tbWVudHNcIj5cbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm51bWJlclwiPntwb3N0LmNvbW1lbnRzLmxlbmd0aH08L3A+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0XCI+XG4gICAgICAgICAgICAgICAgICAgIEFuc3dlcntwb3N0LmNvbW1lbnRzLmxlbmd0aCA9PT0gMSA/IFwiXCIgOiBcInNcIn1cbiAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zdC1tYWluXCI+XG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9xdWVzdGlvbnMvJHtwb3N0LnV1aWR9YH0+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJwb3N0LXRpdGxlXCI+e3Bvc3QudGl0bGV9PC9wPlxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3QtbWFpbi1ib3R0b21cIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tbXVuaXRpZXMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIHtwb3N0LmNvbW11bml0aWVzLnNsaWNlKDAsIDQpLm1hcCgoY29tbXVuaXR5KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgPFRhZyBuYW1lPXtjb21tdW5pdHkubmFtZX0ga2V5PXtjb21tdW5pdHkubmFtZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApKX1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2UtaGFuZGxlcnNcIj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0UGFnZSgob2xkKSA9PiBNYXRoLm1heChvbGQgLSAxLCAwKSl9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXtwYWdlID09PSAxfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBQcmV2aW91cyBQYWdlXG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghaXNQcmV2aW91c0RhdGEgJiYgZGF0YS5oYXNNb3JlKSB7XG4gICAgICAgICAgICAgICAgICBzZXRQYWdlKChvbGQpID0+IG9sZCArIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzUHJldmlvdXNEYXRhIHx8ICFkYXRhLmhhc01vcmV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIE5leHQgUGFnZVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAudXNlci1wb3N0LWNvbnRhaW5lciB7XG4gICAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5mbG9hdGluZ1Bvc3RCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBtYXJnaW46IDMwcHggMjBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0LWFzaWRlIHtcbiAgICAgICAgICB3aWR0aDogNyU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbjogMCA1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAudm90ZXMsXG4gICAgICAgIC5jb21tZW50cyB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlclF1ZXN0aW9ucztcbiJdfQ== */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserQuestions.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserQuestions;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserQuestions.tsx"],"names":["React","useState","useQuery","Link","host","css","Tag","UserQuestions","uuid","page","setPage","fetchUserPosts","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","cacheTime","floatingPostBackground","message","posts","map","post","votes","comments","length","title","communities","slice","community","name","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Link from \"next/link\";\n\nimport host from \"../utils/host\";\nimport { UserPostsType } from \"../utils/types/userPostsType\";\nimport * as css from \"../utils/cssVariables\";\nimport Tag from \"./Tag\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserQuestions: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserPosts = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/posts?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    UserPostsType,\n    Error\n  >([\"user-posts\", page], () => fetchUserPosts(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>{error.message}</div>\n      ) : (\n        <div className=\"user-posts-container\">\n          {data.posts.map((post) => (\n            <div className=\"user-post-container\" key={post.uuid}>\n              <div className=\"post-aside\">\n                <div className=\"votes\">\n                  <p className=\"number\">{post.votes}</p>\n                  <p className=\"text\">Vote{post.votes === 1 ? \"\" : \"s\"}</p>\n                </div>\n                <div className=\"comments\">\n                  <p className=\"number\">{post.comments.length}</p>\n                  <p className=\"text\">\n                    Answer{post.comments.length === 1 ? \"\" : \"s\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"post-main\">\n                <Link href={`/questions/${post.uuid}`}>\n                  <p className=\"post-title\">{post.title}</p>\n                </Link>\n                <div className=\"post-main-bottom\">\n                  <div className=\"communities-container\">\n                    {post.communities.slice(0, 4).map((community) => (\n                      <Tag name={community.name} key={community.name} />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n          <div className=\"page-handlers\">\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        .user-post-container {\n          height: 100px;\n          background: ${css.floatingPostBackground};\n          margin: 30px 20px;\n          border-radius: 10px;\n          padding: 15px;\n          display: flex;\n        }\n\n        .post-aside {\n          width: 7%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          margin: 0 5px;\n        }\n\n        .votes,\n        .comments {\n          width: 100%;\n          height: 50%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default UserQuestions;\n"]},"metadata":{},"sourceType":"module"}