{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\nvar Communities = function Communities() {\n  _s();\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchCommunities = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var page,\n          res,\n          data,\n          community,\n          res2,\n          data2,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n              _context.next = 3;\n              return fetch(\"\".concat(host, \"/communities?page=\").concat(page, \"&limit=5\"));\n\n            case 3:\n              res = _context.sent;\n              data = res.json();\n              _context.t0 = _regeneratorRuntime.keys(data.communities);\n\n            case 6:\n              if ((_context.t1 = _context.t0()).done) {\n                _context.next = 17;\n                break;\n              }\n\n              community = _context.t1.value;\n              _context.next = 10;\n              return fetch(\"\".concat(host, \"/communities/\").concat(community.uuid, \"/posts/count\"));\n\n            case 10:\n              res2 = _context.sent;\n              _context.next = 13;\n              return res2.json();\n\n            case 13:\n              data2 = _context.sent;\n              community = _objectSpread(_objectSpread({}, community), {}, {\n                data2: data2\n              });\n              _context.next = 6;\n              break;\n\n            case 17:\n              return _context.abrupt(\"return\", data);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCommunities() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"communities\", page], function () {\n    return fetchCommunities(page);\n  }, {\n    keepPreviousData: true\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isFetching = _useQuery.isFetching,\n      isPreviousData = _useQuery.isPreviousData;\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communities-container\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [data.communities.map(function (community) {\n          return /*#__PURE__*/_jsxDEV(Community, {\n            uuid: community.uuid,\n            name: community.name,\n            description: community.description\n          }, community.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return setPage(function (old) {\n              return Math.max(old - 1, 0);\n            });\n          },\n          disabled: page === 1,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            if (!isPreviousData && data.hasMore) {\n              setPage(function (old) {\n                return old + 1;\n              });\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, _this), isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Communities, \"ROZZXDCpSyTccMsQYEDldIx7+gA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Communities;\nexport default Communities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Communities\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx"],"names":["React","useState","useQuery","host","Community","Communities","page","setPage","fetchCommunities","fetch","res","data","json","communities","community","uuid","res2","data2","keepPreviousData","isLoading","isError","error","isFetching","isPreviousData","console","log","message","map","name","description","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\ntype DataType = {\n  communities: CommunityType[];\n  hasMore: boolean;\n};\n\nconst Communities: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchCommunities = async (page: number = 1) => {\n    const res = await fetch(`${host}/communities?page=${page}&limit=5`);\n    const data: DataType = res.json();\n    for (let community in data.communities) {\n      const res2 = await fetch(\n        `${host}/communities/${community.uuid}/posts/count`\n      );\n      const data2 = await res2.json();\n      community = { ...community, data2 };\n    }\n    return data;\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<DataType, Error>(\n    [\"communities\", page],\n    () => fetchCommunities(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  console.log(data);\n\n  return (\n    <React.Fragment>\n      <div className=\"communities-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <React.Fragment>\n            {data.communities.map((community) => (\n              <Community\n                uuid={community.uuid}\n                name={community.name}\n                description={community.description}\n                key={community.uuid}\n              />\n            ))}\n            <span>Current Page: {page}</span>\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </React.Fragment>\n        )}\n        {isFetching ? <span>Loading...</span> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n"]},"metadata":{},"sourceType":"module"}