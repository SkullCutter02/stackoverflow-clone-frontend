{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/[community]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"react-query\";\nimport host from \"../../utils/host\";\n\nvar CommunityPostPage = function CommunityPostPage() {\n  _s();\n\n  var _useState = useState(localStorage.getItem(\"communityUuid\")),\n      uuid = _useState[0],\n      setUuid = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var router = useRouter();\n  var community = router.query.community;\n\n  var fetchPosts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!uuid) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch(\"\".concat(host, \"/communities/\").concat(uuid, \"/posts?page=\").concat(page, \"&limit=10\"));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchPosts(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"community-posts\", page], function () {\n    return fetchPosts(page);\n  }, {\n    keepPreviousData: true\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isFetching = _useQuery.isFetching,\n      isPreviousData = _useQuery.isPreviousData;\n\n  useEffect(function () {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: community\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(CommunityPostPage, \"bPTn+1Ye06LfJAh9mc/jKKKZr9s=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = CommunityPostPage;\nexport default CommunityPostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommunityPostPage\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/[community]/index.tsx"],"names":["React","useEffect","useState","useRouter","useQuery","host","CommunityPostPage","localStorage","getItem","uuid","setUuid","page","setPage","router","community","query","fetchPosts","fetch","res","json","keepPreviousData","isLoading","isError","error","data","isFetching","isPreviousData","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;;AAGA,IAAMC,iBAA2B,GAAG,SAA9BA,iBAA8B,GAAM;AAAA;;AAAA,kBAChBJ,QAAQ,CAC9BK,YAAY,CAACC,OAAb,CAAqB,eAArB,CAD8B,CADQ;AAAA,MACjCC,IADiC;AAAA,MAC3BC,OAD2B;;AAAA,mBAIhBR,QAAQ,CAAS,CAAT,CAJQ;AAAA,MAIjCS,IAJiC;AAAA,MAI3BC,OAJ2B;;AAKxC,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AALwC,MAMhCW,SANgC,GAMlBD,MAAM,CAACE,KANW,CAMhCD,SANgC;;AAQxC,MAAME,UAAU;AAAA,wEAAG,iBAAOL,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACbF,IADa;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEGQ,KAAK,WAClBZ,IADkB,0BACEI,IADF,yBACqBE,IADrB,eAFR;;AAAA;AAETO,cAAAA,GAFS;AAAA;AAAA,qBAKFA,GAAG,CAACC,IAAJ,EALE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVH,UAAU;AAAA;AAAA;AAAA,KAAhB;;AARwC,kBAwBpCZ,QAAQ,CACV,CAAC,iBAAD,EAAoBO,IAApB,CADU,EAEV;AAAA,WAAMK,UAAU,CAACL,IAAD,CAAhB;AAAA,GAFU,EAGV;AACES,IAAAA,gBAAgB,EAAE;AADpB,GAHU,CAxB4B;AAAA,MAkBtCC,SAlBsC,aAkBtCA,SAlBsC;AAAA,MAmBtCC,OAnBsC,aAmBtCA,OAnBsC;AAAA,MAoBtCC,KApBsC,aAoBtCA,KApBsC;AAAA,MAqBtCC,IArBsC,aAqBtCA,IArBsC;AAAA,MAsBtCC,UAtBsC,aAsBtCA,UAtBsC;AAAA,MAuBtCC,cAvBsC,aAuBtCA,cAvBsC;;AAgCxCzB,EAAAA,SAAS,CAAC,YAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBAAO;AAAA,cAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CArCD;;GAAMR,iB;UAKWH,S,EAmBXC,Q;;;KAxBAE,iB;AAuCN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../../utils/host\";\nimport { CommunityPostsType } from \"../../utils/types/postType\";\n\nconst CommunityPostPage: React.FC = () => {\n  const [uuid, setUuid] = useState<string>(\n    localStorage.getItem(\"communityUuid\")\n  );\n  const [page, setPage] = useState<number>(1);\n  const router = useRouter();\n  const { community } = router.query;\n\n  const fetchPosts = async (page: number) => {\n    if (uuid) {\n      const res = await fetch(\n        `${host}/communities/${uuid}/posts?page=${page}&limit=10`\n      );\n      return await res.json();\n    }\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<CommunityPostsType, Error>(\n    [\"community-posts\", page],\n    () => fetchPosts(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  return <div>{community}</div>;\n};\n\nexport default CommunityPostPage;\n"]},"metadata":{},"sourceType":"module"}