{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQueryClient } from \"react-query\";\nimport * as css from \"../utils/cssVariables\";\nimport Spinner from \"./Spinner\";\nimport { UserContext } from \"../context/UserContext\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\n\nconst EditAnswer = ({\n  setEditMode,\n  comment\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(comment.body);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"Save\");\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const spinner = useRef(null);\n\n  const editForm = e => {\n    e.preventDefault();\n\n    if (userContext.user) {\n      spinner.current.style.display = \"block\";\n      setText(\"\");\n      fetch(`${host}/posts/comments/${comment.uuid}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        },\n        body: JSON.stringify({\n          body: body,\n          userUuid: userContext.user.uuid\n        })\n      }).then(async res => {\n        if (res.status >= 200 && res.status < 300) {\n          await queryClient.prefetchQuery([\"individual-question\"]);\n          setEditMode(false);\n        } else {\n          alert(\"Something went wrong\");\n          setText(\"Save\");\n          spinner.current.style.display = \"none\";\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editForm,\n      className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"edit-answer-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-answer-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"save\",\n          children: [text, /*#__PURE__*/_jsxDEV(Spinner, {\n            spinner: spinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const confirm = window.confirm(\"Are you sure to discard your changes?\");\n\n            if (confirm) {\n              setEditMode(false);\n            }\n          },\n          className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3034814656\",\n      dynamic: [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover],\n      children: `.edit-answer-body.__jsx-style-dynamic-selector{margin:20px auto;width:90%;}#edit-form-body.__jsx-style-dynamic-selector{width:100%;resize:none;height:200px;margin-bottom:20px;background:${css.inputBackground};border:2px solid ${css.inputBorder};color:#fff;padding:15px;}.buttons-container.__jsx-style-dynamic-selector{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;margin-bottom:-10px;}button.__jsx-style-dynamic-selector{margin-left:20px;border:none;border-radius:4px;width:80px;height:25px;cursor:pointer;color:#fff;font-size:0.8rem;}.save.__jsx-style-dynamic-selector{background:${css.mainButton};}.save.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}.cancel.__jsx-style-dynamic-selector{background:${css.cancelButton};}.cancel.__jsx-style-dynamic-selector:hover{background:${css.cancelButtonHover};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0QW5zd2VyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyRmtCLEFBRzRCLEFBS04sQUFXQSxBQU9NLEFBV3VCLEFBSUEsQUFJQSxBQUlBLFdBeEM1QixBQVdDLE1BaEJILEFBdUJFLE1BakJDLElBTGYsRUF1Qm9CLE9BakJDLElBMkJyQixBQUlBLEFBSUEsQUFJQSxPQXJCYSxRQWpCNkIsR0FrQjVCLFlBQ0csZUFWVSxBQVdkLFVBbkJtQyxDQW9CN0IsaUJBQ25CLDRCQXBCYSxXQUNFLGFBQ2YsaUJBTXNCLG9CQUN0QiIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvRWRpdEFuc3dlci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNvbnRleHQsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5pbXBvcnQgeyB1c2VRdWVyeUNsaWVudCB9IGZyb20gXCJyZWFjdC1xdWVyeVwiO1xuXG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvaW5kaXZpZHVhbFF1ZXN0aW9uVHlwZVwiO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSBcIi4vU3Bpbm5lclwiO1xuaW1wb3J0IHsgVXNlckNvbnRleHQgfSBmcm9tIFwiLi4vY29udGV4dC9Vc2VyQ29udGV4dFwiO1xuaW1wb3J0IGhvc3QgZnJvbSBcIi4uL3V0aWxzL2hvc3RcIjtcbmltcG9ydCB7IGdldENvb2tpZSB9IGZyb20gXCIuLi91dGlscy9mdW5jdGlvbnNcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2V0RWRpdE1vZGU6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPGJvb2xlYW4+PjtcbiAgY29tbWVudDogQ29tbWVudFR5cGU7XG59XG5cbmNvbnN0IEVkaXRBbnN3ZXI6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHNldEVkaXRNb2RlLCBjb21tZW50IH0pID0+IHtcbiAgY29uc3QgW2JvZHksIHNldEJvZHldID0gdXNlU3RhdGU8c3RyaW5nPihjb21tZW50LmJvZHkpO1xuICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiU2F2ZVwiKTtcblxuICBjb25zdCB1c2VyQ29udGV4dCA9IHVzZUNvbnRleHQoVXNlckNvbnRleHQpO1xuICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KCk7XG4gIGNvbnN0IHNwaW5uZXIgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGVkaXRGb3JtID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAodXNlckNvbnRleHQudXNlcikge1xuICAgICAgc3Bpbm5lci5jdXJyZW50LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICBzZXRUZXh0KFwiXCIpO1xuXG4gICAgICBmZXRjaChgJHtob3N0fS9wb3N0cy9jb21tZW50cy8ke2NvbW1lbnQudXVpZH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2dldENvb2tpZShcInRva2VuXCIpfWAsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBib2R5OiBib2R5LFxuICAgICAgICAgIHVzZXJVdWlkOiB1c2VyQ29udGV4dC51c2VyLnV1aWQsXG4gICAgICAgIH0pLFxuICAgICAgfSkudGhlbihhc3luYyAocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMuc3RhdHVzID49IDIwMCAmJiByZXMuc3RhdHVzIDwgMzAwKSB7XG4gICAgICAgICAgYXdhaXQgcXVlcnlDbGllbnQucHJlZmV0Y2hRdWVyeShbXCJpbmRpdmlkdWFsLXF1ZXN0aW9uXCJdKTtcbiAgICAgICAgICBzZXRFZGl0TW9kZShmYWxzZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWxlcnQoXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiKTtcbiAgICAgICAgICBzZXRUZXh0KFwiU2F2ZVwiKTtcbiAgICAgICAgICBzcGlubmVyLmN1cnJlbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8Zm9ybSBjbGFzc05hbWU9XCJlZGl0LWFuc3dlci1ib2R5XCIgb25TdWJtaXQ9e2VkaXRGb3JtfT5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgaWQ9XCJlZGl0LWZvcm0tYm9keVwiXG4gICAgICAgICAgY29scz17MzB9XG4gICAgICAgICAgcm93cz17MTB9XG4gICAgICAgICAgdmFsdWU9e2JvZHl9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRCb2R5KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgLz5cbiAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICBjbGFzc05hbWU9XCJwcmV2aWV3IGVkaXQtYW5zd2VyLXByZXZpZXdcIlxuICAgICAgICAgIHNvdXJjZT17Ym9keX1cbiAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXR0b25zLWNvbnRhaW5lclwiPlxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic2F2ZVwiPlxuICAgICAgICAgICAge3RleHR9XG4gICAgICAgICAgICA8U3Bpbm5lciBzcGlubmVyPXtzcGlubmVyfSAvPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgY29uZmlybSA9IHdpbmRvdy5jb25maXJtKFxuICAgICAgICAgICAgICAgIFwiQXJlIHlvdSBzdXJlIHRvIGRpc2NhcmQgeW91ciBjaGFuZ2VzP1wiXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIGlmIChjb25maXJtKSB7XG4gICAgICAgICAgICAgICAgc2V0RWRpdE1vZGUoZmFsc2UpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2FuY2VsXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBDYW5jZWxcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmVkaXQtYW5zd2VyLWJvZHkge1xuICAgICAgICAgIG1hcmdpbjogMjBweCBhdXRvO1xuICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgIH1cblxuICAgICAgICAjZWRpdC1mb3JtLWJvZHkge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaW5wdXRCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke2Nzcy5pbnB1dEJvcmRlcn07XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5idXR0b25zLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IC0xMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIHdpZHRoOiA4MHB4O1xuICAgICAgICAgIGhlaWdodDogMjVweDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgICAgIH1cblxuICAgICAgICAuc2F2ZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MubWFpbkJ1dHRvbn07XG4gICAgICAgIH1cblxuICAgICAgICAuc2F2ZTpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MubWFpbkJ1dHRvbkhvdmVyfTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYW5jZWwge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmNhbmNlbEJ1dHRvbn07XG4gICAgICAgIH1cblxuICAgICAgICAuY2FuY2VsOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5jYW5jZWxCdXR0b25Ib3Zlcn07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRWRpdEFuc3dlcjtcbiJdfQ== */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EditAnswer;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx"],"names":["React","useState","useContext","useRef","ReactMarkdown","remarkGfm","useQueryClient","css","Spinner","UserContext","host","getCookie","EditAnswer","setEditMode","comment","body","setBody","text","setText","userContext","queryClient","spinner","editForm","e","preventDefault","user","current","style","display","fetch","uuid","method","headers","Authorization","JSON","stringify","userUuid","then","res","status","prefetchQuery","alert","inputBackground","inputBorder","mainButton","mainButtonHover","cancelButton","cancelButtonHover","target","value","confirm","window"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQueryClient } from \"react-query\";\n\nimport * as css from \"../utils/cssVariables\";\nimport { CommentType } from \"../utils/types/individualQuestionType\";\nimport Spinner from \"./Spinner\";\nimport { UserContext } from \"../context/UserContext\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  comment: CommentType;\n}\n\nconst EditAnswer: React.FC<Props> = ({ setEditMode, comment }) => {\n  const [body, setBody] = useState<string>(comment.body);\n  const [text, setText] = useState<string>(\"Save\");\n\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const spinner = useRef<HTMLDivElement>(null);\n\n  const editForm = (e) => {\n    e.preventDefault();\n\n    if (userContext.user) {\n      spinner.current.style.display = \"block\";\n      setText(\"\");\n\n      fetch(`${host}/posts/comments/${comment.uuid}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`,\n        },\n        body: JSON.stringify({\n          body: body,\n          userUuid: userContext.user.uuid,\n        }),\n      }).then(async (res) => {\n        if (res.status >= 200 && res.status < 300) {\n          await queryClient.prefetchQuery([\"individual-question\"]);\n          setEditMode(false);\n        } else {\n          alert(\"Something went wrong\");\n          setText(\"Save\");\n          spinner.current.style.display = \"none\";\n        }\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-answer-body\" onSubmit={editForm}>\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-answer-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n        <div className=\"buttons-container\">\n          <button className=\"save\">\n            {text}\n            <Spinner spinner={spinner} />\n          </button>\n          <button\n            onClick={() => {\n              const confirm = window.confirm(\n                \"Are you sure to discard your changes?\"\n              );\n              if (confirm) {\n                setEditMode(false);\n              }\n            }}\n            className=\"cancel\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      <style jsx>{`\n        .edit-answer-body {\n          margin: 20px auto;\n          width: 90%;\n        }\n\n        #edit-form-body {\n          width: 100%;\n          resize: none;\n          height: 200px;\n          margin-bottom: 20px;\n          background: ${css.inputBackground};\n          border: 2px solid ${css.inputBorder};\n          color: #fff;\n          padding: 15px;\n        }\n\n        .buttons-container {\n          width: 100%;\n          display: flex;\n          justify-content: flex-end;\n          margin-bottom: -10px;\n        }\n\n        button {\n          margin-left: 20px;\n          border: none;\n          border-radius: 4px;\n          width: 80px;\n          height: 25px;\n          cursor: pointer;\n          color: #fff;\n          font-size: 0.8rem;\n        }\n\n        .save {\n          background: ${css.mainButton};\n        }\n\n        .save:hover {\n          background: ${css.mainButtonHover};\n        }\n\n        .cancel {\n          background: ${css.cancelButton};\n        }\n\n        .cancel:hover {\n          background: ${css.cancelButtonHover};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default EditAnswer;\n"]},"metadata":{},"sourceType":"module"}