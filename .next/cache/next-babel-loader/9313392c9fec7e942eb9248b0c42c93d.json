{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport ReactMarkdown from \"react-markdown\";\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport PageHandlers from \"./PageHandlers\";\n\nvar UserAnswers = function UserAnswers(_ref) {\n  _s();\n\n  var uuid = _ref.uuid;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchUserAnswers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/users/\").concat(uuid, \"/comments?page=\").concat(page, \"&limit=20\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchUserAnswers(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"user-answers\", page], function () {\n    return fetchUserAnswers(page);\n  }, {\n    keepPreviousData: true,\n    cacheTime: 0\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isPreviousData = _useQuery.isPreviousData;\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]),\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: data.comments.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]) + \" \" + \"user-answers-container\",\n          children: data.comments.map(function (answer) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]) + \" \" + \"user-answer-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]) + \" \" + \"left\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]),\n                  children: answer.votes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]),\n                  children: \"Votes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]) + \" \" + \"main\",\n                children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  source: answer.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(PageHandlers, {\n          page: page,\n          setPage: setPage,\n          isPreviousData: isPreviousData,\n          hasMore: data.hasMore,\n          width: 97\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]) + \" \" + \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: _JSXStyle.dynamic([[\"1107208111\", [css.floatingPostBackground]]]),\n          children: \"This user doesn't have any answers...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1107208111\",\n      dynamic: [css.floatingPostBackground],\n      children: \".user-answer-container.__jsx-style-dynamic-selector{margin:30px 20px;padding:15px 20px;background:\".concat(css.floatingPostBackground, \";border-radius:10px;}.empty.__jsx-style-dynamic-selector{height:300px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.left.__jsx-style-dynamic-selector{width:3%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.left.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{color:#dedede;font-size:0.9rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyQW5zd2Vycy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0VrQixBQUc0QixBQU9KLEFBT0osQUFRSyxTQVBELElBUEEsQ0FlSSxHQXRCQyxjQXVCcEIsSUF0QjBDLHdDQUNyQixRQWFHLElBUEMsT0FMekIsbUVBYXFCLHlCQVBBLG9FQVFRLHlCQVA3QixnRkFRQSIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvVXNlckFuc3dlcnMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJyZWFjdC1xdWVyeVwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5pbXBvcnQgaGxqcyBmcm9tIFwiaGlnaGxpZ2h0LmpzXCI7XG5cbmltcG9ydCBob3N0IGZyb20gXCIuLi91dGlscy9ob3N0XCI7XG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgVXNlckFuc3dlcnNUeXBlIH0gZnJvbSBcIi4uL3V0aWxzL3R5cGVzL3VzZXJBbnN3ZXJzVHlwZVwiO1xuaW1wb3J0IFBhZ2VIYW5kbGVycyBmcm9tIFwiLi9QYWdlSGFuZGxlcnNcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgdXVpZDogc3RyaW5nO1xufVxuXG5jb25zdCBVc2VyQW5zd2VyczogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdXVpZCB9KSA9PiB7XG4gIGNvbnN0IFtwYWdlLCBzZXRQYWdlXSA9IHVzZVN0YXRlPG51bWJlcj4oMSk7XG5cbiAgY29uc3QgZmV0Y2hVc2VyQW5zd2VycyA9IGFzeW5jIChwYWdlOiBudW1iZXIpID0+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICAgIGAke2hvc3R9L3VzZXJzLyR7dXVpZH0vY29tbWVudHM/cGFnZT0ke3BhZ2V9JmxpbWl0PTIwYFxuICAgICk7XG4gICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7XG4gIH07XG5cbiAgY29uc3QgeyBpc0xvYWRpbmcsIGlzRXJyb3IsIGVycm9yLCBkYXRhLCBpc1ByZXZpb3VzRGF0YSB9ID0gdXNlUXVlcnk8XG4gICAgVXNlckFuc3dlcnNUeXBlLFxuICAgIEVycm9yXG4gID4oW1widXNlci1hbnN3ZXJzXCIsIHBhZ2VdLCAoKSA9PiBmZXRjaFVzZXJBbnN3ZXJzKHBhZ2UpLCB7XG4gICAga2VlcFByZXZpb3VzRGF0YTogdHJ1ZSxcbiAgICBjYWNoZVRpbWU6IDAsXG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAge2lzTG9hZGluZyA/IChcbiAgICAgICAgPGRpdj5Mb2FkaW5nLi4uPC9kaXY+XG4gICAgICApIDogaXNFcnJvciA/IChcbiAgICAgICAgPGRpdj57ZXJyb3IubWVzc2FnZX08L2Rpdj5cbiAgICAgICkgOiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB7ZGF0YS5jb21tZW50cy5sZW5ndGggIT09IDAgPyAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItYW5zd2Vycy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICB7ZGF0YS5jb21tZW50cy5tYXAoKGFuc3dlcikgPT4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLWFuc3dlci1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHA+e2Fuc3dlci52b3Rlc308L3A+XG4gICAgICAgICAgICAgICAgICAgICAgPHA+Vm90ZXM8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1haW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RNYXJrZG93biBzb3VyY2U9e2Fuc3dlci5ib2R5fSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPFBhZ2VIYW5kbGVyc1xuICAgICAgICAgICAgICAgIHBhZ2U9e3BhZ2V9XG4gICAgICAgICAgICAgICAgc2V0UGFnZT17c2V0UGFnZX1cbiAgICAgICAgICAgICAgICBpc1ByZXZpb3VzRGF0YT17aXNQcmV2aW91c0RhdGF9XG4gICAgICAgICAgICAgICAgaGFzTW9yZT17ZGF0YS5oYXNNb3JlfVxuICAgICAgICAgICAgICAgIHdpZHRoPXs5N31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVtcHR5XCI+XG4gICAgICAgICAgICAgIDxoMT5UaGlzIHVzZXIgZG9lc24ndCBoYXZlIGFueSBhbnN3ZXJzLi4uPC9oMT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICApfVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC51c2VyLWFuc3dlci1jb250YWluZXIge1xuICAgICAgICAgIG1hcmdpbjogMzBweCAyMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHggMjBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5mbG9hdGluZ1Bvc3RCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmVtcHR5IHtcbiAgICAgICAgICBoZWlnaHQ6IDMwMHB4O1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5sZWZ0IHtcbiAgICAgICAgICB3aWR0aDogMyU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICB9XG5cbiAgICAgICAgLmxlZnQgcCB7XG4gICAgICAgICAgY29sb3I6ICNkZWRlZGU7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlckFuc3dlcnM7XG4iXX0= */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx */\")\n    }, void 0, false, void 0, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UserAnswers, \"B8AHcuIhDtcfT64L9EclU84Jm5E=\", false, function () {\n  return [useQuery];\n});\n\n_c = UserAnswers;\nexport default UserAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAnswers\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx"],"names":["React","useState","useQuery","ReactMarkdown","host","css","PageHandlers","UserAnswers","uuid","page","setPage","fetchUserAnswers","fetch","res","json","keepPreviousData","cacheTime","isLoading","isError","error","data","isPreviousData","floatingPostBackground","message","comments","length","map","answer","votes","body","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport hljs from \"highlight.js\";\n\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport { UserAnswersType } from \"../utils/types/userAnswersType\";\nimport PageHandlers from \"./PageHandlers\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserAnswers: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserAnswers = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/comments?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    UserAnswersType,\n    Error\n  >([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>{error.message}</div>\n      ) : (\n        <React.Fragment>\n          {data.comments.length !== 0 ? (\n            <div>\n              <div className=\"user-answers-container\">\n                {data.comments.map((answer) => (\n                  <div className=\"user-answer-container\">\n                    <div className=\"left\">\n                      <p>{answer.votes}</p>\n                      <p>Votes</p>\n                    </div>\n                    <div className=\"main\">\n                      <ReactMarkdown source={answer.body} />\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <PageHandlers\n                page={page}\n                setPage={setPage}\n                isPreviousData={isPreviousData}\n                hasMore={data.hasMore}\n                width={97}\n              />\n            </div>\n          ) : (\n            <div className=\"empty\">\n              <h1>This user doesn't have any answers...</h1>\n            </div>\n          )}\n        </React.Fragment>\n      )}\n\n      <style jsx>{`\n        .user-answer-container {\n          margin: 30px 20px;\n          padding: 15px 20px;\n          background: ${css.floatingPostBackground};\n          border-radius: 10px;\n        }\n\n        .empty {\n          height: 300px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .left {\n          width: 3%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n        }\n\n        .left p {\n          color: #dedede;\n          font-size: 0.9rem;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default UserAnswers;\n"]},"metadata":{},"sourceType":"module"}