{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\nvar Communities = function Communities() {\n  _s();\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchCommunities = function fetchCommunities() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    fetch(\"\".concat(host, \"/communities?page=\").concat(page, \"&limit=5\")).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var _loop = function _loop(_community) {\n        fetch(\"\".concat(host, \"/communities/\").concat(_community.uuid, \"/posts/count\")).then(function (res2) {\n          return res2.json();\n        }).then(function (data2) {\n          _community = _objectSpread(_objectSpread({}, _community), {}, {\n            data2: data2\n          });\n        });\n        community = _community;\n      };\n\n      for (var community in data) {\n        _loop(community);\n      }\n    });\n  };\n\n  var _useQuery = useQuery([\"communities\", page], function () {\n    return fetchCommunities(page);\n  }, {\n    keepPreviousData: true\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isFetching = _useQuery.isFetching,\n      isPreviousData = _useQuery.isPreviousData;\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communities-container\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [data.communities.map(function (community) {\n          return /*#__PURE__*/_jsxDEV(Community, {\n            uuid: community.uuid,\n            name: community.name,\n            description: community.description\n          }, community.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return setPage(function (old) {\n              return Math.max(old - 1, 0);\n            });\n          },\n          disabled: page === 1,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            if (!isPreviousData && data.hasMore) {\n              setPage(function (old) {\n                return old + 1;\n              });\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this), isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Communities, \"ROZZXDCpSyTccMsQYEDldIx7+gA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Communities;\nexport default Communities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Communities\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx"],"names":["React","useState","useQuery","host","Community","Communities","page","setPage","fetchCommunities","fetch","then","res","json","data","community","uuid","res2","data2","keepPreviousData","isLoading","isError","error","isFetching","isPreviousData","message","communities","map","name","description","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\ntype DataType = {\n  communities: CommunityType[];\n  hasMore: boolean;\n};\n\nconst Communities: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchCommunities = (page: number = 1) => {\n    fetch(`${host}/communities?page=${page}&limit=5`)\n      .then((res) => res.json())\n      .then((data) => {\n        for (let community in data) {\n          fetch(`${host}/communities/${community.uuid}/posts/count`)\n            .then((res2) => res2.json())\n            .then((data2) => {\n              community = { ...community, data2 };\n            });\n        }\n      });\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<DataType, Error>(\n    [\"communities\", page],\n    () => fetchCommunities(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"communities-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <React.Fragment>\n            {data.communities.map((community) => (\n              <Community\n                uuid={community.uuid}\n                name={community.name}\n                description={community.description}\n                key={community.uuid}\n              />\n            ))}\n            <span>Current Page: {page}</span>\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </React.Fragment>\n        )}\n        {isFetching ? <span>Loading...</span> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n"]},"metadata":{},"sourceType":"module"}