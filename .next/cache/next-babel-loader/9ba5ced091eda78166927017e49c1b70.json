{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answers.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport * as css from \"../utils/cssVariables\";\nimport AskedBy from \"./AskedBy\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst Answers = ({\n  question\n}) => {\n  const {\n    0: votes,\n    1: setVotes\n  } = useState(question.votes);\n  const {\n    0: upvoteColor,\n    1: setUpvoteColor\n  } = useState(\"grey\");\n  const {\n    0: downvoteColor,\n    1: setDownvoteColor\n  } = useState(\"grey\");\n  const userContext = useContext(UserContext);\n  const style = {\n    cursor: \"pointer\"\n  };\n\n  const vote = voteType => {};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"4042473474\", [css.floatingPostBackground]]]) + \" \" + \"answers-container\",\n      children: question.comments.map(comment => {\n        var _userContext$user;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"4042473474\", [css.floatingPostBackground]]]) + \" \" + \"answer-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"4042473474\", [css.floatingPostBackground]]]) + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortUp,\n              color: upvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"upvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#c6c6c6\",\n                margin: \"-8px 0\"\n              },\n              className: _JSXStyle.dynamic([[\"4042473474\", [css.floatingPostBackground]]]) + \" \" + \"vote-count\",\n              children: votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortDown,\n              color: downvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"downvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"95%\"\n            },\n            className: _JSXStyle.dynamic([[\"4042473474\", [css.floatingPostBackground]]]),\n            children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              className: \"preview answer-pre\",\n              source: comment.body,\n              plugins: [remarkGfm]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"4042473474\", [css.floatingPostBackground]]]) + \" \" + \"user\",\n              children: /*#__PURE__*/_jsxDEV(AskedBy, {\n                type: \"answered\",\n                username: comment.user.username,\n                createdAt: comment.createdAt,\n                postUuid: comment.user.uuid,\n                userUuid: userContext === null || userContext === void 0 ? void 0 : (_userContext$user = userContext.user) === null || _userContext$user === void 0 ? void 0 : _userContext$user.uuid,\n                reputation: comment.user.reputation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, comment.uuid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"4042473474\",\n      dynamic: [css.floatingPostBackground],\n      children: `.answers-container.__jsx-style-dynamic-selector{width:85%;margin:0 auto 70px;}.answer-container.__jsx-style-dynamic-selector{width:100%;margin-bottom:30px;padding:5px 5px 20px;border-radius:10px;background:${css.floatingPostBackground};position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.user.__jsx-style-dynamic-selector{position:absolute;bottom:10px;right:5px;}.votes.__jsx-style-dynamic-selector{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-top:14px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9BbnN3ZXJzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyRWtCLEFBR3FCLEFBS0MsQUFVTyxBQU1ULFNBQ0ksQ0FyQk0sQ0FLQSxPQVVQLFdBZGQsQ0FLdUIsQUFVWCxVQUNaLFdBVnFCLG1CQUNxQixhQWNsQiwyQkFiSixrQkFDTCxpQ0FhTSx5Q0FackIsb0RBYTZCLHlHQUNYLGdCQUNsQiIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvQW5zd2Vycy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IHJlbWFya0dmbSBmcm9tIFwicmVtYXJrLWdmbVwiO1xuaW1wb3J0IHsgRm9udEF3ZXNvbWVJY29uIH0gZnJvbSBcIkBmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZVwiO1xuaW1wb3J0IHsgZmFTb3J0VXAsIGZhU29ydERvd24gfSBmcm9tIFwiQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zXCI7XG5cbmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy9pbmRpdmlkdWFsUXVlc3Rpb25UeXBlXCI7XG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IEFza2VkQnkgZnJvbSBcIi4vQXNrZWRCeVwiO1xuaW1wb3J0IHsgVXNlckNvbnRleHQgfSBmcm9tIFwiLi4vY29udGV4dC9Vc2VyQ29udGV4dFwiO1xuaW1wb3J0IEFuc3dlciBmcm9tIFwiLi9BbnN3ZXJcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgcXVlc3Rpb246IFF1ZXN0aW9uVHlwZTtcbn1cblxuY29uc3QgQW5zd2VyczogUmVhY3QuRkM8UHJvcHM+ID0gKHsgcXVlc3Rpb24gfSkgPT4ge1xuICBjb25zdCBbdm90ZXMsIHNldFZvdGVzXSA9IHVzZVN0YXRlPG51bWJlcj4ocXVlc3Rpb24udm90ZXMpO1xuICBjb25zdCBbdXB2b3RlQ29sb3IsIHNldFVwdm90ZUNvbG9yXSA9IHVzZVN0YXRlPHN0cmluZz4oXCJncmV5XCIpO1xuICBjb25zdCBbZG93bnZvdGVDb2xvciwgc2V0RG93bnZvdGVDb2xvcl0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiZ3JleVwiKTtcblxuICBjb25zdCB1c2VyQ29udGV4dCA9IHVzZUNvbnRleHQoVXNlckNvbnRleHQpO1xuXG4gIGNvbnN0IHN0eWxlID0geyBjdXJzb3I6IFwicG9pbnRlclwiIH07XG5cbiAgY29uc3Qgdm90ZSA9ICh2b3RlVHlwZTogXCJ1cHZvdGVcIiB8IFwiZG93bnZvdGVcIikgPT4ge307XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuc3dlcnMtY29udGFpbmVyXCI+XG4gICAgICAgIHtxdWVzdGlvbi5jb21tZW50cy5tYXAoKGNvbW1lbnQpID0+IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFuc3dlci1jb250YWluZXJcIiBrZXk9e2NvbW1lbnQudXVpZH0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZvdGVzXCI+XG4gICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25cbiAgICAgICAgICAgICAgICBpY29uPXtmYVNvcnRVcH1cbiAgICAgICAgICAgICAgICBjb2xvcj17dXB2b3RlQ29sb3J9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgICAgICAgIHNpemU9e1wiMnhcIn1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2b3RlKFwidXB2b3RlXCIpfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8cFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInZvdGUtY291bnRcIlxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGNvbG9yOiBcIiNjNmM2YzZcIiwgbWFyZ2luOiBcIi04cHggMFwiIH19XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dm90ZXN9XG4gICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblxuICAgICAgICAgICAgICAgIGljb249e2ZhU29ydERvd259XG4gICAgICAgICAgICAgICAgY29sb3I9e2Rvd252b3RlQ29sb3J9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgICAgICAgIHNpemU9e1wiMnhcIn1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2b3RlKFwiZG93bnZvdGVcIil9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6IFwiOTUlXCIgfX0+XG4gICAgICAgICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHJldmlldyBhbnN3ZXItcHJlXCJcbiAgICAgICAgICAgICAgICBzb3VyY2U9e2NvbW1lbnQuYm9keX1cbiAgICAgICAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyXCI+XG4gICAgICAgICAgICAgICAgPEFza2VkQnlcbiAgICAgICAgICAgICAgICAgIHR5cGU9e1wiYW5zd2VyZWRcIn1cbiAgICAgICAgICAgICAgICAgIHVzZXJuYW1lPXtjb21tZW50LnVzZXIudXNlcm5hbWV9XG4gICAgICAgICAgICAgICAgICBjcmVhdGVkQXQ9e2NvbW1lbnQuY3JlYXRlZEF0fVxuICAgICAgICAgICAgICAgICAgcG9zdFV1aWQ9e2NvbW1lbnQudXNlci51dWlkfVxuICAgICAgICAgICAgICAgICAgdXNlclV1aWQ9e3VzZXJDb250ZXh0Py51c2VyPy51dWlkfVxuICAgICAgICAgICAgICAgICAgcmVwdXRhdGlvbj17Y29tbWVudC51c2VyLnJlcHV0YXRpb259XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuYW5zd2Vycy1jb250YWluZXIge1xuICAgICAgICAgIHdpZHRoOiA4NSU7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG8gNzBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5hbnN3ZXItY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDVweCA1cHggMjBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmZsb2F0aW5nUG9zdEJhY2tncm91bmR9O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnVzZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBib3R0b206IDEwcHg7XG4gICAgICAgICAgcmlnaHQ6IDVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC52b3RlcyB7XG4gICAgICAgICAgd2lkdGg6IDUlO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFuc3dlcnM7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answers.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Answers;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answers.tsx"],"names":["React","useContext","useState","ReactMarkdown","remarkGfm","FontAwesomeIcon","faSortUp","faSortDown","css","AskedBy","UserContext","Answers","question","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","userContext","style","cursor","vote","voteType","floatingPostBackground","comments","map","comment","color","margin","width","body","user","username","createdAt","uuid","reputation"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport * as css from \"../utils/cssVariables\";\nimport AskedBy from \"./AskedBy\";\nimport { UserContext } from \"../context/UserContext\";\nimport Answer from \"./Answer\";\n\ninterface Props {\n  question: QuestionType;\n}\n\nconst Answers: React.FC<Props> = ({ question }) => {\n  const [votes, setVotes] = useState<number>(question.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n\n  const userContext = useContext(UserContext);\n\n  const style = { cursor: \"pointer\" };\n\n  const vote = (voteType: \"upvote\" | \"downvote\") => {};\n\n  return (\n    <React.Fragment>\n      <div className=\"answers-container\">\n        {question.comments.map((comment) => (\n          <div className=\"answer-container\" key={comment.uuid}>\n            <div className=\"votes\">\n              <FontAwesomeIcon\n                icon={faSortUp}\n                color={upvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"upvote\")}\n              />\n              <p\n                className=\"vote-count\"\n                style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n              >\n                {votes}\n              </p>\n              <FontAwesomeIcon\n                icon={faSortDown}\n                color={downvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"downvote\")}\n              />\n            </div>\n            <div style={{ width: \"95%\" }}>\n              <ReactMarkdown\n                className=\"preview answer-pre\"\n                source={comment.body}\n                plugins={[remarkGfm]}\n              />\n              <div className=\"user\">\n                <AskedBy\n                  type={\"answered\"}\n                  username={comment.user.username}\n                  createdAt={comment.createdAt}\n                  postUuid={comment.user.uuid}\n                  userUuid={userContext?.user?.uuid}\n                  reputation={comment.user.reputation}\n                />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <style jsx>{`\n        .answers-container {\n          width: 85%;\n          margin: 0 auto 70px;\n        }\n\n        .answer-container {\n          width: 100%;\n          margin-bottom: 30px;\n          padding: 5px 5px 20px;\n          border-radius: 10px;\n          background: ${css.floatingPostBackground};\n          position: relative;\n          display: flex;\n        }\n\n        .user {\n          position: absolute;\n          bottom: 10px;\n          right: 5px;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin-top: 14px;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Answers;\n"]},"metadata":{},"sourceType":"module"}