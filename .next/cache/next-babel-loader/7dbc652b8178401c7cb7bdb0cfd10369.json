{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\n\nconst EditAnswer = ({\n  setEditMode,\n  comment\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(comment.body);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: _JSXStyle.dynamic([[\"769376257\", [css.inputBackground, css.inputBorder]]]) + \" \" + \"edit-answer-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"769376257\", [css.inputBackground, css.inputBorder]]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-answer-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"769376257\",\n      dynamic: [css.inputBackground, css.inputBorder],\n      children: `.edit-answer-body.__jsx-style-dynamic-selector{margin:0 auto;width:90%;}#edit-form-body.__jsx-style-dynamic-selector{width:100%;resize:none;height:200px;margin-bottom:20px;background:${css.inputBackground};border:2px solid ${css.inputBorder};color:#fff;padding:15px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0QW5zd2VyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQ2tCLEFBR3lCLEFBS0gsV0FDQyxHQUxGLFNBTUcsQ0FMZixZQU1xQixtQkFDcUIsd0NBQ00sOENBQ25DLFdBQ0UsYUFDZiIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvRWRpdEFuc3dlci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IHJlbWFya0dmbSBmcm9tIFwicmVtYXJrLWdmbVwiO1xuXG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvaW5kaXZpZHVhbFF1ZXN0aW9uVHlwZVwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZXRFZGl0TW9kZTogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+O1xuICBjb21tZW50OiBDb21tZW50VHlwZTtcbn1cblxuY29uc3QgRWRpdEFuc3dlcjogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc2V0RWRpdE1vZGUsIGNvbW1lbnQgfSkgPT4ge1xuICBjb25zdCBbYm9keSwgc2V0Qm9keV0gPSB1c2VTdGF0ZTxzdHJpbmc+KGNvbW1lbnQuYm9keSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8Zm9ybSBjbGFzc05hbWU9XCJlZGl0LWFuc3dlci1ib2R5XCI+XG4gICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgIGlkPVwiZWRpdC1mb3JtLWJvZHlcIlxuICAgICAgICAgIGNvbHM9ezMwfVxuICAgICAgICAgIHJvd3M9ezEwfVxuICAgICAgICAgIHZhbHVlPXtib2R5fVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0Qm9keShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgIC8+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgY2xhc3NOYW1lPVwicHJldmlldyBlZGl0LWFuc3dlci1wcmV2aWV3XCJcbiAgICAgICAgICBzb3VyY2U9e2JvZHl9XG4gICAgICAgICAgcGx1Z2lucz17W3JlbWFya0dmbV19XG4gICAgICAgIC8+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmVkaXQtYW5zd2VyLWJvZHkge1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgIH1cblxuICAgICAgICAjZWRpdC1mb3JtLWJvZHkge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaW5wdXRCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke2Nzcy5pbnB1dEJvcmRlcn07XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFZGl0QW5zd2VyO1xuIl19 */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EditAnswer;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx"],"names":["React","useState","ReactMarkdown","remarkGfm","css","EditAnswer","setEditMode","comment","body","setBody","inputBackground","inputBorder","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;;AAQA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAChE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAASM,OAAO,CAACC,IAAjB,CAAhC;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,mDA0BkBJ,GAAG,CAACM,eA1BtB,EA2BwBN,GAAG,CAACO,WA3B5B,aAAgB,kBAAhB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAEH,IAJT;AAKE,QAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAL1B;AAAA,qDAyBgBV,GAAG,CAACM,eAzBpB,EA0BsBN,GAAG,CAACO,WA1B1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,6BADZ;AAEE,QAAA,MAAM,EAAEH,IAFV;AAGE,QAAA,OAAO,EAAE,CAACL,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA,gBA2BoBC,GAAG,CAACM,eA3BxB,EA4B0BN,GAAG,CAACO,WA5B9B;AAAA,0MA2BoBP,GAAG,CAACM,eA3BxB,qBA4B0BN,GAAG,CAACO,WA5B9B;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAvCD;;AAyCA,eAAeN,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport * as css from \"../utils/cssVariables\";\nimport { CommentType } from \"../utils/types/individualQuestionType\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  comment: CommentType;\n}\n\nconst EditAnswer: React.FC<Props> = ({ setEditMode, comment }) => {\n  const [body, setBody] = useState<string>(comment.body);\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-answer-body\">\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-answer-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n      </form>\n\n      <style jsx>{`\n        .edit-answer-body {\n          margin: 0 auto;\n          width: 90%;\n        }\n\n        #edit-form-body {\n          width: 100%;\n          resize: none;\n          height: 200px;\n          margin-bottom: 20px;\n          background: ${css.inputBackground};\n          border: 2px solid ${css.inputBorder};\n          color: #fff;\n          padding: 15px;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default EditAnswer;\n"]},"metadata":{},"sourceType":"module"}