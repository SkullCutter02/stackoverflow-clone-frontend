{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { useQuery } from \"react-query\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport hljs from \"highlight.js\";\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport PageHandlers from \"./PageHandlers\";\n\nconst UserAnswers = ({\n  uuid\n}) => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchUserAnswers = async page => {\n    const res = await fetch(`${host}/users/${uuid}/comments?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0\n  });\n  useEffect(() => {\n    if (data) {\n      const pres = document.querySelectorAll(\"pre\");\n\n      for (let i = 0; i < pres.length; i++) {\n        hljs.highlightBlock(pres[i]);\n      }\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]),\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: data.comments.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]) + \" \" + \"user-answers-container\",\n          children: data.comments.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]) + \" \" + \"user-answer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]) + \" \" + \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]),\n                children: answer.votes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]),\n                children: \"Votes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: `/questions/${answer.post.uuid}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]) + \" \" + \"main\",\n                children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  source: answer.body,\n                  plugins: [remarkGfm],\n                  className: \"preview user-answer-markdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PageHandlers, {\n          page: page,\n          setPage: setPage,\n          isPreviousData: isPreviousData,\n          hasMore: data.hasMore,\n          width: 97\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]) + \" \" + \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: _JSXStyle.dynamic([[\"2946301764\", [css.floatingPostBackground]]]),\n          children: \"This user doesn't have any answers...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2946301764\",\n      dynamic: [css.floatingPostBackground],\n      children: `.user-answer-container.__jsx-style-dynamic-selector{margin:30px 20px;padding:15px 20px;background:${css.floatingPostBackground};border-radius:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.empty.__jsx-style-dynamic-selector{height:300px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.left.__jsx-style-dynamic-selector{width:3%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.left.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{color:#dedede;font-size:0.9rem;}.main.__jsx-style-dynamic-selector{width:97%;margin:-15px 25px;cursor:pointer;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyQW5zd2Vycy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUZrQixBQUc0QixBQVFKLEFBT0osQUFRSyxBQUtKLFNBWkcsQ0FhSyxHQXBCTCxDQWVJLEdBdkJDLFdBNkJILEdBTGpCLElBdkIwQyxRQTZCMUMsZ0NBNUJxQixRQWNHLElBUEMsT0FOVixtRUFjTSxPQWJyQixrQkFNcUIsb0VBUVEseUJBUDdCLGdGQVFBIiwiZmlsZSI6Ii9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyQW5zd2Vycy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tIFwicmVhY3QtcXVlcnlcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IHJlbWFya0dmbSBmcm9tIFwicmVtYXJrLWdmbVwiO1xuaW1wb3J0IGhsanMgZnJvbSBcImhpZ2hsaWdodC5qc1wiO1xuXG5pbXBvcnQgaG9zdCBmcm9tIFwiLi4vdXRpbHMvaG9zdFwiO1xuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcbmltcG9ydCB7IFVzZXJBbnN3ZXJzVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy91c2VyQW5zd2Vyc1R5cGVcIjtcbmltcG9ydCBQYWdlSGFuZGxlcnMgZnJvbSBcIi4vUGFnZUhhbmRsZXJzXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHV1aWQ6IHN0cmluZztcbn1cblxuY29uc3QgVXNlckFuc3dlcnM6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHV1aWQgfSkgPT4ge1xuICBjb25zdCBbcGFnZSwgc2V0UGFnZV0gPSB1c2VTdGF0ZTxudW1iZXI+KDEpO1xuXG4gIGNvbnN0IGZldGNoVXNlckFuc3dlcnMgPSBhc3luYyAocGFnZTogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICBgJHtob3N0fS91c2Vycy8ke3V1aWR9L2NvbW1lbnRzP3BhZ2U9JHtwYWdlfSZsaW1pdD0yMGBcbiAgICApO1xuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICB9O1xuXG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0Vycm9yLCBlcnJvciwgZGF0YSwgaXNQcmV2aW91c0RhdGEgfSA9IHVzZVF1ZXJ5PFxuICAgIFVzZXJBbnN3ZXJzVHlwZSxcbiAgICBFcnJvclxuICA+KFtcInVzZXItYW5zd2Vyc1wiLCBwYWdlXSwgKCkgPT4gZmV0Y2hVc2VyQW5zd2VycyhwYWdlKSwge1xuICAgIGtlZXBQcmV2aW91c0RhdGE6IHRydWUsXG4gICAgY2FjaGVUaW1lOiAwLFxuICB9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChkYXRhKSB7XG4gICAgICBjb25zdCBwcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInByZVwiKTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGhsanMuaGlnaGxpZ2h0QmxvY2socHJlc1tpXSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbZGF0YV0pO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAge2lzTG9hZGluZyA/IChcbiAgICAgICAgPGRpdj5Mb2FkaW5nLi4uPC9kaXY+XG4gICAgICApIDogaXNFcnJvciA/IChcbiAgICAgICAgPGRpdj57ZXJyb3IubWVzc2FnZX08L2Rpdj5cbiAgICAgICkgOiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB7ZGF0YS5jb21tZW50cy5sZW5ndGggIT09IDAgPyAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVzZXItYW5zd2Vycy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICB7ZGF0YS5jb21tZW50cy5tYXAoKGFuc3dlcikgPT4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLWFuc3dlci1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHA+e2Fuc3dlci52b3Rlc308L3A+XG4gICAgICAgICAgICAgICAgICAgICAgPHA+Vm90ZXM8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL3F1ZXN0aW9ucy8ke2Fuc3dlci5wb3N0LnV1aWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RNYXJrZG93blxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U9e2Fuc3dlci5ib2R5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHJldmlldyB1c2VyLWFuc3dlci1tYXJrZG93blwiXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxQYWdlSGFuZGxlcnNcbiAgICAgICAgICAgICAgICBwYWdlPXtwYWdlfVxuICAgICAgICAgICAgICAgIHNldFBhZ2U9e3NldFBhZ2V9XG4gICAgICAgICAgICAgICAgaXNQcmV2aW91c0RhdGE9e2lzUHJldmlvdXNEYXRhfVxuICAgICAgICAgICAgICAgIGhhc01vcmU9e2RhdGEuaGFzTW9yZX1cbiAgICAgICAgICAgICAgICB3aWR0aD17OTd9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlbXB0eVwiPlxuICAgICAgICAgICAgICA8aDE+VGhpcyB1c2VyIGRvZXNuJ3QgaGF2ZSBhbnkgYW5zd2Vycy4uLjwvaDE+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAudXNlci1hbnN3ZXItY29udGFpbmVyIHtcbiAgICAgICAgICBtYXJnaW46IDMwcHggMjBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuZmxvYXRpbmdQb3N0QmFja2dyb3VuZH07XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmVtcHR5IHtcbiAgICAgICAgICBoZWlnaHQ6IDMwMHB4O1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5sZWZ0IHtcbiAgICAgICAgICB3aWR0aDogMyU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICB9XG5cbiAgICAgICAgLmxlZnQgcCB7XG4gICAgICAgICAgY29sb3I6ICNkZWRlZGU7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgIH1cblxuICAgICAgICAubWFpbiB7XG4gICAgICAgICAgd2lkdGg6IDk3JTtcbiAgICAgICAgICBtYXJnaW46IC0xNXB4IDI1cHg7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJBbnN3ZXJzO1xuIl19 */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserAnswers;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx"],"names":["React","useState","useEffect","Link","useQuery","ReactMarkdown","remarkGfm","hljs","host","css","PageHandlers","UserAnswers","uuid","page","setPage","fetchUserAnswers","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","cacheTime","pres","document","querySelectorAll","i","length","highlightBlock","floatingPostBackground","message","comments","map","answer","votes","post","body","hasMore"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { useQuery } from \"react-query\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport hljs from \"highlight.js\";\n\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport { UserAnswersType } from \"../utils/types/userAnswersType\";\nimport PageHandlers from \"./PageHandlers\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserAnswers: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserAnswers = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/comments?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    UserAnswersType,\n    Error\n  >([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  useEffect(() => {\n    if (data) {\n      const pres = document.querySelectorAll(\"pre\");\n\n      for (let i = 0; i < pres.length; i++) {\n        hljs.highlightBlock(pres[i]);\n      }\n    }\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>{error.message}</div>\n      ) : (\n        <React.Fragment>\n          {data.comments.length !== 0 ? (\n            <div>\n              <div className=\"user-answers-container\">\n                {data.comments.map((answer) => (\n                  <div className=\"user-answer-container\">\n                    <div className=\"left\">\n                      <p>{answer.votes}</p>\n                      <p>Votes</p>\n                    </div>\n                    <Link href={`/questions/${answer.post.uuid}`}>\n                      <div className=\"main\">\n                        <ReactMarkdown\n                          source={answer.body}\n                          plugins={[remarkGfm]}\n                          className=\"preview user-answer-markdown\"\n                        />\n                      </div>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n              <PageHandlers\n                page={page}\n                setPage={setPage}\n                isPreviousData={isPreviousData}\n                hasMore={data.hasMore}\n                width={97}\n              />\n            </div>\n          ) : (\n            <div className=\"empty\">\n              <h1>This user doesn't have any answers...</h1>\n            </div>\n          )}\n        </React.Fragment>\n      )}\n\n      <style jsx>{`\n        .user-answer-container {\n          margin: 30px 20px;\n          padding: 15px 20px;\n          background: ${css.floatingPostBackground};\n          border-radius: 10px;\n          display: flex;\n        }\n\n        .empty {\n          height: 300px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .left {\n          width: 3%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n        }\n\n        .left p {\n          color: #dedede;\n          font-size: 0.9rem;\n        }\n\n        .main {\n          width: 97%;\n          margin: -15px 25px;\n          cursor: pointer;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default UserAnswers;\n"]},"metadata":{},"sourceType":"module"}