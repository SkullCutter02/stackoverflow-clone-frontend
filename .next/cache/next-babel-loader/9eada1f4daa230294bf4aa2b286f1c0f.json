{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/request/post.tsx\";\nimport React, { useState } from \"react\";\nimport ReactMde from \"react-mde\";\nimport Showdown from \"showdown\";\nconst converter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true\n});\n\nconst RequestPostPage = () => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"**Hello World!**\");\n  const {\n    0: selectedTab,\n    1: setSelectedTab\n  } = useState(\"write\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"post-form-heading\",\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"post-form-input\",\n        id: \"title\",\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMde, {\n        value: value,\n        onChange: setValue,\n        selectedTab: selectedTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RequestPostPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/request/post.tsx"],"names":["React","useState","ReactMde","Showdown","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","RequestPostPage","value","setValue","selectedTab","setSelectedTab"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,SAAS,GAAG,IAAID,QAAQ,CAACE,SAAb,CAAuB;AACvCC,EAAAA,MAAM,EAAE,IAD+B;AAEvCC,EAAAA,kBAAkB,EAAE,IAFmB;AAGvCC,EAAAA,aAAa,EAAE,IAHwB;AAIvCC,EAAAA,SAAS,EAAE;AAJ4B,CAAvB,CAAlB;;AAOA,MAAMC,eAAyB,GAAG,MAAM;AACtC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAS,kBAAT,CAAlC;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAsB,OAAtB,CAA9C;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEU,KAAjB;AAAwB,QAAA,QAAQ,EAAEC,QAAlC;AAA4C,QAAA,WAAW,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnBD;;AAqBA,eAAeH,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMde from \"react-mde\";\nimport Showdown from \"showdown\";\n\nconst converter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true,\n});\n\nconst RequestPostPage: React.FC = () => {\n  const [value, setValue] = useState<string>(\"**Hello World!**\");\n  const [selectedTab, setSelectedTab] = useState<\"preview\" | \"write\">(\"write\");\n\n  return (\n    <React.Fragment>\n      <h1 className=\"post-form-heading\">Ask a Question</h1>\n      <form className=\"post-form-container\">\n        <input\n          type=\"text\"\n          className=\"post-form-input\"\n          id=\"title\"\n          placeholder=\"Title\"\n          required\n        />\n        <ReactMde value={value} onChange={setValue} selectedTab={selectedTab} />\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default RequestPostPage;\n"]},"metadata":{},"sourceType":"module"}