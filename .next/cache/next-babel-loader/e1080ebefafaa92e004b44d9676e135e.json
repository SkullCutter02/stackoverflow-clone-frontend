{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../../../utils/host\";\nimport Question from \"../../../components/Question\";\n\nconst QuestionPage = ({\n  uuid\n}) => {\n  const fetchQuestions = async () => {\n    const res = await fetch(`${host}/posts/${uuid}`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data\n  } = useQuery([\"individual-question\"], () => fetchQuestions(), {\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/_jsx(\"main\", {\n      children: isLoading ? /*#__PURE__*/_jsx(\"div\", {\n        children: \"Loading...\"\n      }) : isError ? /*#__PURE__*/_jsx(\"div\", {\n        children: error.message\n      }) : /*#__PURE__*/_jsx(Question, {\n        data: data\n      })\n    })\n  });\n};\n\nexport const getServerSideProps = async context => {\n  return {\n    props: {\n      uuid: context.params.uuid\n    }\n  };\n};\nexport default QuestionPage;","map":null,"metadata":{},"sourceType":"module"}