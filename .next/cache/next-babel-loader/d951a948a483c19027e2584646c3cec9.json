{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answer.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useRouter } from \"next/router\";\nimport * as css from \"../utils/cssVariables\";\nimport AskedBy from \"./AskedBy\";\nimport { UserContext } from \"../context/UserContext\";\nimport hljs from \"highlight.js\";\nimport host from \"../utils/host\";\nimport { updateVote, getCookie } from \"../utils/functions\";\nimport OPActions from \"./OPActions\";\n\nconst Answer = ({\n  comment\n}) => {\n  var _userContext$user, _userContext$user2;\n\n  const {\n    0: votes,\n    1: setVotes\n  } = useState(comment.votes);\n  const {\n    0: upvoteColor,\n    1: setUpvoteColor\n  } = useState(\"grey\");\n  const {\n    0: downvoteColor,\n    1: setDownvoteColor\n  } = useState(\"grey\");\n  const {\n    0: editMode,\n    1: setEditMode\n  } = useState(false);\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n  const style = {\n    cursor: \"pointer\"\n  };\n  useEffect(() => {\n    const pres = document.querySelectorAll(\"pre\");\n\n    for (let i = 0; i < pres.length; i++) {\n      hljs.highlightBlock(pres[i]);\n    }\n  }, []);\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/comments/${comment.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.status) {\n          if (data.type === \"upvote\") {\n            setUpvoteColor(css.upvote);\n          } else if (data.type === \"downvote\") {\n            setDownvoteColor(css.downvote);\n          }\n        }\n      });\n    }\n  }, [userContext]);\n\n  const vote = async voteType => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== comment.user.uuid) {\n        fetch(`${host}/posts/comments/${comment.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid\n          })\n        }).then(res => res.json()).then(data => updateVote(data, voteType, setVotes, setUpvoteColor, setDownvoteColor, votes, css.upvote, css.downvote));\n        await fetch(`${host}/posts/comments/${comment.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType\n          })\n        });\n      } else {\n        alert(\"You can't vote on your own comment!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]) + \" \" + \"answer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]) + \" \" + \"votes\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSortUp,\n          color: upvoteColor,\n          style: style,\n          size: \"2x\",\n          onClick: () => vote(\"upvote\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#c6c6c6\",\n            margin: \"-8px 0\"\n          },\n          className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]) + \" \" + \"vote-count\",\n          children: votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSortDown,\n          color: downvoteColor,\n          style: style,\n          size: \"2x\",\n          onClick: () => vote(\"downvote\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"95%\"\n        },\n        className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]),\n        children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"preview answer-pre\",\n          source: comment.body,\n          plugins: [remarkGfm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]) + \" \" + \"below\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]) + \" \" + \"user\",\n            children: /*#__PURE__*/_jsxDEV(AskedBy, {\n              type: \"answered\",\n              username: comment.user.username,\n              createdAt: comment.createdAt,\n              postUuid: comment.user.uuid,\n              userUuid: userContext === null || userContext === void 0 ? void 0 : (_userContext$user = userContext.user) === null || _userContext$user === void 0 ? void 0 : _userContext$user.uuid,\n              reputation: comment.user.reputation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), comment.user.uuid === (userContext === null || userContext === void 0 ? void 0 : (_userContext$user2 = userContext.user) === null || _userContext$user2 === void 0 ? void 0 : _userContext$user2.uuid) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]]) + \" \" + \"op-actions\",\n            children: /*#__PURE__*/_jsxDEV(OPActions, {\n              uuid: comment.uuid,\n              type: \"answer\",\n              setEditMode: setEditMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"845439376\", [css.floatingPostBackground]]])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"845439376\",\n      dynamic: [css.floatingPostBackground],\n      children: `.answer-container.__jsx-style-dynamic-selector{width:100%;margin-bottom:30px;padding:5px 5px 20px;border-radius:10px;background:${css.floatingPostBackground};display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.below.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.user.__jsx-style-dynamic-selector{border:1px solid red;}.votes.__jsx-style-dynamic-selector{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-top:14px;}.op-actions.__jsx-style-dynamic-selector{width:100px;border:1px solid red;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answer.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Answer;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answer.tsx"],"names":["React","useEffect","useState","useContext","FontAwesomeIcon","faSortDown","faSortUp","ReactMarkdown","remarkGfm","useRouter","css","AskedBy","UserContext","hljs","host","updateVote","getCookie","OPActions","Answer","comment","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","editMode","setEditMode","userContext","router","style","cursor","pres","document","querySelectorAll","i","length","highlightBlock","user","fetch","uuid","method","headers","body","JSON","stringify","userUuid","then","res","json","data","status","type","upvote","downvote","vote","voteType","Authorization","alert","push","floatingPostBackground","color","margin","width","username","createdAt","reputation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useRouter } from \"next/router\";\n\nimport { CommentType } from \"../utils/types/individualQuestionType\";\nimport { VoteType } from \"../utils/types/voteType\";\nimport * as css from \"../utils/cssVariables\";\nimport AskedBy from \"./AskedBy\";\nimport { UserContext } from \"../context/UserContext\";\nimport hljs from \"highlight.js\";\nimport host from \"../utils/host\";\nimport { updateVote, getCookie } from \"../utils/functions\";\nimport OPActions from \"./OPActions\";\n\ninterface Props {\n  comment: CommentType;\n}\n\nconst Answer: React.FC<Props> = ({ comment }) => {\n  const [votes, setVotes] = useState<number>(comment.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const style = { cursor: \"pointer\" };\n\n  useEffect(() => {\n    const pres = document.querySelectorAll(\"pre\");\n\n    for (let i = 0; i < pres.length; i++) {\n      hljs.highlightBlock(pres[i]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/comments/${comment.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data: VoteType) => {\n          if (data.status) {\n            if (data.type === \"upvote\") {\n              setUpvoteColor(css.upvote);\n            } else if (data.type === \"downvote\") {\n              setDownvoteColor(css.downvote);\n            }\n          }\n        });\n    }\n  }, [userContext]);\n\n  const vote = async (voteType: \"upvote\" | \"downvote\") => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== comment.user.uuid) {\n        fetch(`${host}/posts/comments/${comment.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data: VoteType) =>\n            updateVote(\n              data,\n              voteType,\n              setVotes,\n              setUpvoteColor,\n              setDownvoteColor,\n              votes,\n              css.upvote,\n              css.downvote\n            )\n          );\n        await fetch(`${host}/posts/comments/${comment.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType,\n          }),\n        });\n      } else {\n        alert(\"You can't vote on your own comment!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"answer-container\">\n        <div className=\"votes\">\n          <FontAwesomeIcon\n            icon={faSortUp}\n            color={upvoteColor}\n            style={style}\n            size={\"2x\"}\n            onClick={() => vote(\"upvote\")}\n          />\n          <p\n            className=\"vote-count\"\n            style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n          >\n            {votes}\n          </p>\n          <FontAwesomeIcon\n            icon={faSortDown}\n            color={downvoteColor}\n            style={style}\n            size={\"2x\"}\n            onClick={() => vote(\"downvote\")}\n          />\n        </div>\n        <div style={{ width: \"95%\" }}>\n          <ReactMarkdown\n            className=\"preview answer-pre\"\n            source={comment.body}\n            plugins={[remarkGfm]}\n          />\n          <div className=\"below\">\n            <div className=\"user\">\n              <AskedBy\n                type={\"answered\"}\n                username={comment.user.username}\n                createdAt={comment.createdAt}\n                postUuid={comment.user.uuid}\n                userUuid={userContext?.user?.uuid}\n                reputation={comment.user.reputation}\n              />\n            </div>\n            {comment.user.uuid === userContext?.user?.uuid ? (\n              <div className=\"op-actions\">\n                <OPActions\n                  uuid={comment.uuid}\n                  type={\"answer\"}\n                  setEditMode={setEditMode}\n                />\n              </div>\n            ) : (\n              <div />\n            )}\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .answer-container {\n          width: 100%;\n          margin-bottom: 30px;\n          padding: 5px 5px 20px;\n          border-radius: 10px;\n          background: ${css.floatingPostBackground};\n          //position: relative;\n          display: flex;\n        }\n\n        .below {\n          display: flex;\n          flex-direction: row-reverse;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .user {\n          border: 1px solid red;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin-top: 14px;\n        }\n\n        .op-actions {\n          width: 100px;\n          //position: absolute;\n          //bottom: 10px;\n          //left: 5px;\n          border: 1px solid red;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Answer;\n"]},"metadata":{},"sourceType":"module"}