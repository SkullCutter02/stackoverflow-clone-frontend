{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/auth/resetpassword/[uuid]/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as css from \"../../../../utils/cssVariables\";\nimport host from \"../../../../utils/host\";\n\nconst ResetPasswordPage = () => {\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query;\n  const passwordRef = useRef(null);\n  const confirmPasswordRef = useRef(null);\n  const spinnerRef = useRef(null);\n  const errMsgRef = useRef(null);\n\n  const changePassword = e => {\n    e.preventDefault();\n\n    if (passwordRef.current.value === confirmPasswordRef.current.value) {\n      fetch(`${host}/auth/email/password/reset`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          newPassword: passwordRef.current.value,\n          token: uuid\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.status < 200 && data.status >= 300) {\n          errMsgRef.current.innerText = data.msg;\n        } else {}\n      }).catch(err => console.log(err));\n    } else {\n      errMsgRef.current.innerText = \"Passwords don't match\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: _JSXStyle.dynamic([[\"2994438694\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: changePassword,\n        className: _JSXStyle.dynamic([[\"2994438694\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: passwordRef,\n          placeholder: \"Enter new password:\",\n          className: _JSXStyle.dynamic([[\"2994438694\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: confirmPasswordRef,\n          placeholder: \"Confirm password:\",\n          className: _JSXStyle.dynamic([[\"2994438694\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"2994438694\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]),\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: errMsgRef,\n          className: _JSXStyle.dynamic([[\"2994438694\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"err-msg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2994438694\",\n      dynamic: [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover],\n      children: `main.__jsx-style-dynamic-selector{width:100%;height:95vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.input-container.__jsx-style-dynamic-selector{width:30%;height:55%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}input.__jsx-style-dynamic-selector{border:1px solid ${css.inputBorder};background:${css.inputBackground};color:#fff;height:40px;width:100%;text-indent:15px;font-size:0.8rem;margin:10px 0;}button.__jsx-style-dynamic-selector{border:none;background:${css.mainButton};color:white;width:150px;height:30px;border-radius:4px;cursor:pointer;margin:20px 0;}button.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}.err-msg.__jsx-style-dynamic-selector{color:#ff0000;text-align:center;width:90%;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvcGFnZXMvYXV0aC9yZXNldHBhc3N3b3JkL1t1dWlkXS9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkRrQixBQUdzQixBQVFELEFBU29DLEFBV2xDLEFBVzRCLEFBSTFCLFVBbENILENBUkMsQ0E0QjRCLEVBZXRCLE9BbENMLEVBUkEsU0EyQ0gsUUFMWixFQU1BLElBNUIwQyxNQVk1QixZQUNBLFlBQ0EsVUFiRCxFQWNPLE9BdEJJLEVBUkMsQUFpQlgsU0FjRyxHQWJKLFdBQ00sQ0FhSCxjQUNoQixFQWJtQixpQkFDSCxjQUNoQixLQWJ5Qix1QkFSSiw0RUFTQSxpQkFSckIsNEVBU0EiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9wYWdlcy9hdXRoL3Jlc2V0cGFzc3dvcmQvW3V1aWRdL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcblxuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcbmltcG9ydCBob3N0IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9ob3N0XCI7XG5cbmNvbnN0IFJlc2V0UGFzc3dvcmRQYWdlOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IHsgdXVpZCB9ID0gcm91dGVyLnF1ZXJ5O1xuXG4gIGNvbnN0IHBhc3N3b3JkUmVmID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBjb25maXJtUGFzc3dvcmRSZWYgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHNwaW5uZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBlcnJNc2dSZWYgPSB1c2VSZWY8SFRNTFBhcmFncmFwaEVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGNoYW5nZVBhc3N3b3JkID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAocGFzc3dvcmRSZWYuY3VycmVudC52YWx1ZSA9PT0gY29uZmlybVBhc3N3b3JkUmVmLmN1cnJlbnQudmFsdWUpIHtcbiAgICAgIGZldGNoKGAke2hvc3R9L2F1dGgvZW1haWwvcGFzc3dvcmQvcmVzZXRgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIG5ld1Bhc3N3b3JkOiBwYXNzd29yZFJlZi5jdXJyZW50LnZhbHVlLFxuICAgICAgICAgIHRva2VuOiB1dWlkLFxuICAgICAgICB9KSxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgaWYgKGRhdGEuc3RhdHVzIDwgMjAwICYmIGRhdGEuc3RhdHVzID49IDMwMCkge1xuICAgICAgICAgICAgZXJyTXNnUmVmLmN1cnJlbnQuaW5uZXJUZXh0ID0gZGF0YS5tc2c7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXJyTXNnUmVmLmN1cnJlbnQuaW5uZXJUZXh0ID0gXCJQYXNzd29yZHMgZG9uJ3QgbWF0Y2hcIjtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8bWFpbj5cbiAgICAgICAgPGZvcm0gY2xhc3NOYW1lPVwiaW5wdXQtY29udGFpbmVyXCIgb25TdWJtaXQ9e2NoYW5nZVBhc3N3b3JkfT5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICByZWY9e3Bhc3N3b3JkUmVmfVxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBuZXcgcGFzc3dvcmQ6XCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgIHJlZj17Y29uZmlybVBhc3N3b3JkUmVmfVxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJDb25maXJtIHBhc3N3b3JkOlwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIj5DaGFuZ2UgcGFzc3dvcmQ8L2J1dHRvbj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJlcnItbXNnXCIgcmVmPXtlcnJNc2dSZWZ9IC8+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgIDwvbWFpbj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBtYWluIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDk1dmg7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgLmlucHV0LWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgICBoZWlnaHQ6IDU1JTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2Nzcy5pbnB1dEJvcmRlcn07XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaW5wdXRCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgdGV4dC1pbmRlbnQ6IDE1cHg7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgICAgICAgbWFyZ2luOiAxMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5tYWluQnV0dG9ufTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIG1hcmdpbjogMjBweCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5tYWluQnV0dG9uSG92ZXJ9O1xuICAgICAgICB9XG5cbiAgICAgICAgLmVyci1tc2cge1xuICAgICAgICAgIGNvbG9yOiAjZmYwMDAwO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlc2V0UGFzc3dvcmRQYWdlO1xuIl19 */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/auth/resetpassword/[uuid]/index.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ResetPasswordPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/auth/resetpassword/[uuid]/index.tsx"],"names":["React","useRef","useRouter","css","host","ResetPasswordPage","router","uuid","query","passwordRef","confirmPasswordRef","spinnerRef","errMsgRef","changePassword","e","preventDefault","current","value","fetch","method","headers","body","JSON","stringify","newPassword","token","then","res","json","data","status","innerText","msg","catch","err","console","log","inputBorder","inputBackground","mainButton","mainButtonHover"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport * as css from \"../../../../utils/cssVariables\";\nimport host from \"../../../../utils/host\";\n\nconst ResetPasswordPage: React.FC = () => {\n  const router = useRouter();\n  const { uuid } = router.query;\n\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const confirmPasswordRef = useRef<HTMLInputElement>(null);\n  const spinnerRef = useRef<HTMLDivElement>(null);\n  const errMsgRef = useRef<HTMLParagraphElement>(null);\n\n  const changePassword = (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value === confirmPasswordRef.current.value) {\n      fetch(`${host}/auth/email/password/reset`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          newPassword: passwordRef.current.value,\n          token: uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.status < 200 && data.status >= 300) {\n            errMsgRef.current.innerText = data.msg;\n          } else {\n          }\n        })\n        .catch((err) => console.log(err));\n    } else {\n      errMsgRef.current.innerText = \"Passwords don't match\";\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <main>\n        <form className=\"input-container\" onSubmit={changePassword}>\n          <input\n            type=\"password\"\n            ref={passwordRef}\n            placeholder=\"Enter new password:\"\n          />\n          <input\n            type=\"password\"\n            ref={confirmPasswordRef}\n            placeholder=\"Confirm password:\"\n          />\n          <button type=\"submit\">Change password</button>\n          <p className=\"err-msg\" ref={errMsgRef} />\n        </form>\n      </main>\n\n      <style jsx>{`\n        main {\n          width: 100%;\n          height: 95vh;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .input-container {\n          width: 30%;\n          height: 55%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n\n        input {\n          border: 1px solid ${css.inputBorder};\n          background: ${css.inputBackground};\n          color: #fff;\n          height: 40px;\n          width: 100%;\n          text-indent: 15px;\n          font-size: 0.8rem;\n          margin: 10px 0;\n        }\n\n        button {\n          border: none;\n          background: ${css.mainButton};\n          color: white;\n          width: 150px;\n          height: 30px;\n          border-radius: 4px;\n          cursor: pointer;\n          margin: 20px 0;\n        }\n\n        button:hover {\n          background: ${css.mainButtonHover};\n        }\n\n        .err-msg {\n          color: #ff0000;\n          text-align: center;\n          width: 90%;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default ResetPasswordPage;\n"]},"metadata":{},"sourceType":"module"}