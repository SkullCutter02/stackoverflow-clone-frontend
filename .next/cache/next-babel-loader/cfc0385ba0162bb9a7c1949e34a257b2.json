{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/request/post.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQuery } from \"react-query\";\nimport * as css from \"../../utils/cssVariables\";\nimport host from \"../../utils/host\";\n\nconst RequestPostPage = () => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(\"**Hello World!**\");\n  const {\n    0: tags,\n    1: setTags\n  } = useState(\"\");\n\n  const fetchCommunities = async (filter = \"\") => {\n    const res = await fetch(`${host}/communities?page=1&limit=6&filter=${filter}`);\n    return await res.json();\n  };\n\n  const {\n    data\n  } = useQuery([\"communities\", tags], () => fetchCommunities(tags));\n  useEffect(() => {\n    if (tags !== \"\") {}\n  }, [tags]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: _JSXStyle.dynamic([[\"2411153611\", [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder]]]) + \" \" + \"post-form-heading\",\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: _JSXStyle.dynamic([[\"2411153611\", [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder]]]) + \" \" + \"post-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        placeholder: \"Title\",\n        required: true,\n        className: _JSXStyle.dynamic([[\"2411153611\", [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder]]]) + \" \" + \"post-form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        cols: 30,\n        rows: 10,\n        placeholder: \"Body\",\n        required: true,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"2411153611\", [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder]]]) + \" \" + \"post-form-body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview\",\n        plugins: [remarkGfm],\n        source: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"2411153611\", [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder]]]) + \" \" + \"tags\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tags: (maximum 5) \",\n          value: tags,\n          onChange: e => setTags(e.target.value),\n          className: _JSXStyle.dynamic([[\"2411153611\", [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder]]]) + \" \" + \"post-form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2411153611\",\n      dynamic: [css.inputBackground, css.inputBorder, css.inputBackground, css.inputBorder],\n      children: `.post-form-heading.__jsx-style-dynamic-selector{text-align:center;margin:30px 0;}.post-form-container.__jsx-style-dynamic-selector{width:65%;min-height:500px;border-radius:20px;margin:0 auto 50px;background:#3b3b3b;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}input.__jsx-style-dynamic-selector,textarea.__jsx-style-dynamic-selector{display:block;}.post-form-input.__jsx-style-dynamic-selector{display:block;width:80%;height:40px;margin:30px 0;text-indent:15px;background:${css.inputBackground};color:#ffffff;border:2px solid ${css.inputBorder};font-size:0.8rem;}.post-form-body.__jsx-style-dynamic-selector{width:80%;resize:none;height:400px;margin-bottom:40px;background:${css.inputBackground};color:#ffffff;border:2px solid ${css.inputBorder};padding:15px;}.tags.__jsx-style-dynamic-selector{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-top:-40px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvcGFnZXMvcmVxdWVzdC9wb3N0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RmtCLEFBRzZCLEFBS1IsQUFZSSxBQUlBLEFBWUosQUFXQyxVQXRDTSxBQTRCTCxDQVdDLEdBM0JmLEFBSVksSUFyQkksSUFrQ0QsRUFaRCxHQWhCTyxLQUxyQixHQWtDcUIsQ0FaTCxVQWhCSyxJQWlCRixJQVl1QixXQTVCckIsRUFpQnFCLGlCQWhCM0IsQ0FvQ1UsU0FSVCxhQVhBLENBWWdDLGFBWEEsaUNBWWpDLElBN0JTLFNBa0JMLEFBWW5CLGlCQVhBLEFBaUJtQixpQkFDbkIsbUNBcENxQiw2RkFDckIiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9wYWdlcy9yZXF1ZXN0L3Bvc3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENoYW5nZUV2ZW50LCB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcbmltcG9ydCByZW1hcmtHZm0gZnJvbSBcInJlbWFyay1nZm1cIjtcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSBcInJlYWN0LXF1ZXJ5XCI7XG5cbmltcG9ydCAqIGFzIGNzcyBmcm9tIFwiLi4vLi4vdXRpbHMvY3NzVmFyaWFibGVzXCI7XG5pbXBvcnQgaG9zdCBmcm9tIFwiLi4vLi4vdXRpbHMvaG9zdFwiO1xuXG50eXBlIFBvc3RUeXBlID0ge1xuICB1dWlkOiBzdHJpbmc7XG59O1xuXG50eXBlIENvbW11bml0eVR5cGUgPSB7XG4gIHV1aWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbiAgdXBkYXRlZEF0OiBzdHJpbmc7XG4gIHBvc3RzOiBQb3N0VHlwZVtdO1xufTtcblxudHlwZSBEYXRhVHlwZSA9IHtcbiAgY29tbXVuaXRpZXM6IENvbW11bml0eVR5cGVbXTtcbiAgaGFzTW9yZTogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFJlcXVlc3RQb3N0UGFnZTogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IFtib2R5LCBzZXRCb2R5XSA9IHVzZVN0YXRlPHN0cmluZz4oXCIqKkhlbGxvIFdvcmxkISoqXCIpO1xuICBjb25zdCBbdGFncywgc2V0VGFnc10gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xuXG4gIGNvbnN0IGZldGNoQ29tbXVuaXRpZXMgPSBhc3luYyAoZmlsdGVyOiBzdHJpbmcgPSBcIlwiKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICBgJHtob3N0fS9jb21tdW5pdGllcz9wYWdlPTEmbGltaXQ9NiZmaWx0ZXI9JHtmaWx0ZXJ9YFxuICAgICk7XG4gICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7XG4gIH07XG5cbiAgY29uc3QgeyBkYXRhIH0gPSB1c2VRdWVyeTxEYXRhVHlwZT4oW1wiY29tbXVuaXRpZXNcIiwgdGFnc10sICgpID0+XG4gICAgZmV0Y2hDb21tdW5pdGllcyh0YWdzKVxuICApO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHRhZ3MgIT09IFwiXCIpIHtcbiAgICB9XG4gIH0sIFt0YWdzXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwicG9zdC1mb3JtLWhlYWRpbmdcIj5Bc2sgYSBRdWVzdGlvbjwvaDE+XG4gICAgICA8Zm9ybSBjbGFzc05hbWU9XCJwb3N0LWZvcm0tY29udGFpbmVyXCI+XG4gICAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJwb3N0LWZvcm0taW5wdXRcIlxuICAgICAgICAgIGlkPVwidGl0bGVcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiVGl0bGVcIlxuICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgIC8+XG4gICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgIGlkPVwiYm9keVwiXG4gICAgICAgICAgY2xhc3NOYW1lPVwicG9zdC1mb3JtLWJvZHlcIlxuICAgICAgICAgIGNvbHM9ezMwfVxuICAgICAgICAgIHJvd3M9ezEwfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQm9keVwiXG4gICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICB2YWx1ZT17Ym9keX1cbiAgICAgICAgICBvbkNoYW5nZT17KGU6IENoYW5nZUV2ZW50PEhUTUxUZXh0QXJlYUVsZW1lbnQ+KSA9PlxuICAgICAgICAgICAgc2V0Qm9keShlLnRhcmdldC52YWx1ZSlcbiAgICAgICAgICB9XG4gICAgICAgIC8+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgY2xhc3NOYW1lPVwicHJldmlld1wiXG4gICAgICAgICAgcGx1Z2lucz17W3JlbWFya0dmbV19XG4gICAgICAgICAgc291cmNlPXtib2R5fVxuICAgICAgICAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhZ3NcIj5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInBvc3QtZm9ybS1pbnB1dFwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlRhZ3M6IChtYXhpbXVtIDUpIFwiXG4gICAgICAgICAgICB2YWx1ZT17dGFnc31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZTogQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+XG4gICAgICAgICAgICAgIHNldFRhZ3MoZS50YXJnZXQudmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnBvc3QtZm9ybS1oZWFkaW5nIHtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgbWFyZ2luOiAzMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICAucG9zdC1mb3JtLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDY1JTtcbiAgICAgICAgICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvIDUwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzNiM2IzYjtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0LFxuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cblxuICAgICAgICAucG9zdC1mb3JtLWlucHV0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgICBtYXJnaW46IDMwcHggMDtcbiAgICAgICAgICB0ZXh0LWluZGVudDogMTVweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5pbnB1dEJhY2tncm91bmR9O1xuICAgICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICR7Y3NzLmlucHV0Qm9yZGVyfTtcbiAgICAgICAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0LWZvcm0tYm9keSB7XG4gICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgICByZXNpemU6IG5vbmU7XG4gICAgICAgICAgaGVpZ2h0OiA0MDBweDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmlucHV0QmFja2dyb3VuZH07XG4gICAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHtjc3MuaW5wdXRCb3JkZXJ9O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAudGFncyB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtNDBweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZXF1ZXN0UG9zdFBhZ2U7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/request/post.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RequestPostPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/request/post.tsx"],"names":["React","useState","useEffect","ReactMarkdown","remarkGfm","useQuery","css","host","RequestPostPage","body","setBody","tags","setTags","fetchCommunities","filter","res","fetch","json","data","inputBackground","inputBorder","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAoBA,MAAMC,eAAyB,GAAG,MAAM;AACtC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAS,kBAAT,CAAhC;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAS,EAAT,CAAhC;;AAEA,QAAMY,gBAAgB,GAAG,OAAOC,MAAc,GAAG,EAAxB,KAA+B;AACtD,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,GAAET,IAAK,sCAAqCO,MAAO,EAD/B,CAAvB;AAGA,WAAO,MAAMC,GAAG,CAACE,IAAJ,EAAb;AACD,GALD;;AAOA,QAAM;AAAEC,IAAAA;AAAF,MAAWb,QAAQ,CAAW,CAAC,aAAD,EAAgBM,IAAhB,CAAX,EAAkC,MACzDE,gBAAgB,CAACF,IAAD,CADO,CAAzB;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,KAAK,EAAb,EAAiB,CAChB;AACF,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,oDAmEkBL,GAAG,CAACa,eAnEtB,EAqEwBb,GAAG,CAACc,WArE5B,EA8EkBd,GAAG,CAACa,eA9EtB,EAgFwBb,GAAG,CAACc,WAhF5B,aAAc,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,oDAkEkBd,GAAG,CAACa,eAlEtB,EAoEwBb,GAAG,CAACc,WApE5B,EA6EkBd,GAAG,CAACa,eA7EtB,EA+EwBb,GAAG,CAACc,WA/E5B,aAAgB,qBAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,QAAQ,MALV;AAAA,sDAiEgBd,GAAG,CAACa,eAjEpB,EAmEsBb,GAAG,CAACc,WAnE1B,EA4EgBd,GAAG,CAACa,eA5EpB,EA8EsBb,GAAG,CAACc,WA9E1B,aAEY;AAFZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,EAAE,EAAC,MADL;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,IAAI,EAAE,EAJR;AAKE,QAAA,WAAW,EAAC,MALd;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,KAAK,EAAEX,IAPT;AAQE,QAAA,QAAQ,EAAGY,CAAD,IACRX,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CATX;AAAA,sDA0DgBjB,GAAG,CAACa,eA1DpB,EA4DsBb,GAAG,CAACc,WA5D1B,EAqEgBd,GAAG,CAACa,eArEpB,EAuEsBb,GAAG,CAACc,WAvE1B,aAEY;AAFZ;AAAA;AAAA;AAAA;AAAA,cARF,eAoBE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,OAAO,EAAE,CAAChB,SAAD,CAFX;AAGE,QAAA,MAAM,EAAEK;AAHV;AAAA;AAAA;AAAA;AAAA,cApBF,eAyBE;AAAA,sDAyCgBH,GAAG,CAACa,eAzCpB,EA2CsBb,GAAG,CAACc,WA3C1B,EAoDgBd,GAAG,CAACa,eApDpB,EAsDsBb,GAAG,CAACc,WAtD1B,aAAe,MAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,KAAK,EAAET,IAJT;AAKE,UAAA,QAAQ,EAAGU,CAAD,IACRT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CANX;AAAA,wDAwCcjB,GAAG,CAACa,eAxClB,EA0CoBb,GAAG,CAACc,WA1CxB,EAmDcd,GAAG,CAACa,eAnDlB,EAqDoBb,GAAG,CAACc,WArDxB,aAEY;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA,gBAoEoBd,GAAG,CAACa,eApExB,EAsE0Bb,GAAG,CAACc,WAtE9B,EA+EoBd,GAAG,CAACa,eA/ExB,EAiF0Bb,GAAG,CAACc,WAjF9B;AAAA,orBAoEoBd,GAAG,CAACa,eApExB,mCAsE0Bb,GAAG,CAACc,WAtE9B,oIA+EoBd,GAAG,CAACa,eA/ExB,mCAiF0Bb,GAAG,CAACc,WAjF9B;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+FD,CAnHD;;AAqHA,eAAeZ,eAAf","sourcesContent":["import React, { ChangeEvent, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQuery } from \"react-query\";\n\nimport * as css from \"../../utils/cssVariables\";\nimport host from \"../../utils/host\";\n\ntype PostType = {\n  uuid: string;\n};\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  posts: PostType[];\n};\n\ntype DataType = {\n  communities: CommunityType[];\n  hasMore: boolean;\n};\n\nconst RequestPostPage: React.FC = () => {\n  const [body, setBody] = useState<string>(\"**Hello World!**\");\n  const [tags, setTags] = useState<string>(\"\");\n\n  const fetchCommunities = async (filter: string = \"\") => {\n    const res = await fetch(\n      `${host}/communities?page=1&limit=6&filter=${filter}`\n    );\n    return await res.json();\n  };\n\n  const { data } = useQuery<DataType>([\"communities\", tags], () =>\n    fetchCommunities(tags)\n  );\n\n  useEffect(() => {\n    if (tags !== \"\") {\n    }\n  }, [tags]);\n\n  return (\n    <React.Fragment>\n      <h1 className=\"post-form-heading\">Ask a Question</h1>\n      <form className=\"post-form-container\">\n        <input\n          type=\"text\"\n          className=\"post-form-input\"\n          id=\"title\"\n          placeholder=\"Title\"\n          required\n        />\n        <textarea\n          id=\"body\"\n          className=\"post-form-body\"\n          cols={30}\n          rows={10}\n          placeholder=\"Body\"\n          required\n          value={body}\n          onChange={(e: ChangeEvent<HTMLTextAreaElement>) =>\n            setBody(e.target.value)\n          }\n        />\n        <ReactMarkdown\n          className=\"preview\"\n          plugins={[remarkGfm]}\n          source={body}\n        />\n        <div className=\"tags\">\n          <input\n            type=\"text\"\n            className=\"post-form-input\"\n            placeholder=\"Tags: (maximum 5) \"\n            value={tags}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setTags(e.target.value)\n            }\n          />\n        </div>\n      </form>\n\n      <style jsx>{`\n        .post-form-heading {\n          text-align: center;\n          margin: 30px 0;\n        }\n\n        .post-form-container {\n          width: 65%;\n          min-height: 500px;\n          border-radius: 20px;\n          margin: 0 auto 50px;\n          background: #3b3b3b;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n\n        input,\n        textarea {\n          display: block;\n        }\n\n        .post-form-input {\n          display: block;\n          width: 80%;\n          height: 40px;\n          margin: 30px 0;\n          text-indent: 15px;\n          background: ${css.inputBackground};\n          color: #ffffff;\n          border: 2px solid ${css.inputBorder};\n          font-size: 0.8rem;\n        }\n\n        .post-form-body {\n          width: 80%;\n          resize: none;\n          height: 400px;\n          margin-bottom: 40px;\n          background: ${css.inputBackground};\n          color: #ffffff;\n          border: 2px solid ${css.inputBorder};\n          padding: 15px;\n        }\n\n        .tags {\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          margin-top: -40px;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default RequestPostPage;\n"]},"metadata":{},"sourceType":"module"}