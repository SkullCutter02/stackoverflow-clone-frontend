{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useRouter } from \"next/router\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst Reply = ({\n  question\n}) => {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const postAnswer = async e => {\n    e.preventDefault();\n    const errMsg = document.getElementById(\"err-msg\");\n\n    if (userContext.user) {\n      fetch(`${host}/posts/${question.uuid}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n          body: text\n        })\n      }).then(res => res.json()).then(data => {}).catch(err => console.log(err));\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1671903266\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postAnswer,\n        className: _JSXStyle.dynamic([[\"1671903266\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"reply\",\n          required: true,\n          placeholder: \"Reply to this question\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n            window.scrollBy(0, 100);\n          },\n          className: _JSXStyle.dynamic([[\"1671903266\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"1671903266\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-btn\",\n          children: \"Post your Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"err-msg\",\n          className: _JSXStyle.dynamic([[\"1671903266\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"err-msg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"preview reply-preview\",\n          source: text,\n          plugins: [remarkGfm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1671903266\",\n      dynamic: [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover],\n      children: `.reply-container.__jsx-style-dynamic-selector{width:82%;margin:40px auto;}.reply-form-textarea.__jsx-style-dynamic-selector{width:100%;resize:none;display:block;height:${text.length === 0 ? \"120px\" : \"200px\"};background:${css.inputBackground};color:#ffffff;border:2px solid ${css.inputBorder};padding:15px;}.reply-form-textarea.__jsx-style-dynamic-selector:focus{height:200px;}.reply-btn.__jsx-style-dynamic-selector{margin:20px 10px;float:right;border:none;color:#fff;background:${css.mainButton};border-radius:3px;padding:7px 10px;cursor:pointer;}.reply-btn.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}.err-msg.__jsx-style-dynamic-selector{color:red;margin:20px 0;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9SZXBseS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0VrQixBQUdxQixBQUtDLEFBV0UsQUFJSSxBQVd1QixBQUk5QixVQWxDTyxBQW1DSCxDQTlCRixFQVdkLElBSWMsTUFkRSxDQThCaEIsR0FuQ0EsRUFvQmMsUUFkd0IsR0F3QnRDLENBVGEsV0FDNkIscUJBZkEsbUJBZ0J0QixrQkFDRCxHQWhCSCxjQUNnQyxBQWdCL0IsZUFDakIsK0JBaEJlLGFBQ2YiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9jb21wb25lbnRzL1JlcGx5LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcblxuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcbmltcG9ydCBob3N0IGZyb20gXCIuLi91dGlscy9ob3N0XCI7XG5pbXBvcnQgeyBRdWVzdGlvblR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvaW5kaXZpZHVhbFF1ZXN0aW9uVHlwZVwiO1xuaW1wb3J0IHsgZ2V0Q29va2llIH0gZnJvbSBcIi4uL3V0aWxzL2Z1bmN0aW9uc1wiO1xuaW1wb3J0IHsgVXNlckNvbnRleHQgfSBmcm9tIFwiLi4vY29udGV4dC9Vc2VyQ29udGV4dFwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBxdWVzdGlvbjogUXVlc3Rpb25UeXBlO1xufVxuXG5jb25zdCBSZXBseTogUmVhY3QuRkM8UHJvcHM+ID0gKHsgcXVlc3Rpb24gfSkgPT4ge1xuICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xuICBjb25zdCB1c2VyQ29udGV4dCA9IHVzZUNvbnRleHQoVXNlckNvbnRleHQpO1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICBjb25zdCBwb3N0QW5zd2VyID0gYXN5bmMgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBlcnJNc2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVyci1tc2dcIikgYXMgSFRNTERpdkVsZW1lbnQ7XG5cbiAgICBpZiAodXNlckNvbnRleHQudXNlcikge1xuICAgICAgZmV0Y2goYCR7aG9zdH0vcG9zdHMvJHtxdWVzdGlvbi51dWlkfS9jb21tZW50c2AsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtnZXRDb29raWUoXCJ0b2tlblwiKX1gLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgdXNlclV1aWQ6IHVzZXJDb250ZXh0LnVzZXIudXVpZCxcbiAgICAgICAgICBib2R5OiB0ZXh0LFxuICAgICAgICB9KSxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7fSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhd2FpdCByb3V0ZXIucHVzaChcIi9hdXRoL3NpZ251cFwiKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlcGx5LWNvbnRhaW5lclwiPlxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17cG9zdEFuc3dlcn0+XG4gICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICBpZD1cInJlcGx5XCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlcGx5LWZvcm0tdGV4dGFyZWFcIlxuICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIlJlcGx5IHRvIHRoaXMgcXVlc3Rpb25cIn1cbiAgICAgICAgICAgIHZhbHVlPXt0ZXh0fVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgIHNldFRleHQoZS50YXJnZXQudmFsdWUpO1xuICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsQnkoMCwgMTAwKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInJlcGx5LWJ0blwiIHR5cGU9e1wic3VibWl0XCJ9PlxuICAgICAgICAgICAgUG9zdCB5b3VyIEFuc3dlclxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXJyLW1zZ1wiIGlkPVwiZXJyLW1zZ1wiIC8+XG4gICAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInByZXZpZXcgcmVwbHktcHJldmlld1wiXG4gICAgICAgICAgICBzb3VyY2U9e3RleHR9XG4gICAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucmVwbHktY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogODIlO1xuICAgICAgICAgIG1hcmdpbjogNDBweCBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLnJlcGx5LWZvcm0tdGV4dGFyZWEge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBoZWlnaHQ6ICR7dGV4dC5sZW5ndGggPT09IDAgPyBcIjEyMHB4XCIgOiBcIjIwMHB4XCJ9O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmlucHV0QmFja2dyb3VuZH07XG4gICAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHtjc3MuaW5wdXRCb3JkZXJ9O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAucmVwbHktZm9ybS10ZXh0YXJlYTpmb2N1cyB7XG4gICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5yZXBseS1idG4ge1xuICAgICAgICAgIG1hcmdpbjogMjBweCAxMHB4O1xuICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MubWFpbkJ1dHRvbn07XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIHBhZGRpbmc6IDdweCAxMHB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5yZXBseS1idG46aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLm1haW5CdXR0b25Ib3Zlcn07XG4gICAgICAgIH1cblxuICAgICAgICAuZXJyLW1zZyB7XG4gICAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgICAgICBtYXJnaW46IDIwcHggMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZXBseTtcbiJdfQ== */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Reply;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx"],"names":["React","useState","useContext","ReactMarkdown","remarkGfm","useRouter","css","host","getCookie","UserContext","Reply","question","text","setText","userContext","router","postAnswer","e","preventDefault","errMsg","document","getElementById","user","fetch","uuid","method","headers","Authorization","body","JSON","stringify","userUuid","then","res","json","data","catch","err","console","log","push","length","inputBackground","inputBorder","mainButton","mainButtonHover","target","value","window","scrollBy"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useRouter } from \"next/router\";\n\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n  question: QuestionType;\n}\n\nconst Reply: React.FC<Props> = ({ question }) => {\n  const [text, setText] = useState<string>(\"\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const postAnswer = async (e) => {\n    e.preventDefault();\n\n    const errMsg = document.getElementById(\"err-msg\") as HTMLDivElement;\n\n    if (userContext.user) {\n      fetch(`${host}/posts/${question.uuid}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`,\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n          body: text,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {})\n        .catch((err) => console.log(err));\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"reply-container\">\n        <form onSubmit={postAnswer}>\n          <textarea\n            id=\"reply\"\n            className=\"reply-form-textarea\"\n            required\n            placeholder={\"Reply to this question\"}\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n              window.scrollBy(0, 100);\n            }}\n          />\n          <button className=\"reply-btn\" type={\"submit\"}>\n            Post your Answer\n          </button>\n          <div className=\"err-msg\" id=\"err-msg\" />\n          <ReactMarkdown\n            className=\"preview reply-preview\"\n            source={text}\n            plugins={[remarkGfm]}\n          />\n        </form>\n      </div>\n\n      <style jsx>{`\n        .reply-container {\n          width: 82%;\n          margin: 40px auto;\n        }\n\n        .reply-form-textarea {\n          width: 100%;\n          resize: none;\n          display: block;\n          height: ${text.length === 0 ? \"120px\" : \"200px\"};\n          background: ${css.inputBackground};\n          color: #ffffff;\n          border: 2px solid ${css.inputBorder};\n          padding: 15px;\n        }\n\n        .reply-form-textarea:focus {\n          height: 200px;\n        }\n\n        .reply-btn {\n          margin: 20px 10px;\n          float: right;\n          border: none;\n          color: #fff;\n          background: ${css.mainButton};\n          border-radius: 3px;\n          padding: 7px 10px;\n          cursor: pointer;\n        }\n\n        .reply-btn:hover {\n          background: ${css.mainButtonHover};\n        }\n\n        .err-msg {\n          color: red;\n          margin: 20px 0;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Reply;\n"]},"metadata":{},"sourceType":"module"}