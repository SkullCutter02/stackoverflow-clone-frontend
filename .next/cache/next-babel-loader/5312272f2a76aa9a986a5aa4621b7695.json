{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as emailjs from \"emailjs-com\";\nimport * as css from \"../../../utils/cssVariables\";\nimport host from \"../../../utils/host\";\nimport Spinner from \"../../../components/Spinner\";\n\nconst ResetPasswordEmailPage = () => {\n  const {\n    0: isSent,\n    1: setIsSent\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"Send Email\");\n  const inputRef = useRef(null);\n  const errMsgRef = useRef(null);\n  const spinnerRef = useRef(null);\n  useEffect(() => {\n    emailjs.init(\"user_T4JvjEK9hRkJhuh75F1iy\");\n  }, []);\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    const res = await fetch(`${host}/auth/email/password/reset/send`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: inputRef.current.value\n      })\n    });\n    const data = await res.json();\n\n    if (data.msg !== undefined) {\n      errMsgRef.current.innerText = data.msg;\n    } else {\n      errMsgRef.current.innerText = \"\";\n      setText(\"\");\n      spinnerRef.current.style.display = \"block\";\n      emailjs.send(\"service_i431z9z\", \"template_6nvm25b\", {\n        email: inputRef.current.value,\n        reset_link: data.link\n      }).then(res => {\n        if (res.status >= 200 && res.status < 300) {\n          setIsSent(true);\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"resetpassword-container\",\n      children: !isSent ? /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: sendEmail,\n        className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"input-container\",\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]),\n          children: \"Reset Password:\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email address: \",\n          required: true,\n          ref: inputRef,\n          className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"email-input\"\n        }), /*#__PURE__*/_jsxs(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"submit\",\n          children: [text, /*#__PURE__*/_jsx(Spinner, {\n            spinner: spinnerRef\n          })]\n        }), /*#__PURE__*/_jsx(\"p\", {\n          ref: errMsgRef,\n          className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]) + \" \" + \"err-msg\"\n        })]\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]),\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          className: _JSXStyle.dynamic([[\"3506799747\", [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover]]]),\n          children: \"Email Sent!\"\n        })\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"3506799747\",\n      dynamic: [css.inputBorder, css.inputBackground, css.mainButton, css.mainButtonHover],\n      children: [\".resetpassword-container.__jsx-style-dynamic-selector{width:100%;height:80vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \".input-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:70%;width:30%;}\", `.email-input.__jsx-style-dynamic-selector{border:1px solid ${css.inputBorder};background:${css.inputBackground};color:#fff;min-height:40px;width:100%;text-indent:15px;font-size:0.8rem;}`, `.submit.__jsx-style-dynamic-selector{border:none;background:${css.mainButton};color:white;width:90px;min-height:25px;border-radius:4px;cursor:pointer;}`, `.submit.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}`, \"h2.__jsx-style-dynamic-selector,.submit.__jsx-style-dynamic-selector,.email-input.__jsx-style-dynamic-selector{margin:15px 0;}\", \".err-msg.__jsx-style-dynamic-selector{color:#ff0000;}\"]\n    })]\n  });\n};\n\nexport default ResetPasswordEmailPage;","map":null,"metadata":{},"sourceType":"module"}