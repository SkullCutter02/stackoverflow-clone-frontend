{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQueryClient } from \"react-query\";\nimport * as css from \"../utils/cssVariables\";\nimport Spinner from \"./Spinner\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst EditAnswer = ({\n  setEditMode,\n  comment\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(comment.body);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"Save\");\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const spinner = useRef(null);\n\n  const editForm = e => {\n    e.preventDefault();\n\n    if (userContext.user) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"edit-answer-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-answer-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"save\",\n          children: [text, /*#__PURE__*/_jsxDEV(Spinner, {\n            spinner: spinner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const confirm = window.confirm(\"Are you sure to discard your changes?\");\n\n            if (confirm) {\n              setEditMode(false);\n              window.scrollTo(0, -1000);\n            }\n          },\n          className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3034814656\",\n      dynamic: [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover],\n      children: `.edit-answer-body.__jsx-style-dynamic-selector{margin:20px auto;width:90%;}#edit-form-body.__jsx-style-dynamic-selector{width:100%;resize:none;height:200px;margin-bottom:20px;background:${css.inputBackground};border:2px solid ${css.inputBorder};color:#fff;padding:15px;}.buttons-container.__jsx-style-dynamic-selector{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;margin-bottom:-10px;}button.__jsx-style-dynamic-selector{margin-left:20px;border:none;border-radius:4px;width:80px;height:25px;cursor:pointer;color:#fff;font-size:0.8rem;}.save.__jsx-style-dynamic-selector{background:${css.mainButton};}.save.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}.cancel.__jsx-style-dynamic-selector{background:${css.cancelButton};}.cancel.__jsx-style-dynamic-selector:hover{background:${css.cancelButtonHover};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0QW5zd2VyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRWtCLEFBRzRCLEFBS04sQUFXQSxBQU9NLEFBV3VCLEFBSUEsQUFJQSxBQUlBLFdBeEM1QixBQVdDLE1BaEJILEFBdUJFLE1BakJDLElBTGYsRUF1Qm9CLE9BakJDLElBMkJyQixBQUlBLEFBSUEsQUFJQSxPQXJCYSxRQWpCNkIsR0FrQjVCLFlBQ0csZUFWVSxBQVdkLFVBbkJtQyxDQW9CN0IsaUJBQ25CLDRCQXBCYSxXQUNFLGFBQ2YsaUJBTXNCLG9CQUN0QiIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvRWRpdEFuc3dlci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNvbnRleHQsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5pbXBvcnQgeyB1c2VRdWVyeUNsaWVudCB9IGZyb20gXCJyZWFjdC1xdWVyeVwiO1xuXG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IHsgQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvaW5kaXZpZHVhbFF1ZXN0aW9uVHlwZVwiO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSBcIi4vU3Bpbm5lclwiO1xuaW1wb3J0IHsgVXNlckNvbnRleHQgfSBmcm9tIFwiLi4vY29udGV4dC9Vc2VyQ29udGV4dFwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBzZXRFZGl0TW9kZTogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+O1xuICBjb21tZW50OiBDb21tZW50VHlwZTtcbn1cblxuY29uc3QgRWRpdEFuc3dlcjogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc2V0RWRpdE1vZGUsIGNvbW1lbnQgfSkgPT4ge1xuICBjb25zdCBbYm9keSwgc2V0Qm9keV0gPSB1c2VTdGF0ZTxzdHJpbmc+KGNvbW1lbnQuYm9keSk7XG4gIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9IHVzZVN0YXRlPHN0cmluZz4oXCJTYXZlXCIpO1xuXG4gIGNvbnN0IHVzZXJDb250ZXh0ID0gdXNlQ29udGV4dChVc2VyQ29udGV4dCk7XG4gIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcbiAgY29uc3Qgc3Bpbm5lciA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgZWRpdEZvcm0gPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGlmICh1c2VyQ29udGV4dC51c2VyKSB7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPGZvcm0gY2xhc3NOYW1lPVwiZWRpdC1hbnN3ZXItYm9keVwiPlxuICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICBpZD1cImVkaXQtZm9ybS1ib2R5XCJcbiAgICAgICAgICBjb2xzPXszMH1cbiAgICAgICAgICByb3dzPXsxMH1cbiAgICAgICAgICB2YWx1ZT17Ym9keX1cbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldEJvZHkoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAvPlxuICAgICAgICA8UmVhY3RNYXJrZG93blxuICAgICAgICAgIGNsYXNzTmFtZT1cInByZXZpZXcgZWRpdC1hbnN3ZXItcHJldmlld1wiXG4gICAgICAgICAgc291cmNlPXtib2R5fVxuICAgICAgICAgIHBsdWdpbnM9e1tyZW1hcmtHZm1dfVxuICAgICAgICAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvbnMtY29udGFpbmVyXCI+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJzYXZlXCI+XG4gICAgICAgICAgICB7dGV4dH1cbiAgICAgICAgICAgIDxTcGlubmVyIHNwaW5uZXI9e3NwaW5uZXJ9IC8+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBjb25maXJtID0gd2luZG93LmNvbmZpcm0oXG4gICAgICAgICAgICAgICAgXCJBcmUgeW91IHN1cmUgdG8gZGlzY2FyZCB5b3VyIGNoYW5nZXM/XCJcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgaWYgKGNvbmZpcm0pIHtcbiAgICAgICAgICAgICAgICBzZXRFZGl0TW9kZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIC0xMDAwKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhbmNlbFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9mb3JtPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5lZGl0LWFuc3dlci1ib2R5IHtcbiAgICAgICAgICBtYXJnaW46IDIwcHggYXV0bztcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICB9XG5cbiAgICAgICAgI2VkaXQtZm9ybS1ib2R5IHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICByZXNpemU6IG5vbmU7XG4gICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmlucHV0QmFja2dyb3VuZH07XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHtjc3MuaW5wdXRCb3JkZXJ9O1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAuYnV0dG9ucy1jb250YWluZXIge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtMTBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLnNhdmUge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLm1haW5CdXR0b259O1xuICAgICAgICB9XG5cbiAgICAgICAgLnNhdmU6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLm1haW5CdXR0b25Ib3Zlcn07XG4gICAgICAgIH1cblxuICAgICAgICAuY2FuY2VsIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5jYW5jZWxCdXR0b259O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhbmNlbDpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuY2FuY2VsQnV0dG9uSG92ZXJ9O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRBbnN3ZXI7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EditAnswer;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx"],"names":["React","useState","useContext","useRef","ReactMarkdown","remarkGfm","useQueryClient","css","Spinner","UserContext","EditAnswer","setEditMode","comment","body","setBody","text","setText","userContext","queryClient","spinner","editForm","e","preventDefault","user","inputBackground","inputBorder","mainButton","mainButtonHover","cancelButton","cancelButtonHover","target","value","confirm","window","scrollTo"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQueryClient } from \"react-query\";\n\nimport * as css from \"../utils/cssVariables\";\nimport { CommentType } from \"../utils/types/individualQuestionType\";\nimport Spinner from \"./Spinner\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  comment: CommentType;\n}\n\nconst EditAnswer: React.FC<Props> = ({ setEditMode, comment }) => {\n  const [body, setBody] = useState<string>(comment.body);\n  const [text, setText] = useState<string>(\"Save\");\n\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const spinner = useRef<HTMLDivElement>(null);\n\n  const editForm = (e) => {\n    e.preventDefault();\n\n    if (userContext.user) {\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-answer-body\">\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-answer-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n        <div className=\"buttons-container\">\n          <button className=\"save\">\n            {text}\n            <Spinner spinner={spinner} />\n          </button>\n          <button\n            onClick={() => {\n              const confirm = window.confirm(\n                \"Are you sure to discard your changes?\"\n              );\n              if (confirm) {\n                setEditMode(false);\n                window.scrollTo(0, -1000);\n              }\n            }}\n            className=\"cancel\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      <style jsx>{`\n        .edit-answer-body {\n          margin: 20px auto;\n          width: 90%;\n        }\n\n        #edit-form-body {\n          width: 100%;\n          resize: none;\n          height: 200px;\n          margin-bottom: 20px;\n          background: ${css.inputBackground};\n          border: 2px solid ${css.inputBorder};\n          color: #fff;\n          padding: 15px;\n        }\n\n        .buttons-container {\n          width: 100%;\n          display: flex;\n          justify-content: flex-end;\n          margin-bottom: -10px;\n        }\n\n        button {\n          margin-left: 20px;\n          border: none;\n          border-radius: 4px;\n          width: 80px;\n          height: 25px;\n          cursor: pointer;\n          color: #fff;\n          font-size: 0.8rem;\n        }\n\n        .save {\n          background: ${css.mainButton};\n        }\n\n        .save:hover {\n          background: ${css.mainButtonHover};\n        }\n\n        .cancel {\n          background: ${css.cancelButton};\n        }\n\n        .cancel:hover {\n          background: ${css.cancelButtonHover};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default EditAnswer;\n"]},"metadata":{},"sourceType":"module"}