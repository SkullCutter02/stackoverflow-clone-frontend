{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../../../utils/host\";\nimport Question from \"../../../components/Question\";\n\nvar QuestionPage = function QuestionPage(_ref) {\n  var uuid = _ref.uuid;\n\n  var fetchQuestions = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/posts/\").concat(uuid));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchQuestions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"individual-question\"], function () {\n    return fetchQuestions();\n  }, {\n    cacheTime: 0\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/_jsx(\"main\", {\n      children: isLoading ? /*#__PURE__*/_jsx(\"div\", {\n        children: \"Loading...\"\n      }) : isError ? /*#__PURE__*/_jsx(\"div\", {\n        children: error.message\n      }) : /*#__PURE__*/_jsx(Question, {\n        data: data\n      })\n    })\n  });\n};\n\nexport var __N_SSP = true;\nexport default QuestionPage;","map":null,"metadata":{},"sourceType":"module"}