{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/user/[username]/index.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport host from \"../../../utils/host\";\n\nvar UserProfilePage = function UserProfilePage(_ref) {\n  var username = _ref.username;\n\n  var fetchUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/users/\"));\n\n            case 2:\n              res = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = UserProfilePage;\nexport var __N_SSP = true;\nexport default UserProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfilePage\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/user/[username]/index.tsx"],"names":["React","host","UserProfilePage","username","fetchUser","fetch","res"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAOC,IAAP,MAAiB,qBAAjB;;AAMA,IAAMC,eAAgC,GAAG,SAAnCA,eAAmC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACzD,MAAMC,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEC,KAAK,WAAIJ,IAAJ,aADP;;AAAA;AACVK,cAAAA,GADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATF,SAAS;AAAA;AAAA;AAAA,KAAf;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAVD;;KAAMD,e;;AAoBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { GetServerSideProps } from \"next\";\n\nimport host from \"../../../utils/host\";\n\ninterface Props {\n  username: string;\n}\n\nconst UserProfilePage: React.FC<Props> = ({ username }) => {\n  const fetchUser = async () => {\n    const res = await fetch(`${host}/users/`);\n  };\n\n  return (\n    <React.Fragment>\n      <p>{username}</p>\n    </React.Fragment>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  return {\n    props: {\n      username: context.query.username,\n    },\n  };\n};\n\nexport default UserProfilePage;\n"]},"metadata":{},"sourceType":"module"}