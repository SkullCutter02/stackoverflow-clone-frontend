{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\n\nconst UserAnswers = ({\n  uuid\n}) => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchUserAnswers = async page => {\n    const res = await fetch(`${host}/users/${uuid}/comments?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: uuid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\nexport default UserAnswers;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx"],"names":["React","useState","useQuery","host","UserAnswers","uuid","page","setPage","fetchUserAnswers","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","cacheTime"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;;AAQA,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAS,CAAT,CAAhC;;AAEA,QAAMO,gBAAgB,GAAG,MAAOF,IAAP,IAAwB;AAC/C,UAAMG,GAAG,GAAG,MAAMC,KAAK,CACpB,GAAEP,IAAK,UAASE,IAAK,kBAAiBC,IAAK,WADvB,CAAvB;AAGA,WAAO,MAAMG,GAAG,CAACE,IAAJ,EAAb;AACD,GALD;;AAOA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,MAAsDd,QAAQ,CAClE,CAAC,cAAD,EAAiBI,IAAjB,CADkE,EAElE,MAAME,gBAAgB,CAACF,IAAD,CAF4C,EAGlE;AAAEW,IAAAA,gBAAgB,EAAE,IAApB;AAA0BC,IAAAA,SAAS,EAAE;AAArC,GAHkE,CAApE;AAMA,sBAAO;AAAA,cAAMb;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjBD;;AAmBA,eAAeD,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport { UserAnswersType } from \"../utils/types/userAnswersType\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserAnswers: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserAnswers = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/comments?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery(\n    [\"user-answers\", page],\n    () => fetchUserAnswers(page),\n    { keepPreviousData: true, cacheTime: 0 }\n  );\n\n  return <div>{uuid}</div>;\n};\n\nexport default UserAnswers;\n"]},"metadata":{},"sourceType":"module"}