{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditQuestion.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\n\nconst EditQuestion = ({\n  setEditMode,\n  question\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(question.body);\n\n  const editForm = async e => {\n    e.preventDefault();\n    const saveBtn = document.getElementById(\"save\");\n    const spinner = document.getElementById(\"spinner\");\n    saveBtn.innerText = \"\";\n    spinner.style.display = \"inline\";\n    await fetch(`${host}/posts/${question.uuid}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`\n      },\n      body: JSON.stringify({\n        body: body\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editForm,\n      className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"edit-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-post-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          // onClick={() => {\n          //   setEditMode(false);\n          //   window.scrollBy(0, -1000);\n          // }}\n          id: \"save\",\n          className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"save\",\n          children: [\"Save\", /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"spinner\",\n            className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"smt-spinner-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"smt-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const confirm = window.confirm(\"Are you sure to discard your changes?\");\n\n            if (confirm) {\n              setEditMode(false);\n              window.scrollTo(0, -1000);\n            }\n          },\n          className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3254893101\",\n      dynamic: [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover],\n      children: `.edit-post-container.__jsx-style-dynamic-selector{width:92%;margin:20px auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}#edit-form-body.__jsx-style-dynamic-selector{width:90%;resize:none;height:400px;margin-bottom:20px;background:${css.inputBackground};border:2px solid ${css.inputBorder};color:#fff;padding:15px;}.buttons-container.__jsx-style-dynamic-selector{width:90%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}button.__jsx-style-dynamic-selector{margin-left:20px;border:none;border-radius:4px;width:80px;height:25px;cursor:pointer;color:#fff;font-size:0.8rem;}.save.__jsx-style-dynamic-selector{background:${css.mainButton};}.save.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}.cancel.__jsx-style-dynamic-selector{background:${css.cancelButton};}.cancel.__jsx-style-dynamic-selector:hover{background:${css.cancelButtonHover};}.smt-spinner-circle.__jsx-style-dynamic-selector{width:17px;height:17px;position:relative;border-radius:50%;margin:0 auto;display:none;}.smt-spinner.__jsx-style-dynamic-selector{height:100%;width:100%;border-radius:50%;border-right:2px solid rgba(255,255,255,0.6);border-top:2px solid #bababa;border-left:2px solid #dedede;border-bottom:2px solid #ffffff;-webkit-animation:rotate--spinner-__jsx-style-dynamic-selector 1.6s infinite;animation:rotate--spinner-__jsx-style-dynamic-selector 1.6s infinite;}@-webkit-keyframes rotate--spinner-__jsx-style-dynamic-selector{from{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}@keyframes rotate--spinner-__jsx-style-dynamic-selector{from{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0UXVlc3Rpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Ga0IsQUFHcUIsQUFRQSxBQVdBLEFBTU8sQUFXdUIsQUFJQSxBQUlBLEFBSUEsQUFJN0IsQUFTQyxBQVlVLEFBR0ssVUEzRVYsQUFRTCxBQVdDLENBaUNELENBU0QsS0FwQ0MsS0FoQkMsQ0E0Q0ssQUFTQSxJQTdETCxFQXlCSyxNQWhCQyxLQTBCckIsQUFJQSxBQUlBLEFBSUEsQ0FNb0IsQUFTOEIsTUFwQ3JDLE9BaEI2QixJQWlCNUIsQ0EyQkUsV0ExQkMsRUE0Q2YsQ0FqQmEsV0FwQ1ksQ0FVZCxDQTJCYixBQU8rQixDQVk3QixPQWhFOEMsRUFtQjdCLEtBN0JLLFlBOEJ4QixFQWlDZ0MseUJBcERuQixLQXFEcUIsTUFwRG5CLGFBQ2YsYUFvRDBDLEVBaEVyQixFQWtCckIsMkZBakJBLG1EQWdFQSIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvRWRpdFF1ZXN0aW9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5cbmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy9pbmRpdmlkdWFsUXVlc3Rpb25UeXBlXCI7XG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IGhvc3QgZnJvbSBcIi4uL3V0aWxzL2hvc3RcIjtcbmltcG9ydCB7IGdldENvb2tpZSB9IGZyb20gXCIuLi91dGlscy9mdW5jdGlvbnNcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2V0RWRpdE1vZGU6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPGJvb2xlYW4+PjtcbiAgcXVlc3Rpb246IFF1ZXN0aW9uVHlwZTtcbn1cblxuY29uc3QgRWRpdFF1ZXN0aW9uOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBzZXRFZGl0TW9kZSwgcXVlc3Rpb24gfSkgPT4ge1xuICBjb25zdCBbYm9keSwgc2V0Qm9keV0gPSB1c2VTdGF0ZTxzdHJpbmc+KHF1ZXN0aW9uLmJvZHkpO1xuXG4gIGNvbnN0IGVkaXRGb3JtID0gYXN5bmMgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBzYXZlQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzYXZlXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuICAgIGNvbnN0IHNwaW5uZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXJcIikgYXMgSFRNTERpdkVsZW1lbnQ7XG5cbiAgICBzYXZlQnRuLmlubmVyVGV4dCA9IFwiXCI7XG4gICAgc3Bpbm5lci5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmVcIjtcblxuICAgIGF3YWl0IGZldGNoKGAke2hvc3R9L3Bvc3RzLyR7cXVlc3Rpb24udXVpZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtnZXRDb29raWUoXCJ0b2tlblwiKX1gLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYm9keTogYm9keSxcbiAgICAgIH0pLFxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPGZvcm0gY2xhc3NOYW1lPVwiZWRpdC1wb3N0LWNvbnRhaW5lclwiIG9uU3VibWl0PXtlZGl0Rm9ybX0+XG4gICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgIGlkPVwiZWRpdC1mb3JtLWJvZHlcIlxuICAgICAgICAgIGNvbHM9ezMwfVxuICAgICAgICAgIHJvd3M9ezEwfVxuICAgICAgICAgIHZhbHVlPXtib2R5fVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0Qm9keShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgIC8+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgY2xhc3NOYW1lPVwicHJldmlldyBlZGl0LXBvc3QtcHJldmlld1wiXG4gICAgICAgICAgc291cmNlPXtib2R5fVxuICAgICAgICAgIHBsdWdpbnM9e1tyZW1hcmtHZm1dfVxuICAgICAgICAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvbnMtY29udGFpbmVyXCI+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgLy8gb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgLy8gICBzZXRFZGl0TW9kZShmYWxzZSk7XG4gICAgICAgICAgICAvLyAgIHdpbmRvdy5zY3JvbGxCeSgwLCAtMTAwMCk7XG4gICAgICAgICAgICAvLyB9fVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwic2F2ZVwiXG4gICAgICAgICAgICBpZD1cInNhdmVcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIFNhdmVcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJzcGlubmVyXCIgY2xhc3NOYW1lPVwic210LXNwaW5uZXItY2lyY2xlXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic210LXNwaW5uZXJcIiAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBjb25maXJtID0gd2luZG93LmNvbmZpcm0oXG4gICAgICAgICAgICAgICAgXCJBcmUgeW91IHN1cmUgdG8gZGlzY2FyZCB5b3VyIGNoYW5nZXM/XCJcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgaWYgKGNvbmZpcm0pIHtcbiAgICAgICAgICAgICAgICBzZXRFZGl0TW9kZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIC0xMDAwKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhbmNlbFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9mb3JtPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5lZGl0LXBvc3QtY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogOTIlO1xuICAgICAgICAgIG1hcmdpbjogMjBweCBhdXRvO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgI2VkaXQtZm9ybS1ib2R5IHtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaW5wdXRCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke2Nzcy5pbnB1dEJvcmRlcn07XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5idXR0b25zLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zYXZlIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5tYWluQnV0dG9ufTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zYXZlOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5tYWluQnV0dG9uSG92ZXJ9O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhbmNlbCB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuY2FuY2VsQnV0dG9ufTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYW5jZWw6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmNhbmNlbEJ1dHRvbkhvdmVyfTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zbXQtc3Bpbm5lci1jaXJjbGUge1xuICAgICAgICAgIHdpZHRoOiAxN3B4O1xuICAgICAgICAgIGhlaWdodDogMTdweDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAuc210LXNwaW5uZXIge1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICAgICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjYmFiYWJhO1xuICAgICAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2RlZGVkZTtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2ZmZmZmZjtcbiAgICAgICAgICBhbmltYXRpb246IHJvdGF0ZS0tc3Bpbm5lciAxLjZzIGluZmluaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgQGtleWZyYW1lcyByb3RhdGUtLXNwaW5uZXIge1xuICAgICAgICAgIGZyb20ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRvIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRRdWVzdGlvbjtcbiJdfQ== */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditQuestion.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EditQuestion;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditQuestion.tsx"],"names":["React","useState","ReactMarkdown","remarkGfm","css","host","getCookie","EditQuestion","setEditMode","question","body","setBody","editForm","e","preventDefault","saveBtn","document","getElementById","spinner","innerText","style","display","fetch","uuid","method","headers","Authorization","JSON","stringify","inputBackground","inputBorder","mainButton","mainButtonHover","cancelButton","cancelButtonHover","target","value","confirm","window","scrollTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAOA,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA+B;AACnE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAASQ,QAAQ,CAACC,IAAlB,CAAhC;;AAEA,QAAME,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB;AACA,UAAMC,OAAO,GAAGF,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AAEAF,IAAAA,OAAO,CAACI,SAAR,GAAoB,EAApB;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB,QAAxB;AAEA,UAAMC,KAAK,CAAE,GAAEjB,IAAK,UAASI,QAAQ,CAACc,IAAK,EAAhC,EAAmC;AAC5CC,MAAAA,MAAM,EAAE,OADoC;AAE5CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASpB,SAAS,CAAC,OAAD,CAAU;AAFrC,OAFmC;AAM5CI,MAAAA,IAAI,EAAEiB,IAAI,CAACC,SAAL,CAAe;AACnBlB,QAAAA,IAAI,EAAEA;AADa,OAAf;AANsC,KAAnC,CAAX;AAUD,GAnBD;;AAqBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAsC,MAAA,QAAQ,EAAEE,QAAhD;AAAA,oDA0DkBR,GAAG,CAACyB,eA1DtB,EA2DwBzB,GAAG,CAAC0B,WA3D5B,EAkFkB1B,GAAG,CAAC2B,UAlFtB,EAsFkB3B,GAAG,CAAC4B,eAtFtB,EA0FkB5B,GAAG,CAAC6B,YA1FtB,EA8FkB7B,GAAG,CAAC8B,iBA9FtB,aAAgB,qBAAhB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAExB,IAJT;AAKE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACsB,MAAF,CAASC,KAAV,CAL1B;AAAA,sDAyDgBhC,GAAG,CAACyB,eAzDpB,EA0DsBzB,GAAG,CAAC0B,WA1D1B,EAiFgB1B,GAAG,CAAC2B,UAjFpB,EAqFgB3B,GAAG,CAAC4B,eArFpB,EAyFgB5B,GAAG,CAAC6B,YAzFpB,EA6FgB7B,GAAG,CAAC8B,iBA7FpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,MAAM,EAAExB,IAFV;AAGE,QAAA,OAAO,EAAE,CAACP,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA,cARF,eAaE;AAAA,sDA6CgBC,GAAG,CAACyB,eA7CpB,EA8CsBzB,GAAG,CAAC0B,WA9C1B,EAqEgB1B,GAAG,CAAC2B,UArEpB,EAyEgB3B,GAAG,CAAC4B,eAzEpB,EA6EgB5B,GAAG,CAAC6B,YA7EpB,EAiFgB7B,GAAG,CAAC8B,iBAjFpB,aAAe,mBAAf;AAAA,gCACE;AACE;AACA;AACA;AACA;AAEA,UAAA,EAAE,EAAC,MANL;AAAA,wDA4Cc9B,GAAG,CAACyB,eA5ClB,EA6CoBzB,GAAG,CAAC0B,WA7CxB,EAoEc1B,GAAG,CAAC2B,UApElB,EAwEc3B,GAAG,CAAC4B,eAxElB,EA4Ec5B,GAAG,CAAC6B,YA5ElB,EAgFc7B,GAAG,CAAC8B,iBAhFlB,aAKY,MALZ;AAAA,0CASE;AAAK,YAAA,EAAE,EAAC,SAAR;AAAA,0DAmCY9B,GAAG,CAACyB,eAnChB,EAoCkBzB,GAAG,CAAC0B,WApCtB,EA2DY1B,GAAG,CAAC2B,UA3DhB,EA+DY3B,GAAG,CAAC4B,eA/DhB,EAmEY5B,GAAG,CAAC6B,YAnEhB,EAuEY7B,GAAG,CAAC8B,iBAvEhB,aAA4B,oBAA5B;AAAA,mCACE;AAAA,4DAkCU9B,GAAG,CAACyB,eAlCd,EAmCgBzB,GAAG,CAAC0B,WAnCpB,EA0DU1B,GAAG,CAAC2B,UA1Dd,EA8DU3B,GAAG,CAAC4B,eA9Dd,EAkEU5B,GAAG,CAAC6B,YAlEd,EAsEU7B,GAAG,CAAC8B,iBAtEd,aAAe;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMG,OAAO,GAAGC,MAAM,CAACD,OAAP,CACd,uCADc,CAAhB;;AAGA,gBAAIA,OAAJ,EAAa;AACX7B,cAAAA,WAAW,CAAC,KAAD,CAAX;AACA8B,cAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAC,IAApB;AACD;AACF,WATH;AAAA,wDA+BcnC,GAAG,CAACyB,eA/BlB,EAgCoBzB,GAAG,CAAC0B,WAhCxB,EAuDc1B,GAAG,CAAC2B,UAvDlB,EA2Dc3B,GAAG,CAAC4B,eA3DlB,EA+Dc5B,GAAG,CAAC6B,YA/DlB,EAmEc7B,GAAG,CAAC8B,iBAnElB,aAUY,QAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA,gBA2DoB9B,GAAG,CAACyB,eA3DxB,EA4D0BzB,GAAG,CAAC0B,WA5D9B,EAmFoB1B,GAAG,CAAC2B,UAnFxB,EAuFoB3B,GAAG,CAAC4B,eAvFxB,EA2FoB5B,GAAG,CAAC6B,YA3FxB,EA+FoB7B,GAAG,CAAC8B,iBA/FxB;AAAA,ocA2DoB9B,GAAG,CAACyB,eA3DxB,qBA4D0BzB,GAAG,CAAC0B,WA5D9B,ucAmFoB1B,GAAG,CAAC2B,UAnFxB,yDAuFoB3B,GAAG,CAAC4B,eAvFxB,qDA2FoB5B,GAAG,CAAC6B,YA3FxB,2DA+FoB7B,GAAG,CAAC8B,iBA/FxB;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkID,CA1JD;;AA4JA,eAAe3B,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  question: QuestionType;\n}\n\nconst EditQuestion: React.FC<Props> = ({ setEditMode, question }) => {\n  const [body, setBody] = useState<string>(question.body);\n\n  const editForm = async (e) => {\n    e.preventDefault();\n\n    const saveBtn = document.getElementById(\"save\") as HTMLButtonElement;\n    const spinner = document.getElementById(\"spinner\") as HTMLDivElement;\n\n    saveBtn.innerText = \"\";\n    spinner.style.display = \"inline\";\n\n    await fetch(`${host}/posts/${question.uuid}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`,\n      },\n      body: JSON.stringify({\n        body: body,\n      }),\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-post-container\" onSubmit={editForm}>\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-post-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n        <div className=\"buttons-container\">\n          <button\n            // onClick={() => {\n            //   setEditMode(false);\n            //   window.scrollBy(0, -1000);\n            // }}\n            className=\"save\"\n            id=\"save\"\n          >\n            Save\n            <div id=\"spinner\" className=\"smt-spinner-circle\">\n              <div className=\"smt-spinner\" />\n            </div>\n          </button>\n          <button\n            onClick={() => {\n              const confirm = window.confirm(\n                \"Are you sure to discard your changes?\"\n              );\n              if (confirm) {\n                setEditMode(false);\n                window.scrollTo(0, -1000);\n              }\n            }}\n            className=\"cancel\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      <style jsx>{`\n        .edit-post-container {\n          width: 92%;\n          margin: 20px auto;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n\n        #edit-form-body {\n          width: 90%;\n          resize: none;\n          height: 400px;\n          margin-bottom: 20px;\n          background: ${css.inputBackground};\n          border: 2px solid ${css.inputBorder};\n          color: #fff;\n          padding: 15px;\n        }\n\n        .buttons-container {\n          width: 90%;\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        button {\n          margin-left: 20px;\n          border: none;\n          border-radius: 4px;\n          width: 80px;\n          height: 25px;\n          cursor: pointer;\n          color: #fff;\n          font-size: 0.8rem;\n        }\n\n        .save {\n          background: ${css.mainButton};\n        }\n\n        .save:hover {\n          background: ${css.mainButtonHover};\n        }\n\n        .cancel {\n          background: ${css.cancelButton};\n        }\n\n        .cancel:hover {\n          background: ${css.cancelButtonHover};\n        }\n\n        .smt-spinner-circle {\n          width: 17px;\n          height: 17px;\n          position: relative;\n          border-radius: 50%;\n          margin: 0 auto;\n          display: none;\n        }\n\n        .smt-spinner {\n          height: 100%;\n          width: 100%;\n          border-radius: 50%;\n          border-right: 2px solid rgba(255, 255, 255, 0.6);\n          border-top: 2px solid #bababa;\n          border-left: 2px solid #dedede;\n          border-bottom: 2px solid #ffffff;\n          animation: rotate--spinner 1.6s infinite;\n        }\n\n        @keyframes rotate--spinner {\n          from {\n            transform: rotate(0);\n          }\n          to {\n            transform: rotate(360deg);\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default EditQuestion;\n"]},"metadata":{},"sourceType":"module"}