{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQueryClient } from \"react-query\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\nimport Spinner from \"./Spinner\";\n\nvar EditQuestion = function EditQuestion(_ref) {\n  var setEditMode = _ref.setEditMode,\n      question = _ref.question;\n\n  var _useState = useState(question.body),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  var _useState2 = useState(\"Save\"),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var userContext = useContext(UserContext);\n  var queryClient = useQueryClient();\n  var spinner = useRef(null);\n\n  var editForm = function editForm(e) {\n    e.preventDefault();\n\n    if (userContext.user) {\n      spinner.current.style.display = \"block\";\n      setText(\"\");\n      fetch(\"\".concat(host, \"/posts/\").concat(question.uuid), {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(getCookie(\"token\"))\n        },\n        body: JSON.stringify({\n          body: body,\n          userUuid: userContext.user.uuid\n        })\n      }).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.status >= 200 && res.status < 300)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return queryClient.prefetchQuery([\"individual-question\"], {\n                    cacheTime: 0\n                  });\n\n                case 3:\n                  setEditMode(false);\n                  window.scrollBy(0, -1000);\n                  _context.next = 10;\n                  break;\n\n                case 7:\n                  alert(\"Something went wrong\");\n                  setText(\"Save\");\n                  spinner.current.style.display = \"none\";\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: editForm,\n      className: _JSXStyle.dynamic([[\"3033340549\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"edit-post-container\",\n      children: [/*#__PURE__*/_jsx(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: function onChange(e) {\n          return setBody(e.target.value);\n        },\n        className: _JSXStyle.dynamic([[\"3033340549\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]])\n      }), /*#__PURE__*/_jsx(ReactMarkdown, {\n        className: \"preview edit-post-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: _JSXStyle.dynamic([[\"3033340549\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"buttons-container\",\n        children: [/*#__PURE__*/_jsxs(\"button\", {\n          className: _JSXStyle.dynamic([[\"3033340549\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"save\",\n          children: [text, /*#__PURE__*/_jsx(Spinner, {\n            spinner: spinner\n          })]\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: function onClick() {\n            var confirm = window.confirm(\"Are you sure you want to discard your changes?\");\n\n            if (confirm) {\n              setEditMode(false);\n              window.scrollTo(0, -1000);\n            }\n          },\n          className: _JSXStyle.dynamic([[\"3033340549\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"cancel\",\n          children: \"Cancel\"\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"3033340549\",\n      dynamic: [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover],\n      children: [\".edit-post-container.__jsx-style-dynamic-selector{width:92%;margin:20px auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \"#edit-form-body.__jsx-style-dynamic-selector{width:90%;resize:none;height:400px;margin-bottom:20px;background:\".concat(css.inputBackground, \";border:2px solid \").concat(css.inputBorder, \";color:#fff;padding:15px;}\"), \".buttons-container.__jsx-style-dynamic-selector{width:90%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}\", \"button.__jsx-style-dynamic-selector{margin-left:20px;border:none;border-radius:4px;width:80px;height:25px;cursor:pointer;color:#fff;font-size:0.8rem;}\", \".save.__jsx-style-dynamic-selector{background:\".concat(css.mainButton, \";}\"), \".save.__jsx-style-dynamic-selector:hover{background:\".concat(css.mainButtonHover, \";}\"), \".cancel.__jsx-style-dynamic-selector{background:\".concat(css.cancelButton, \";}\"), \".cancel.__jsx-style-dynamic-selector:hover{background:\".concat(css.cancelButtonHover, \";}\")]\n    })]\n  });\n};\n\nexport default EditQuestion;","map":null,"metadata":{},"sourceType":"module"}