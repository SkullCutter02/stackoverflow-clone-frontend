{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { getTime } from \"../utils/functions\";\n\nconst AskedBy = ({\n  username,\n  createdAt,\n  postUuid,\n  userUuid\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: _JSXStyle.dynamic([[\"71003630\", [postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"]]]),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: _JSXStyle.dynamic([[\"71003630\", [postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"]]]) + \" \" + \"asked-by\",\n        children: [\"asked by: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: _JSXStyle.dynamic([[\"71003630\", [postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"]]]) + \" \" + \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: _JSXStyle.dynamic([[\"71003630\", [postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"]]]) + \" \" + \"time\",\n          children: [\" \", getTime(createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"71003630\",\n      dynamic: [postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"],\n      children: `.asked-by.__jsx-style-dynamic-selector{font-size:0.9rem;color:#fff;margin-right:15px;}.asked-by.__jsx-style-dynamic-selector .username.__jsx-style-dynamic-selector{color:${postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Bc2tlZEJ5LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQmtCLEFBRzRCLEFBTWtCLGlCQUx4QixXQUNPLE9BSWtCLFdBSHRDIiwiZmlsZSI6Ii9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Bc2tlZEJ5LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgZ2V0VGltZSB9IGZyb20gXCIuLi91dGlscy9mdW5jdGlvbnNcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XG4gIHBvc3RVdWlkOiBzdHJpbmc7XG4gIHVzZXJVdWlkOiBzdHJpbmc7XG59XG5cbmNvbnN0IEFza2VkQnk6IFJlYWN0LkZDPFByb3BzPiA9ICh7XG4gIHVzZXJuYW1lLFxuICBjcmVhdGVkQXQsXG4gIHBvc3RVdWlkLFxuICB1c2VyVXVpZCxcbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8c3Bhbj5cbiAgICAgICAgPGkgY2xhc3NOYW1lPVwiYXNrZWQtYnlcIj5cbiAgICAgICAgICBhc2tlZCBieTogPHNwYW4gY2xhc3NOYW1lPVwidXNlcm5hbWVcIj57dXNlcm5hbWV9PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRpbWVcIj4ge2dldFRpbWUoY3JlYXRlZEF0KX08L3NwYW4+XG4gICAgICAgIDwvaT5cbiAgICAgIDwvc3Bhbj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAuYXNrZWQtYnkge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5hc2tlZC1ieSAudXNlcm5hbWUge1xuICAgICAgICAgIGNvbG9yOiAke3Bvc3RVdWlkID09PSB1c2VyVXVpZCA/IFwiIzNjYTRmZlwiIDogXCIjZmZmXCJ9XG5gfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFza2VkQnk7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AskedBy;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx"],"names":["React","getTime","AskedBy","username","createdAt","postUuid","userUuid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;;AASA,MAAMC,OAAwB,GAAG,CAAC;AAChCC,EAAAA,QADgC;AAEhCC,EAAAA,SAFgC;AAGhCC,EAAAA,QAHgC;AAIhCC,EAAAA;AAJgC,CAAD,KAK3B;AACJ,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,kDAeaD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAfjD;AAAA,6BACE;AAAA,oDAcWD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAd/C,aAAa,UAAb;AAAA,8CACY;AAAA,sDAaDD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAbnC,aAAgB,UAAhB;AAAA,oBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEE;AAAA,sDAYSE,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAZ7C,aAAgB,MAAhB;AAAA,0BAAyBL,OAAO,CAACG,SAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA,gBAgBeC,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAhBnD;AAAA,6LAgBeD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAhBnD;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3BD;;AA6BA,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\n\nimport { getTime } from \"../utils/functions\";\n\ninterface Props {\n  username: string;\n  createdAt: string;\n  postUuid: string;\n  userUuid: string;\n}\n\nconst AskedBy: React.FC<Props> = ({\n  username,\n  createdAt,\n  postUuid,\n  userUuid,\n}) => {\n  return (\n    <React.Fragment>\n      <span>\n        <i className=\"asked-by\">\n          asked by: <span className=\"username\">{username}</span>\n          <span className=\"time\"> {getTime(createdAt)}</span>\n        </i>\n      </span>\n\n      <style jsx>{`\n              .asked-by {\n          font-size: 0.9rem;\n          color: #fff;\n          margin-right: 15px;\n        }\n\n        .asked-by .username {\n          color: ${postUuid === userUuid ? \"#3ca4ff\" : \"#fff\"}\n`}</style>\n    </React.Fragment>\n  );\n};\n\nexport default AskedBy;\n"]},"metadata":{},"sourceType":"module"}