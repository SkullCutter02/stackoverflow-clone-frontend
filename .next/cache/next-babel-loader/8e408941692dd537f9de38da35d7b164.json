{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport PageHandlers from \"../components/PageHandlers\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport { getCookie } from \"../utils/functions\";\n\nconst AdminPage = () => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const nameRef = useRef(null);\n  const descriptionRef = useRef(null);\n\n  const fetchRequests = async page => {\n    const res = await fetch(`${host}/requests?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"requests\", page], () => fetchRequests(page), {\n    keepPreviousData: true\n  });\n\n  const postCommunity = e => {\n    e.preventDefault();\n\n    if (userContext.user) {\n      fetch(`${host}/communities`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: nameRef.current.value,\n          description: descriptionRef.current.value,\n          uuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.msg) {\n          console.log(data.msg);\n        } else {\n          nameRef.current.value = \"\";\n          descriptionRef.current.value = \"\";\n        }\n      });\n    }\n  };\n\n  const deleteRequest = async uuid => {\n    await fetch(`${host}/requests/${uuid}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${getCookie(\"token\")}`\n      }\n    });\n    await queryClient.prefetchQuery([\"requests\", page]);\n  };\n\n  if (userContext.user === undefined) {\n    return /*#__PURE__*/_jsx(\"div\", {});\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [userContext.user.role === \"god\" ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"jsx-2918500353\" + \" \" + \"admin-area-container\",\n      children: isLoading ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"jsx-2918500353\",\n        children: \"Loading...\"\n      }) : isError ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"jsx-2918500353\",\n        children: error.message\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: \"jsx-2918500353\" + \" \" + \"admin-area\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"jsx-2918500353\" + \" \" + \"requests-container\",\n          children: [data.requests.map(request => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"jsx-2918500353\",\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: \"jsx-2918500353\",\n              children: request.name\n            }), /*#__PURE__*/_jsx(\"a\", {\n              href: request.link,\n              style: {\n                color: \"white\"\n              },\n              className: \"jsx-2918500353\",\n              children: request.link\n            }), /*#__PURE__*/_jsx(\"button\", {\n              onClick: () => deleteRequest(request.uuid),\n              className: \"jsx-2918500353\",\n              children: \"Remove\"\n            })]\n          })), /*#__PURE__*/_jsx(PageHandlers, {\n            page: page,\n            setPage: setPage,\n            isPreviousData: isPreviousData,\n            hasMore: data.hasMore,\n            width: 100,\n            flex: \"flex-start\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          onSubmit: postCommunity,\n          className: \"jsx-2918500353\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            placeholder: \"Name: \",\n            ref: nameRef,\n            required: true,\n            className: \"jsx-2918500353\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            cols: 30,\n            rows: 10,\n            placeholder: \"Description: \",\n            ref: descriptionRef,\n            required: true,\n            className: \"jsx-2918500353\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            type: \"submit\",\n            className: \"jsx-2918500353\",\n            children: \"Submit\"\n          })]\n        })]\n      })\n    }) : /*#__PURE__*/_jsx(\"div\", {\n      className: \"jsx-2918500353\" + \" \" + \"rickroll\",\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: \"/rick.gif\",\n        alt: \"rick\",\n        className: \"jsx-2918500353\"\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"2918500353\",\n      children: [\".rickroll.jsx-2918500353{margin:100px auto;}\", \".rickroll.jsx-2918500353 img.jsx-2918500353{display:block;margin:0 auto;}\", \".admin-area.jsx-2918500353{margin:200px 200px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\", \"form.jsx-2918500353 input.jsx-2918500353,form.jsx-2918500353 textarea.jsx-2918500353{display:block;resize:none;}\"]\n    })]\n  });\n};\n\nexport default AdminPage;","map":null,"metadata":{},"sourceType":"module"}