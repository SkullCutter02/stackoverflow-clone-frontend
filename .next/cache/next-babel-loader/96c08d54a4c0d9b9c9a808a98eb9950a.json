{"ast":null,"code":"export function getCookie(cname) {\n  if (true) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(\";\");\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == \" \") {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  }\n}\nexport function getTime(time) {\n  var now = Date.now();\n  var comparedTime = Date.parse(time);\n  var difference = Math.abs(comparedTime - now);\n\n  if (difference <= 60000) {\n    return \"\".concat(Math.round(difference / 1000).toString(), \" secs ago\");\n  } else if (difference < 3600000) {\n    return \"\".concat(Math.round(difference / 60000).toString(), \" mins ago\");\n  } else if (difference < 86400000) {\n    return \"\".concat(Math.round(difference / 3600000).toString(), \" hrs ago\");\n  } else if (difference < 2678400000) {\n    return \"\".concat(Math.round(difference / 86400000).toString(), \" days ago\");\n  } else if (difference < 31557600000) {\n    return \"\".concat(Math.round(difference / 2629800000).toString(), \" months ago\");\n  } else if (difference >= 31557600000) {\n    return \"\".concat(Math.round(difference / 31557600000).toString(), \" yrs ago\");\n  }\n}\nexport function updateVote(data, voteType, setVotes, setUpvoteColor, setDownvoteColor, votes, upvote, downvote) {\n  if (data.status === false) {\n    if (voteType === \"upvote\") {\n      setVotes(votes + 1);\n      setUpvoteColor(upvote);\n    } else if (voteType === \"downvote\") {\n      setVotes(votes - 1);\n      setDownvoteColor(downvote);\n    }\n  } else if (data.status === true) {\n    if (data.type === \"upvote\" && voteType === \"upvote\") {\n      setVotes(votes - 1);\n      setUpvoteColor(\"grey\");\n      setDownvoteColor(\"grey\");\n    } else if (data.type === \"downvote\" && voteType === \"downvote\") {\n      setVotes(votes + 1);\n      setUpvoteColor(\"grey\");\n      setDownvoteColor(\"grey\");\n    } else if (data.type === \"upvote\" && voteType === \"downvote\") {\n      setVotes(votes - 2);\n      setUpvoteColor(\"grey\");\n      setDownvoteColor(downvote);\n    } else if (data.type === \"downvote\" && voteType === \"upvote\") {\n      setVotes(votes + 2);\n      setUpvoteColor(upvote);\n      setDownvoteColor(\"grey\");\n    }\n  }\n}\nexport function roundNumber(x) {\n  if (x >= 1000) {\n    var dividedNumber = (x / 1000).toFixed(1);\n    return \"\".concat(dividedNumber.toString(), \"k\");\n  }\n\n  return x.toString();\n}","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/utils/functions.ts"],"names":["getCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","getTime","time","now","Date","comparedTime","parse","difference","Math","abs","round","toString","updateVote","data","voteType","setVotes","setUpvoteColor","setDownvoteColor","votes","upvote","downvote","status","type","roundNumber","x","dividedNumber","toFixed"],"mappings":"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","sourcesContent":["import { voteType } from \"./types/voteType\";\n\nexport function getCookie(cname: string): string {\n  if (process.browser) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n}\n\nexport function getTime(time: string): string {\n  const now = Date.now();\n  const comparedTime = Date.parse(time);\n  const difference = Math.abs(comparedTime - now);\n\n  if (difference <= 60000) {\n    return `${Math.round(difference / 1000).toString()} secs ago`;\n  } else if (difference < 3600000) {\n    return `${Math.round(difference / 60000).toString()} mins ago`;\n  } else if (difference < 86400000) {\n    return `${Math.round(difference / 3600000).toString()} hrs ago`;\n  } else if (difference < 2678400000) {\n    return `${Math.round(difference / 86400000).toString()} days ago`;\n  } else if (difference < 31557600000) {\n    return `${Math.round(difference / 2629800000).toString()} months ago`;\n  } else if (difference >= 31557600000) {\n    return `${Math.round(difference / 31557600000).toString()} yrs ago`;\n  }\n}\n\nexport function updateVote(\n  data: voteType,\n  voteType: \"upvote\" | \"downvote\",\n  setVotes: (votes: number) => void,\n  setUpvoteColor: (color: string) => void,\n  setDownvoteColor: (color: string) => void,\n  votes: number,\n  upvote: string,\n  downvote: string\n): void {\n  if (data.status === false) {\n    if (voteType === \"upvote\") {\n      setVotes(votes + 1);\n      setUpvoteColor(upvote);\n    } else if (voteType === \"downvote\") {\n      setVotes(votes - 1);\n      setDownvoteColor(downvote);\n    }\n  } else if (data.status === true) {\n    if (data.type === \"upvote\" && voteType === \"upvote\") {\n      setVotes(votes - 1);\n      setUpvoteColor(\"grey\");\n      setDownvoteColor(\"grey\");\n    } else if (data.type === \"downvote\" && voteType === \"downvote\") {\n      setVotes(votes + 1);\n      setUpvoteColor(\"grey\");\n      setDownvoteColor(\"grey\");\n    } else if (data.type === \"upvote\" && voteType === \"downvote\") {\n      setVotes(votes - 2);\n      setUpvoteColor(\"grey\");\n      setDownvoteColor(downvote);\n    } else if (data.type === \"downvote\" && voteType === \"upvote\") {\n      setVotes(votes + 2);\n      setUpvoteColor(upvote);\n      setDownvoteColor(\"grey\");\n    }\n  }\n}\n\nexport function roundNumber(x: number): string {\n  if (x >= 1000) {\n    const dividedNumber = (x / 1000).toFixed(1);\n    return `${dividedNumber.toString()}k`;\n  }\n\n  return x.toString();\n}\n"]},"metadata":{},"sourceType":"module"}