{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/[community]/[uuid]/index.tsx\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"react-query\";\nimport host from \"../../../utils/host\";\n\nconst PostPage = () => {\n  const router = useRouter();\n  const {\n    community,\n    uuid\n  } = router.query;\n\n  const fetchCommunities = async () => {\n    const res = await fetch(`${host}/communities/${community}`);\n    const data = await res.json();\n    return data;\n  };\n\n  const {\n    isLoading,\n    isError,\n    data\n  } = useQuery([\"check-community\"], () => fetchCommunities());\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Community doesn't exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : data.uuid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: uuid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/[community]/[uuid]/index.tsx"],"names":["React","useRouter","useQuery","host","PostPage","router","community","uuid","query","fetchCommunities","res","fetch","data","json","isLoading","isError"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;;AAUA,MAAMC,QAAkB,GAAG,MAAM;AAC/B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBF,MAAM,CAACG,KAAnC;;AAEA,QAAMC,gBAAgB,GAAG,YAAY;AACnC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAER,IAAK,gBAAeG,SAAU,EAAlC,CAAvB;AACA,UAAMM,IAAmB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAlC;AACA,WAAOD,IAAP;AACD,GAJD;;AAMA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBH,IAAAA;AAAtB,MAA+BV,QAAQ,CAC3C,CAAC,iBAAD,CAD2C,EAE3C,MAAMO,gBAAgB,EAFqB,CAA7C;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA,gBACGK,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENC,OAAO,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,GAEPH,IAAI,CAACL,IAAL,gBACF;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADE,gBAGF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BD;;AAgCA,eAAeH,QAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../../../utils/host\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nconst PostPage: React.FC = () => {\n  const router = useRouter();\n  const { community, uuid } = router.query;\n\n  const fetchCommunities = async () => {\n    const res = await fetch(`${host}/communities/${community}`);\n    const data: CommunityType = await res.json();\n    return data;\n  };\n\n  const { isLoading, isError, data } = useQuery<CommunityType, Error>(\n    [\"check-community\"],\n    () => fetchCommunities()\n  );\n\n  return (\n    <React.Fragment>\n      <main>\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Community doesn't exist</div>\n        ) : data.uuid ? (\n          <div>{uuid}</div>\n        ) : (\n          <div />\n        )}\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}