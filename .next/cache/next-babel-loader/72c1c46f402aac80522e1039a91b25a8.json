{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { getTime } from \"../utils/functions\";\n\nconst AskedBy = ({\n  username,\n  createdAt,\n  postUuid,\n  userUuid\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: _JSXStyle.dynamic([[\"1168177219\", [postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"]]]),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: _JSXStyle.dynamic([[\"1168177219\", [postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"]]]) + \" \" + \"asked-by\",\n        children: [\"asked by: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: _JSXStyle.dynamic([[\"1168177219\", [postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"]]]) + \" \" + \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: _JSXStyle.dynamic([[\"1168177219\", [postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"]]]) + \" \" + \"time\",\n          children: [\" \", getTime(createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1168177219\",\n      dynamic: [postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"],\n      children: `.asked-by.__jsx-style-dynamic-selector{font-size:0.9rem;color:#fff;margin-right:15px;}.asked-by.__jsx-style-dynamic-selector .username.__jsx-style-dynamic-selector{color:${postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"};cursor:pointer;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Bc2tlZEJ5LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQmtCLEFBRzRCLEFBTWtCLGlCQUx4QixXQUNPLE9BS0gsV0FKakIsSUFLQSIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvQXNrZWRCeS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IGdldFRpbWUgfSBmcm9tIFwiLi4vdXRpbHMvZnVuY3Rpb25zXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIGNyZWF0ZWRBdDogc3RyaW5nO1xuICBwb3N0VXVpZDogc3RyaW5nO1xuICB1c2VyVXVpZDogc3RyaW5nO1xufVxuXG5jb25zdCBBc2tlZEJ5OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICB1c2VybmFtZSxcbiAgY3JlYXRlZEF0LFxuICBwb3N0VXVpZCxcbiAgdXNlclV1aWQsXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPHNwYW4+XG4gICAgICAgIDxpIGNsYXNzTmFtZT1cImFza2VkLWJ5XCI+XG4gICAgICAgICAgYXNrZWQgYnk6IDxzcGFuIGNsYXNzTmFtZT1cInVzZXJuYW1lXCI+e3VzZXJuYW1lfTwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0aW1lXCI+IHtnZXRUaW1lKGNyZWF0ZWRBdCl9PC9zcGFuPlxuICAgICAgICA8L2k+XG4gICAgICA8L3NwYW4+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmFza2VkLWJ5IHtcbiAgICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAuYXNrZWQtYnkgLnVzZXJuYW1lIHtcbiAgICAgICAgICBjb2xvcjogJHtwb3N0VXVpZCA9PT0gdXNlclV1aWQgPyBcIiMzY2E0ZmZcIiA6IFwiI2JlYmViZVwifTtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXNrZWRCeTtcbiJdfQ== */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AskedBy;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx"],"names":["React","getTime","AskedBy","username","createdAt","postUuid","userUuid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;;AASA,MAAMC,OAAwB,GAAG,CAAC;AAChCC,EAAAA,QADgC;AAEhCC,EAAAA,SAFgC;AAGhCC,EAAAA,QAHgC;AAIhCC,EAAAA;AAJgC,CAAD,KAK3B;AACJ,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,oDAeaD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,SAfjD;AAAA,6BACE;AAAA,sDAcWD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,SAd/C,aAAa,UAAb;AAAA,8CACY;AAAA,wDAaDD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,SAbnC,aAAgB,UAAhB;AAAA,oBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEE;AAAA,wDAYSE,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,SAZ7C,aAAgB,MAAhB;AAAA,0BAAyBL,OAAO,CAACG,SAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA,gBAgBeC,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,SAhBnD;AAAA,6LAgBeD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,SAhBnD;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7BD;;AA+BA,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\n\nimport { getTime } from \"../utils/functions\";\n\ninterface Props {\n  username: string;\n  createdAt: string;\n  postUuid: string;\n  userUuid: string;\n}\n\nconst AskedBy: React.FC<Props> = ({\n  username,\n  createdAt,\n  postUuid,\n  userUuid,\n}) => {\n  return (\n    <React.Fragment>\n      <span>\n        <i className=\"asked-by\">\n          asked by: <span className=\"username\">{username}</span>\n          <span className=\"time\"> {getTime(createdAt)}</span>\n        </i>\n      </span>\n\n      <style jsx>{`\n        .asked-by {\n          font-size: 0.9rem;\n          color: #fff;\n          margin-right: 15px;\n        }\n\n        .asked-by .username {\n          color: ${postUuid === userUuid ? \"#3ca4ff\" : \"#bebebe\"};\n          cursor: pointer;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default AskedBy;\n"]},"metadata":{},"sourceType":"module"}