{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\nconst Communities = () => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchCommunities = async (page = 1) => {\n    const res = await fetch(`${host}/communities?page=${page}&limit=5`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData\n  } = useQuery([\"communities\", page], () => fetchCommunities(page), {\n    keepPreviousData: true\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communities-container\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [data.communities.map(community => /*#__PURE__*/_jsxDEV(Community, {\n          name: community.name,\n          description: community.description\n        }, community.uuid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(old => Math.max(old - 1, 0)),\n          disabled: page === 1,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!isPreviousData && data.hasMore) {\n              setPage(old => old + 1);\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Communities;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx"],"names":["React","useState","useQuery","host","Community","Communities","page","setPage","fetchCommunities","res","fetch","json","isLoading","isError","error","data","isFetching","isPreviousData","keepPreviousData","message","communities","map","community","name","description","uuid","old","Math","max","hasMore"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAeA,MAAMC,WAAqB,GAAG,MAAM;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAS,CAAT,CAAhC;;AAEA,QAAMO,gBAAgB,GAAG,OAAOF,IAAY,GAAG,CAAtB,KAA4B;AACnD,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,qBAAoBG,IAAK,UAAlC,CAAvB;AACA,WAAO,MAAMG,GAAG,CAACE,IAAJ,EAAb;AACD,GAHD;;AAKA,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFf,QAAQ,CACV,CAAC,aAAD,EAAgBI,IAAhB,CADU,EAEV,MAAME,gBAAgB,CAACF,IAAD,CAFZ,EAGV;AACEY,IAAAA,gBAAgB,EAAE;AADpB,GAHU,CAPZ;AAeA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,iBACGN,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENC,OAAO,gBACT;AAAA,8BAAaC,KAAK,CAACK,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,gBAGT,QAAC,KAAD,CAAO,QAAP;AAAA,mBACGJ,IAAI,CAACK,WAAL,CAAiBC,GAAjB,CAAsBC,SAAD,iBACpB,QAAC,SAAD;AAEE,UAAA,IAAI,EAAEA,SAAS,CAACC,IAFlB;AAGE,UAAA,WAAW,EAAED,SAAS,CAACE;AAHzB,WACOF,SAAS,CAACG,IADjB;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAQE;AAAA,uCAAqBnB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AACE,UAAA,OAAO,EAAE,MAAMC,OAAO,CAAEmB,GAAD,IAASC,IAAI,CAACC,GAAL,CAASF,GAAG,GAAG,CAAf,EAAkB,CAAlB,CAAV,CADxB;AAEE,UAAA,QAAQ,EAAEpB,IAAI,KAAK,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAI,CAACW,cAAD,IAAmBF,IAAI,CAACc,OAA5B,EAAqC;AACnCtB,cAAAA,OAAO,CAAEmB,GAAD,IAASA,GAAG,GAAG,CAAhB,CAAP;AACD;AACF,WALH;AAME,UAAA,QAAQ,EAAET,cAAc,IAAI,CAACF,IAAI,CAACc,OANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAiCGb,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA6B,IAjC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA9DD;;AAgEA,eAAeX,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\ntype DataType = {\n  communities: CommunityType[];\n  hasMore: boolean;\n};\n\nconst Communities: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchCommunities = async (page: number = 1) => {\n    const res = await fetch(`${host}/communities?page=${page}&limit=5`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<DataType, Error>(\n    [\"communities\", page],\n    () => fetchCommunities(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"communities-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <React.Fragment>\n            {data.communities.map((community) => (\n              <Community\n                key={community.uuid}\n                name={community.name}\n                description={community.description}\n              />\n            ))}\n            <span>Current Page: {page}</span>\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </React.Fragment>\n        )}\n        {isFetching ? <span>Loading...</span> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n"]},"metadata":{},"sourceType":"module"}