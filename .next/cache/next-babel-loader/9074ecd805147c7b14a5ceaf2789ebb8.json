{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nvar EditAnswer = function EditAnswer(_ref) {\n  _s();\n\n  var setEditMode = _ref.setEditMode,\n      comment = _ref.comment;\n\n  var _useState = useState(comment.body),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"edit-answer-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: function onChange(e) {\n          return setBody(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-post-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EditAnswer, \"mA0RpvX6/2SjxkjT6785gSTyujk=\");\n\n_c = EditAnswer;\nexport default EditAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAnswer\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx"],"names":["React","useState","ReactMarkdown","remarkGfm","EditAnswer","setEditMode","comment","body","setBody","e","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAUA,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAA8B;AAAA;;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACxCL,QAAQ,CAASK,OAAO,CAACC,IAAjB,CADgC;AAAA,MACzDA,IADyD;AAAA,MACnDC,OADmD;;AAGhE,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAED,IAJT;AAKE,QAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,iBAAOD,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,eADF,eAQE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,MAAM,EAAEJ,IAFV;AAGE,QAAA,OAAO,EAAE,CAACJ,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CArBD;;GAAMC,U;;KAAAA,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport * as css from \"../utils/cssVariables\";\nimport { CommentType } from \"../utils/types/individualQuestionType\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  comment: CommentType;\n}\n\nconst EditAnswer: React.FC<Props> = ({ setEditMode, comment }) => {\n  const [body, setBody] = useState<string>(comment.body);\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-answer-body\">\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-post-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default EditAnswer;\n"]},"metadata":{},"sourceType":"module"}