{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport PageHandlers from \"./PageHandlers\";\n\nconst UserAnswers = ({\n  uuid\n}) => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchUserAnswers = async page => {\n    const res = await fetch(`${host}/users/${uuid}/comments?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]),\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: data.comments.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]) + \" \" + \"user-answers-container\",\n          children: data.comments.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]) + \" \" + \"user-answer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]) + \" \" + \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]),\n                children: answer.votes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]),\n                children: \"Votes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]) + \" \" + \"main\",\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                source: answer.body,\n                plugins: [remarkGfm],\n                className: \"preview user-answer-markdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PageHandlers, {\n          page: page,\n          setPage: setPage,\n          isPreviousData: isPreviousData,\n          hasMore: data.hasMore,\n          width: 97\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]) + \" \" + \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: _JSXStyle.dynamic([[\"3087614677\", [css.floatingPostBackground]]]),\n          children: \"This user doesn't have any answers...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3087614677\",\n      dynamic: [css.floatingPostBackground],\n      children: `.user-answer-container.__jsx-style-dynamic-selector{margin:30px 20px;padding:15px 20px;background:${css.floatingPostBackground};border-radius:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.empty.__jsx-style-dynamic-selector{height:300px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.left.__jsx-style-dynamic-selector{width:3%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}.left.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{color:#dedede;font-size:0.9rem;}.main.__jsx-style-dynamic-selector{width:97%;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyQW5zd2Vycy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVrQixBQUc0QixBQVFKLEFBT0osQUFRSyxBQUtKLFNBWkcsQ0FhZixHQXBCZSxDQWVJLEdBdkJDLGNBd0JwQixJQXZCMEMsd0NBQ3JCLFFBY0csSUFQQyxPQU5WLG1FQWNNLE9BYnJCLGtCQU1xQixvRUFRUSx5QkFQN0IsZ0ZBUUEiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9jb21wb25lbnRzL1VzZXJBbnN3ZXJzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tIFwicmVhY3QtcXVlcnlcIjtcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuaW1wb3J0IHJlbWFya0dmbSBmcm9tIFwicmVtYXJrLWdmbVwiO1xuaW1wb3J0IGhsanMgZnJvbSBcImhpZ2hsaWdodC5qc1wiO1xuXG5pbXBvcnQgaG9zdCBmcm9tIFwiLi4vdXRpbHMvaG9zdFwiO1xuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcbmltcG9ydCB7IFVzZXJBbnN3ZXJzVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy91c2VyQW5zd2Vyc1R5cGVcIjtcbmltcG9ydCBQYWdlSGFuZGxlcnMgZnJvbSBcIi4vUGFnZUhhbmRsZXJzXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHV1aWQ6IHN0cmluZztcbn1cblxuY29uc3QgVXNlckFuc3dlcnM6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHV1aWQgfSkgPT4ge1xuICBjb25zdCBbcGFnZSwgc2V0UGFnZV0gPSB1c2VTdGF0ZTxudW1iZXI+KDEpO1xuXG4gIGNvbnN0IGZldGNoVXNlckFuc3dlcnMgPSBhc3luYyAocGFnZTogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICBgJHtob3N0fS91c2Vycy8ke3V1aWR9L2NvbW1lbnRzP3BhZ2U9JHtwYWdlfSZsaW1pdD0yMGBcbiAgICApO1xuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICB9O1xuXG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0Vycm9yLCBlcnJvciwgZGF0YSwgaXNQcmV2aW91c0RhdGEgfSA9IHVzZVF1ZXJ5PFxuICAgIFVzZXJBbnN3ZXJzVHlwZSxcbiAgICBFcnJvclxuICA+KFtcInVzZXItYW5zd2Vyc1wiLCBwYWdlXSwgKCkgPT4gZmV0Y2hVc2VyQW5zd2VycyhwYWdlKSwge1xuICAgIGtlZXBQcmV2aW91c0RhdGE6IHRydWUsXG4gICAgY2FjaGVUaW1lOiAwLFxuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgIDxkaXY+TG9hZGluZy4uLjwvZGl2PlxuICAgICAgKSA6IGlzRXJyb3IgPyAoXG4gICAgICAgIDxkaXY+e2Vycm9yLm1lc3NhZ2V9PC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAge2RhdGEuY29tbWVudHMubGVuZ3RoICE9PSAwID8gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLWFuc3dlcnMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAge2RhdGEuY29tbWVudHMubWFwKChhbnN3ZXIpID0+IChcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlci1hbnN3ZXItY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxwPnthbnN3ZXIudm90ZXN9PC9wPlxuICAgICAgICAgICAgICAgICAgICAgIDxwPlZvdGVzPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZT17YW5zd2VyLmJvZHl9XG4gICAgICAgICAgICAgICAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInByZXZpZXcgdXNlci1hbnN3ZXItbWFya2Rvd25cIlxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8UGFnZUhhbmRsZXJzXG4gICAgICAgICAgICAgICAgcGFnZT17cGFnZX1cbiAgICAgICAgICAgICAgICBzZXRQYWdlPXtzZXRQYWdlfVxuICAgICAgICAgICAgICAgIGlzUHJldmlvdXNEYXRhPXtpc1ByZXZpb3VzRGF0YX1cbiAgICAgICAgICAgICAgICBoYXNNb3JlPXtkYXRhLmhhc01vcmV9XG4gICAgICAgICAgICAgICAgd2lkdGg9ezk3fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZW1wdHlcIj5cbiAgICAgICAgICAgICAgPGgxPlRoaXMgdXNlciBkb2Vzbid0IGhhdmUgYW55IGFuc3dlcnMuLi48L2gxPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICl9XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnVzZXItYW5zd2VyLWNvbnRhaW5lciB7XG4gICAgICAgICAgbWFyZ2luOiAzMHB4IDIwcHg7XG4gICAgICAgICAgcGFkZGluZzogMTVweCAyMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmZsb2F0aW5nUG9zdEJhY2tncm91bmR9O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5lbXB0eSB7XG4gICAgICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAubGVmdCB7XG4gICAgICAgICAgd2lkdGg6IDMlO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5sZWZ0IHAge1xuICAgICAgICAgIGNvbG9yOiAjZGVkZWRlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1haW4ge1xuICAgICAgICAgIHdpZHRoOiA5NyU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlckFuc3dlcnM7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserAnswers;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx"],"names":["React","useState","useQuery","ReactMarkdown","remarkGfm","host","css","PageHandlers","UserAnswers","uuid","page","setPage","fetchUserAnswers","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","cacheTime","floatingPostBackground","message","comments","length","map","answer","votes","body","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport hljs from \"highlight.js\";\n\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport { UserAnswersType } from \"../utils/types/userAnswersType\";\nimport PageHandlers from \"./PageHandlers\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserAnswers: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserAnswers = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/comments?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    UserAnswersType,\n    Error\n  >([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>{error.message}</div>\n      ) : (\n        <React.Fragment>\n          {data.comments.length !== 0 ? (\n            <div>\n              <div className=\"user-answers-container\">\n                {data.comments.map((answer) => (\n                  <div className=\"user-answer-container\">\n                    <div className=\"left\">\n                      <p>{answer.votes}</p>\n                      <p>Votes</p>\n                    </div>\n                    <div className=\"main\">\n                      <ReactMarkdown\n                        source={answer.body}\n                        plugins={[remarkGfm]}\n                        className=\"preview user-answer-markdown\"\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <PageHandlers\n                page={page}\n                setPage={setPage}\n                isPreviousData={isPreviousData}\n                hasMore={data.hasMore}\n                width={97}\n              />\n            </div>\n          ) : (\n            <div className=\"empty\">\n              <h1>This user doesn't have any answers...</h1>\n            </div>\n          )}\n        </React.Fragment>\n      )}\n\n      <style jsx>{`\n        .user-answer-container {\n          margin: 30px 20px;\n          padding: 15px 20px;\n          background: ${css.floatingPostBackground};\n          border-radius: 10px;\n          display: flex;\n        }\n\n        .empty {\n          height: 300px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .left {\n          width: 3%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n        }\n\n        .left p {\n          color: #dedede;\n          font-size: 0.9rem;\n        }\n\n        .main {\n          width: 97%;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default UserAnswers;\n"]},"metadata":{},"sourceType":"module"}