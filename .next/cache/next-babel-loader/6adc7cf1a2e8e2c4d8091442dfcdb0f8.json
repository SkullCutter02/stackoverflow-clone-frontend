{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useQueryClient } from \"react-query\";\nimport * as css from \"../utils/cssVariables\";\nimport Spinner from \"./Spinner\";\nimport { UserContext } from \"../context/UserContext\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\n\nconst EditAnswer = ({\n  setEditMode,\n  comment\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(comment.body);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"Save\");\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const spinner = useRef(null);\n\n  const editForm = e => {\n    e.preventDefault();\n\n    if (userContext.user) {\n      spinner.current.style.display = \"block\";\n      setText(\"\");\n      fetch(`${host}/posts/comments/${comment.uuid}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        },\n        body: JSON.stringify({\n          body: body,\n          userUuid: userContext.user.uuid\n        })\n      }).then(async res => {\n        if (res.status >= 200 && res.status < 300) {\n          await queryClient.prefetchQuery([\"individual-question\"], {\n            cacheTime: 0\n          });\n          setEditMode(false);\n        } else {\n          alert(\"Something went wrong\");\n          setText(\"Save\");\n          spinner.current.style.display = \"none\";\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: editForm,\n      className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"edit-answer-body\",\n      children: [/*#__PURE__*/_jsx(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]])\n      }), /*#__PURE__*/_jsx(ReactMarkdown, {\n        className: \"preview edit-answer-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"buttons-container\",\n        children: [/*#__PURE__*/_jsxs(\"button\", {\n          className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"save\",\n          children: [text, /*#__PURE__*/_jsx(Spinner, {\n            spinner: spinner\n          })]\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: () => {\n            const confirm = window.confirm(\"Are you sure you want to discard your changes?\");\n\n            if (confirm) {\n              setEditMode(false);\n            }\n          },\n          className: _JSXStyle.dynamic([[\"3034814656\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"cancel\",\n          children: \"Cancel\"\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"3034814656\",\n      dynamic: [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover],\n      children: [\".edit-answer-body.__jsx-style-dynamic-selector{margin:20px auto;width:90%;}\", `#edit-form-body.__jsx-style-dynamic-selector{width:100%;resize:none;height:200px;margin-bottom:20px;background:${css.inputBackground};border:2px solid ${css.inputBorder};color:#fff;padding:15px;}`, \".buttons-container.__jsx-style-dynamic-selector{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;margin-bottom:-10px;}\", \"button.__jsx-style-dynamic-selector{margin-left:20px;border:none;border-radius:4px;width:80px;height:25px;cursor:pointer;color:#fff;font-size:0.8rem;}\", `.save.__jsx-style-dynamic-selector{background:${css.mainButton};}`, `.save.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}`, `.cancel.__jsx-style-dynamic-selector{background:${css.cancelButton};}`, `.cancel.__jsx-style-dynamic-selector:hover{background:${css.cancelButtonHover};}`]\n    })]\n  });\n};\n\nexport default EditAnswer;","map":null,"metadata":{},"sourceType":"module"}