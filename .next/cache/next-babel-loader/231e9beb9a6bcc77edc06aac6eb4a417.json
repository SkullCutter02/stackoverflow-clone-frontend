{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserQuestions.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Link from \"next/link\";\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport Tag from \"./Tag\";\n\nconst UserQuestions = ({\n  uuid\n}) => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchUserPosts = async page => {\n    const res = await fetch(`${host}/users/${uuid}/posts?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"user-posts\", page], () => fetchUserPosts(page), {\n    keepPreviousData: true,\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]),\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"user-posts-container\",\n      children: [data.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"user-post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"post-aside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"number\",\n              children: post.votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"text\",\n              children: [\"Vote\", post.votes === 1 ? \"\" : \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"comments\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"number\",\n              children: post.comments.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"text\",\n              children: [\"Answer\", post.comments.length === 1 ? \"\" : \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"post-main\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: `/questions/${post.uuid}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"post-title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"communities-container\",\n            children: post.communities.slice(0, 4).map(community => /*#__PURE__*/_jsxDEV(Tag, {\n              name: community.name\n            }, community.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, post.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]) + \" \" + \"page-handlers\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(old => Math.max(old - 1, 0)),\n          disabled: page === 1,\n          className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]),\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!isPreviousData && data.hasMore) {\n              setPage(old => old + 1);\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          className: _JSXStyle.dynamic([[\"1993113032\", [css.floatingPostBackground]]]),\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1993113032\",\n      dynamic: [css.floatingPostBackground],\n      children: `.user-post-container.__jsx-style-dynamic-selector{height:100px;background:${css.floatingPostBackground};margin:30px 20px;border-radius:10px;padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.post-aside.__jsx-style-dynamic-selector{width:3%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0 5px;}.votes.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector{width:100%;height:50%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.votes.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{color:#dedede;font-size:1rem;}.votes.__jsx-style-dynamic-selector .text.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector .text.__jsx-style-dynamic-selector{font-size:0.7rem;}.post-main.__jsx-style-dynamic-selector{width:97%;margin-left:9px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.post-title.__jsx-style-dynamic-selector{color:#ffffff;cursor:pointer;font-size:0.95rem;display:block;word-wrap:break-word;overflow:hidden;line-height:1.2em;max-height:2.4em;margin-left:6px;margin-top:3px;}.communities-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Vc2VyUXVlc3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRmtCLEFBR3dCLEFBU0osQUFTRSxBQVVHLEFBTUcsQUFJUCxBQVFJLEFBYUQsU0FqREEsQ0E2QkcsQ0FwQkwsRUFsQjZCLENBNEJ6QixBQWtCQSxHQVpqQixLQWZlLElBb0JBLEdBVmYsQUFrQm9CLGtCQUNKLE1BL0NHLFFBZ0RJLFNBL0NGLElBeURyQixRQVRrQixDQXhDTSxNQVBULE9BaUJTLEVBK0JKLEVBWEksRUFwQ1QsY0FnREksaUJBQ0QsZ0JBQ0QsWUEzQ1EsR0E0Q3pCLFVBbEN5QixFQWhCekIsRUFvQ2dDLGtGQTdCakIsYUFDZixBQVNxQixvQkFvQnJCLHlFQW5CQSIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvVXNlclF1ZXN0aW9ucy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSBcInJlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5cbmltcG9ydCBob3N0IGZyb20gXCIuLi91dGlscy9ob3N0XCI7XG5pbXBvcnQgeyBVc2VyUG9zdHNUeXBlIH0gZnJvbSBcIi4uL3V0aWxzL3R5cGVzL3VzZXJQb3N0c1R5cGVcIjtcbmltcG9ydCAqIGFzIGNzcyBmcm9tIFwiLi4vdXRpbHMvY3NzVmFyaWFibGVzXCI7XG5pbXBvcnQgVGFnIGZyb20gXCIuL1RhZ1wiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICB1dWlkOiBzdHJpbmc7XG59XG5cbmNvbnN0IFVzZXJRdWVzdGlvbnM6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHV1aWQgfSkgPT4ge1xuICBjb25zdCBbcGFnZSwgc2V0UGFnZV0gPSB1c2VTdGF0ZTxudW1iZXI+KDEpO1xuXG4gIGNvbnN0IGZldGNoVXNlclBvc3RzID0gYXN5bmMgKHBhZ2U6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFxuICAgICAgYCR7aG9zdH0vdXNlcnMvJHt1dWlkfS9wb3N0cz9wYWdlPSR7cGFnZX0mbGltaXQ9MjBgXG4gICAgKTtcbiAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgfTtcblxuICBjb25zdCB7IGlzTG9hZGluZywgaXNFcnJvciwgZXJyb3IsIGRhdGEsIGlzUHJldmlvdXNEYXRhIH0gPSB1c2VRdWVyeTxcbiAgICBVc2VyUG9zdHNUeXBlLFxuICAgIEVycm9yXG4gID4oW1widXNlci1wb3N0c1wiLCBwYWdlXSwgKCkgPT4gZmV0Y2hVc2VyUG9zdHMocGFnZSksIHtcbiAgICBrZWVwUHJldmlvdXNEYXRhOiB0cnVlLFxuICAgIGNhY2hlVGltZTogMCxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICB7aXNMb2FkaW5nID8gKFxuICAgICAgICA8ZGl2PkxvYWRpbmcuLi48L2Rpdj5cbiAgICAgICkgOiBpc0Vycm9yID8gKFxuICAgICAgICA8ZGl2PntlcnJvci5tZXNzYWdlfTwvZGl2PlxuICAgICAgKSA6IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLXBvc3RzLWNvbnRhaW5lclwiPlxuICAgICAgICAgIHtkYXRhLnBvc3RzLm1hcCgocG9zdCkgPT4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1c2VyLXBvc3QtY29udGFpbmVyXCIga2V5PXtwb3N0LnV1aWR9PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3QtYXNpZGVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZvdGVzXCI+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJudW1iZXJcIj57cG9zdC52b3Rlc308L3A+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0XCI+Vm90ZXtwb3N0LnZvdGVzID09PSAxID8gXCJcIiA6IFwic1wifTwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbW1lbnRzXCI+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJudW1iZXJcIj57cG9zdC5jb21tZW50cy5sZW5ndGh9PC9wPlxuICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dFwiPlxuICAgICAgICAgICAgICAgICAgICBBbnN3ZXJ7cG9zdC5jb21tZW50cy5sZW5ndGggPT09IDEgPyBcIlwiIDogXCJzXCJ9XG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3QtbWFpblwiPlxuICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvcXVlc3Rpb25zLyR7cG9zdC51dWlkfWB9PlxuICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwicG9zdC10aXRsZVwiPntwb3N0LnRpdGxlfTwvcD5cbiAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tdW5pdGllcy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgIHtwb3N0LmNvbW11bml0aWVzLnNsaWNlKDAsIDQpLm1hcCgoY29tbXVuaXR5KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxUYWcgbmFtZT17Y29tbXVuaXR5Lm5hbWV9IGtleT17Y29tbXVuaXR5Lm5hbWV9IC8+XG4gICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApKX1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2UtaGFuZGxlcnNcIj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0UGFnZSgob2xkKSA9PiBNYXRoLm1heChvbGQgLSAxLCAwKSl9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXtwYWdlID09PSAxfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBQcmV2aW91cyBQYWdlXG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghaXNQcmV2aW91c0RhdGEgJiYgZGF0YS5oYXNNb3JlKSB7XG4gICAgICAgICAgICAgICAgICBzZXRQYWdlKChvbGQpID0+IG9sZCArIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzUHJldmlvdXNEYXRhIHx8ICFkYXRhLmhhc01vcmV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIE5leHQgUGFnZVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAudXNlci1wb3N0LWNvbnRhaW5lciB7XG4gICAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5mbG9hdGluZ1Bvc3RCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBtYXJnaW46IDMwcHggMjBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0LWFzaWRlIHtcbiAgICAgICAgICB3aWR0aDogMyU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbjogMCA1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAudm90ZXMsXG4gICAgICAgIC5jb21tZW50cyB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAudm90ZXMgcCxcbiAgICAgICAgLmNvbW1lbnRzIHAge1xuICAgICAgICAgIGNvbG9yOiAjZGVkZWRlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC52b3RlcyAudGV4dCxcbiAgICAgICAgLmNvbW1lbnRzIC50ZXh0IHtcbiAgICAgICAgICBmb250LXNpemU6IDAuN3JlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0LW1haW4ge1xuICAgICAgICAgIHdpZHRoOiA5NyU7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDlweDtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBvc3QtdGl0bGUge1xuICAgICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBmb250LXNpemU6IDAuOTVyZW07XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAgICAgICAgIG1heC1oZWlnaHQ6IDIuNGVtO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiA2cHg7XG4gICAgICAgICAgbWFyZ2luLXRvcDogM3B4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNvbW11bml0aWVzLWNvbnRhaW5lciB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBVc2VyUXVlc3Rpb25zO1xuIl19 */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserQuestions.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserQuestions;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserQuestions.tsx"],"names":["React","useState","useQuery","Link","host","css","Tag","UserQuestions","uuid","page","setPage","fetchUserPosts","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","cacheTime","floatingPostBackground","message","posts","map","post","votes","comments","length","title","communities","slice","community","name","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Link from \"next/link\";\n\nimport host from \"../utils/host\";\nimport { UserPostsType } from \"../utils/types/userPostsType\";\nimport * as css from \"../utils/cssVariables\";\nimport Tag from \"./Tag\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserQuestions: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserPosts = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/posts?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    UserPostsType,\n    Error\n  >([\"user-posts\", page], () => fetchUserPosts(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>{error.message}</div>\n      ) : (\n        <div className=\"user-posts-container\">\n          {data.posts.map((post) => (\n            <div className=\"user-post-container\" key={post.uuid}>\n              <div className=\"post-aside\">\n                <div className=\"votes\">\n                  <p className=\"number\">{post.votes}</p>\n                  <p className=\"text\">Vote{post.votes === 1 ? \"\" : \"s\"}</p>\n                </div>\n                <div className=\"comments\">\n                  <p className=\"number\">{post.comments.length}</p>\n                  <p className=\"text\">\n                    Answer{post.comments.length === 1 ? \"\" : \"s\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"post-main\">\n                <Link href={`/questions/${post.uuid}`}>\n                  <p className=\"post-title\">{post.title}</p>\n                </Link>\n                <div className=\"communities-container\">\n                  {post.communities.slice(0, 4).map((community) => (\n                    <Tag name={community.name} key={community.name} />\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n          <div className=\"page-handlers\">\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        .user-post-container {\n          height: 100px;\n          background: ${css.floatingPostBackground};\n          margin: 30px 20px;\n          border-radius: 10px;\n          padding: 10px;\n          display: flex;\n        }\n\n        .post-aside {\n          width: 3%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          margin: 0 5px;\n        }\n\n        .votes,\n        .comments {\n          width: 100%;\n          height: 50%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .votes p,\n        .comments p {\n          color: #dedede;\n          font-size: 1rem;\n        }\n\n        .votes .text,\n        .comments .text {\n          font-size: 0.7rem;\n        }\n\n        .post-main {\n          width: 97%;\n          margin-left: 9px;\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n        }\n\n        .post-title {\n          color: #ffffff;\n          cursor: pointer;\n          font-size: 0.95rem;\n          display: block;\n          word-wrap: break-word;\n          overflow: hidden;\n          line-height: 1.2em;\n          max-height: 2.4em;\n          margin-left: 6px;\n          margin-top: 3px;\n        }\n\n        .communities-container {\n          display: flex;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default UserQuestions;\n"]},"metadata":{},"sourceType":"module"}