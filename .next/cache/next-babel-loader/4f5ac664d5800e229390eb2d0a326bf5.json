{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\n\nconst Reply = ({\n  question\n}) => {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n\n  const postAnswer = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"3443155980\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postAnswer,\n        className: _JSXStyle.dynamic([[\"3443155980\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"reply\",\n          required: true,\n          placeholder: \"Reply to this question\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n            window.scrollBy(0, 100);\n          },\n          className: _JSXStyle.dynamic([[\"3443155980\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"3443155980\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-btn\",\n          children: \"Post your Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"preview reply-preview\",\n          source: text,\n          plugins: [remarkGfm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3443155980\",\n      dynamic: [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover],\n      children: `.reply-container.__jsx-style-dynamic-selector{width:82%;margin:40px auto;}.reply-form-textarea.__jsx-style-dynamic-selector{width:100%;resize:none;display:block;height:${text.length === 0 ? \"120px\" : \"200px\"};background:${css.inputBackground};color:#ffffff;border:2px solid ${css.inputBorder};padding:15px;}.reply-form-textarea.__jsx-style-dynamic-selector:focus{height:200px;}.reply-btn.__jsx-style-dynamic-selector{margin:20px 10px;float:right;border:none;color:#fff;background:${css.mainButton};border-radius:3px;padding:7px 10px;cursor:pointer;}.reply-btn.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9SZXBseS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkNrQixBQUdxQixBQUtDLEFBV0UsQUFJSSxBQVd1QixVQTlCdkIsQ0FLTCxFQVdkLElBSWMsTUFkRSxJQUxoQixFQW9CYyxRQWR3QixHQXdCdEMsQ0FUYSxXQUM2QixxQkFmQSxtQkFnQnRCLGtCQUNELEdBaEJILGNBQ2dDLEFBZ0IvQixlQUNqQiwrQkFoQmUsYUFDZiIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvUmVwbHkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcbmltcG9ydCByZW1hcmtHZm0gZnJvbSBcInJlbWFyay1nZm1cIjtcblxuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcbmltcG9ydCBob3N0IGZyb20gXCIuLi91dGlscy9ob3N0XCI7XG5pbXBvcnQgeyBRdWVzdGlvblR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvaW5kaXZpZHVhbFF1ZXN0aW9uVHlwZVwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBxdWVzdGlvbjogUXVlc3Rpb25UeXBlO1xufVxuXG5jb25zdCBSZXBseTogUmVhY3QuRkM8UHJvcHM+ID0gKHsgcXVlc3Rpb24gfSkgPT4ge1xuICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xuXG4gIGNvbnN0IHBvc3RBbnN3ZXIgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVwbHktY29udGFpbmVyXCI+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXtwb3N0QW5zd2VyfT5cbiAgICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICAgIGlkPVwicmVwbHlcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVwbHktZm9ybS10ZXh0YXJlYVwiXG4gICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1wiUmVwbHkgdG8gdGhpcyBxdWVzdGlvblwifVxuICAgICAgICAgICAgdmFsdWU9e3RleHR9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgc2V0VGV4dChlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxCeSgwLCAxMDApO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwicmVwbHktYnRuXCIgdHlwZT17XCJzdWJtaXRcIn0+XG4gICAgICAgICAgICBQb3N0IHlvdXIgQW5zd2VyXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInByZXZpZXcgcmVwbHktcHJldmlld1wiXG4gICAgICAgICAgICBzb3VyY2U9e3RleHR9XG4gICAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucmVwbHktY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogODIlO1xuICAgICAgICAgIG1hcmdpbjogNDBweCBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLnJlcGx5LWZvcm0tdGV4dGFyZWEge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBoZWlnaHQ6ICR7dGV4dC5sZW5ndGggPT09IDAgPyBcIjEyMHB4XCIgOiBcIjIwMHB4XCJ9O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmlucHV0QmFja2dyb3VuZH07XG4gICAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHtjc3MuaW5wdXRCb3JkZXJ9O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cblxuICAgICAgICAucmVwbHktZm9ybS10ZXh0YXJlYTpmb2N1cyB7XG4gICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5yZXBseS1idG4ge1xuICAgICAgICAgIG1hcmdpbjogMjBweCAxMHB4O1xuICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MubWFpbkJ1dHRvbn07XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIHBhZGRpbmc6IDdweCAxMHB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5yZXBseS1idG46aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLm1haW5CdXR0b25Ib3Zlcn07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmVwbHk7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Reply;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx"],"names":["React","useState","ReactMarkdown","remarkGfm","css","Reply","question","text","setText","postAnswer","e","preventDefault","length","inputBackground","inputBorder","mainButton","mainButtonHover","target","value","window","scrollBy"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\n\ninterface Props {\n  question: QuestionType;\n}\n\nconst Reply: React.FC<Props> = ({ question }) => {\n  const [text, setText] = useState<string>(\"\");\n\n  const postAnswer = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"reply-container\">\n        <form onSubmit={postAnswer}>\n          <textarea\n            id=\"reply\"\n            className=\"reply-form-textarea\"\n            required\n            placeholder={\"Reply to this question\"}\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n              window.scrollBy(0, 100);\n            }}\n          />\n          <button className=\"reply-btn\" type={\"submit\"}>\n            Post your Answer\n          </button>\n          <ReactMarkdown\n            className=\"preview reply-preview\"\n            source={text}\n            plugins={[remarkGfm]}\n          />\n        </form>\n      </div>\n\n      <style jsx>{`\n        .reply-container {\n          width: 82%;\n          margin: 40px auto;\n        }\n\n        .reply-form-textarea {\n          width: 100%;\n          resize: none;\n          display: block;\n          height: ${text.length === 0 ? \"120px\" : \"200px\"};\n          background: ${css.inputBackground};\n          color: #ffffff;\n          border: 2px solid ${css.inputBorder};\n          padding: 15px;\n        }\n\n        .reply-form-textarea:focus {\n          height: 200px;\n        }\n\n        .reply-btn {\n          margin: 20px 10px;\n          float: right;\n          border: none;\n          color: #fff;\n          background: ${css.mainButton};\n          border-radius: 3px;\n          padding: 7px 10px;\n          cursor: pointer;\n        }\n\n        .reply-btn:hover {\n          background: ${css.mainButtonHover};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Reply;\n"]},"metadata":{},"sourceType":"module"}