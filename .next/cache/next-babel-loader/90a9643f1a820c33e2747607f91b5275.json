{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useQueryClient } from \"react-query\";\nimport { useRouter } from \"next/router\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\nvar OPActions = function OPActions(_ref) {\n  var uuid = _ref.uuid,\n      type = _ref.type,\n      setEditMode = _ref.setEditMode;\n  var userContext = useContext(UserContext);\n  var queryClient = useQueryClient();\n  var router = useRouter();\n  var style = {\n    cursor: \"pointer\",\n    marginRight: \"20px\"\n  };\n\n  var edit = function edit() {\n    setEditMode(true);\n\n    if (type === \"question\") {\n      window.scrollBy(0, -1000);\n    }\n  };\n\n  var remove = function remove() {\n    if (userContext.user) {\n      var confirm = window.confirm(\"Are you sure you want to delete your \".concat(type, \"?\"));\n\n      if (confirm) {\n        if (type === \"answer\") {\n          fetch(\"\".concat(host, \"/posts/comments/\").concat(uuid), {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \".concat(getCookie(\"token\"))\n            },\n            body: JSON.stringify({\n              userUuid: userContext.user.uuid\n            })\n          }).then( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(res.status >= 200 && res.status < 300)) {\n                        _context.next = 5;\n                        break;\n                      }\n\n                      _context.next = 3;\n                      return queryClient.prefetchQuery([\"individual-question\"], {\n                        cacheTime: 0\n                      });\n\n                    case 3:\n                      _context.next = 6;\n                      break;\n\n                    case 5:\n                      alert(\"Something went wrong\");\n\n                    case 6:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n        } else if (type === \"question\") {\n          fetch(\"\".concat(host, \"/posts/\").concat(uuid), {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \".concat(getCookie(\"token\"))\n            },\n            body: JSON.stringify({\n              userUuid: userContext.user.uuid\n            })\n          }).then(function (res) {\n            if (res.status >= 200 && res.status < 300) {\n              router.back();\n            } else {\n              alert(\"Something went wrong\");\n            }\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"jsx-1982353922\" + \" \" + \"actions-container\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"jsx-1982353922\" + \" \" + \"icons-container\",\n        children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faEdit,\n          color: \"white\",\n          style: style,\n          size: \"1x\",\n          onClick: edit\n        }), /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faTrashAlt,\n          color: \"white\",\n          style: style,\n          size: \"1x\",\n          onClick: remove\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"1982353922\",\n      children: [\".actions-container.jsx-1982353922{width:95%;}\", \".icons-container.jsx-1982353922{float:right;}\"]\n    })]\n  });\n};\n\nexport default OPActions;","map":null,"metadata":{},"sourceType":"module"}