{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useQueryClient } from \"react-query\";\nimport { useRouter } from \"next/router\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst OPActions = ({\n  uuid,\n  type,\n  setEditMode\n}) => {\n  const userContext = useContext(UserContext);\n  const queryClient = useQueryClient();\n  const router = useRouter();\n  const style = {\n    cursor: \"pointer\",\n    marginRight: \"20px\"\n  };\n\n  const edit = () => {\n    setEditMode(true);\n\n    if (type === \"question\") {\n      window.scrollBy(0, -1000);\n    }\n  };\n\n  const remove = () => {\n    if (userContext.user) {\n      const confirm = window.confirm(`Are you sure you want to delete your ${type}?`);\n\n      if (confirm) {\n        if (type === \"answer\") {\n          fetch(`${host}/posts/comments/${uuid}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${getCookie(\"token\")}`\n            },\n            body: JSON.stringify({\n              userUuid: userContext.user.uuid\n            })\n          }).then(async res => {\n            if (res.status >= 200 && res.status < 300) {\n              await queryClient.prefetchQuery([\"individual-question\"], {\n                cacheTime: 0\n              });\n            } else {\n              alert(\"Something went wrong\");\n            }\n          });\n        } else if (type === \"question\") {\n          fetch(`${host}/posts/${uuid}`, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${getCookie(\"token\")}`\n            },\n            body: JSON.stringify({\n              userUuid: userContext.user.uuid\n            })\n          }).then(res => {\n            if (res.status >= 200 && res.status < 300) {\n              router.back();\n            } else {\n              alert(\"Something went wrong\");\n            }\n          });\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"jsx-1982353922\" + \" \" + \"actions-container\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"jsx-1982353922\" + \" \" + \"icons-container\",\n        children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faEdit,\n          color: \"white\",\n          style: style,\n          size: \"1x\",\n          onClick: edit\n        }), /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faTrashAlt,\n          color: \"white\",\n          style: style,\n          size: \"1x\",\n          onClick: remove\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"1982353922\",\n      children: [\".actions-container.jsx-1982353922{width:95%;}\", \".icons-container.jsx-1982353922{float:right;}\"]\n    })]\n  });\n};\n\nexport default OPActions;","map":null,"metadata":{},"sourceType":"module"}