{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/questions/[uuid]/index.tsx\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"react-query\";\nimport host from \"../../../utils/host\";\n\nconst QuestionPage = () => {\n  const router = useRouter();\n  const {\n    uuid\n  } = router.query;\n\n  const fetchQuestions = async () => {\n    const res = await fetch(`${host}/posts/${uuid}`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data\n  } = useQuery([\"individual-question\"], () => fetchQuestions());\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.uuid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default QuestionPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/questions/[uuid]/index.tsx"],"names":["React","useRouter","useQuery","host","QuestionPage","router","uuid","query","fetchQuestions","res","fetch","json","isLoading","isError","error","data","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;;AAEA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,UAASG,IAAK,EAAvB,CAAvB;AACA,WAAO,MAAMG,GAAG,CAACE,IAAJ,EAAb;AACD,GAHD;;AAKA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAAsCb,QAAQ,CAClD,CAAC,qBAAD,CADkD,EAElD,MAAMM,cAAc,EAF8B,CAApD;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA,gBACGI,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENC,OAAO,gBACT;AAAA,kBAAMC,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cADS,gBAGT;AAAA,kBAAMD,IAAI,CAACT;AAAX;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA3BD;;AA6BA,eAAeF,YAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../../../utils/host\";\nimport { QuestionType } from \"../../../utils/types/individualQuestionType\";\n\nconst QuestionPage = () => {\n  const router = useRouter();\n  const { uuid } = router.query;\n\n  const fetchQuestions = async () => {\n    const res = await fetch(`${host}/posts/${uuid}`);\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data } = useQuery<QuestionType, Error>(\n    [\"individual-question\"],\n    () => fetchQuestions()\n  );\n\n  return (\n    <React.Fragment>\n      <main>\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>{error.message}</div>\n        ) : (\n          <div>{data.uuid}</div>\n        )}\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default QuestionPage;\n"]},"metadata":{},"sourceType":"module"}