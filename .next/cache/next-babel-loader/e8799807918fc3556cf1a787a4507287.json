{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\nimport hljs from \"highlight.js\";\nimport { getCookie, updateVote } from \"../utils/functions\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport AskedBy from \"./AskedBy\";\nimport Tag from \"./Tag\";\nimport * as css from \"../utils/cssVariables\";\nimport OPActions from \"./OPActions\";\n\nvar Question = function Question(_ref) {\n  _s();\n\n  var _userContext$user, _userContext$user2, _userContext$user3;\n\n  var question = _ref.question,\n      setEditMode = _ref.setEditMode,\n      editMode = _ref.editMode;\n\n  var _useState = useState(question.votes),\n      votes = _useState[0],\n      setVotes = _useState[1];\n\n  var _useState2 = useState(\"grey\"),\n      upvoteColor = _useState2[0],\n      setUpvoteColor = _useState2[1];\n\n  var _useState3 = useState(\"grey\"),\n      downvoteColor = _useState3[0],\n      setDownvoteColor = _useState3[1];\n\n  var userContext = useContext(UserContext);\n  var router = useRouter();\n  var upvote = css.upvote;\n  var downvote = css.downvote;\n  var style = {\n    cursor: \"pointer\"\n  };\n  useEffect(function () {\n    if (userContext.user) {\n      fetch(\"\".concat(host, \"/posts/\").concat(question.uuid, \"/vote/status\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.status) {\n          if (data.type === \"upvote\") {\n            setUpvoteColor(upvote);\n          } else if (data.type === \"downvote\") {\n            setDownvoteColor(downvote);\n          }\n        }\n      });\n    }\n  }, [userContext]);\n  useEffect(function () {\n    var pres = document.querySelectorAll(\"pre\");\n\n    if (!editMode) {\n      for (var i = 0; i < pres.length; i++) {\n        pres[i].classList.remove(\"plaintext\");\n        hljs.highlightBlock(pres[i]);\n      }\n    } else {\n      for (var _i = 0; _i < pres.length; _i++) {\n        pres[_i].classList.add(\"plaintext\");\n      }\n    }\n  }, [editMode]);\n\n  var vote = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(voteType) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!userContext.user) {\n                _context.next = 10;\n                break;\n              }\n\n              if (!(userContext.user.uuid !== question.user.uuid)) {\n                _context.next = 7;\n                break;\n              }\n\n              fetch(\"\".concat(host, \"/posts/\").concat(question.uuid, \"/vote/status\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  userUuid: userContext.user.uuid\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                return updateVote(data, voteType, setVotes, setUpvoteColor, setDownvoteColor, votes, upvote, downvote);\n              });\n              _context.next = 5;\n              return fetch(\"\".concat(host, \"/posts/\").concat(question.uuid, \"/vote\"), {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Bearer \".concat(getCookie(\"token\"))\n                },\n                body: JSON.stringify({\n                  userUuid: userContext.user.uuid,\n                  voteType: voteType\n                })\n              });\n\n            case 5:\n              _context.next = 8;\n              break;\n\n            case 7:\n              alert(\"You can't vote on your own post!\");\n\n            case 8:\n              _context.next = 12;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return router.push(\"/auth/signup\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function vote(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [userContext.user === undefined ? /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"jsx-268140291\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-268140291\" + \" \" + \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-268140291\" + \" \" + \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-268140291\" + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortUp,\n              color: upvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: function onClick() {\n                return vote(\"upvote\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#c6c6c6\",\n                margin: \"-8px 0\"\n              },\n              className: \"jsx-268140291\" + \" \" + \"vote-count\",\n              children: votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortDown,\n              color: downvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: function onClick() {\n                return vote(\"downvote\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-268140291\" + \" \" + \"main-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsx-268140291\" + \" \" + \"post-body\",\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                className: \"preview post-body-mkd\",\n                source: question.body,\n                plugins: [remarkGfm]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsx-268140291\" + \" \" + \"post-body-btm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"jsx-268140291\" + \" \" + \"communities-container\",\n                children: question === null || question === void 0 ? void 0 : question.communities.slice(0, 4).map(function (community) {\n                  return /*#__PURE__*/_jsxDEV(Tag, {\n                    name: community.name\n                  }, community.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(AskedBy, {\n                type: \"asked\",\n                username: question.user.username,\n                createdAt: question.createdAt,\n                postUuid: question.user.uuid,\n                userUuid: userContext === null || userContext === void 0 ? void 0 : (_userContext$user = userContext.user) === null || _userContext$user === void 0 ? void 0 : _userContext$user.uuid,\n                reputation: question.user.reputation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, _this), question.user.uuid === (userContext === null || userContext === void 0 ? void 0 : (_userContext$user2 = userContext.user) === null || _userContext$user2 === void 0 ? void 0 : _userContext$user2.uuid) || (userContext === null || userContext === void 0 ? void 0 : (_userContext$user3 = userContext.user) === null || _userContext$user3 === void 0 ? void 0 : _userContext$user3.role) === \"god\" ? /*#__PURE__*/_jsxDEV(OPActions, {\n              uuid: question.uuid,\n              type: \"question\",\n              setEditMode: setEditMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsx-268140291\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-268140291\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"268140291\",\n      children: \".question-container.jsx-268140291{width:92%;margin:0 auto;}.main.jsx-268140291{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:20px 0;}.votes.jsx-268140291{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin:14px 20px;}.main-right.jsx-268140291{width:95%;}.post-body-btm.jsx-268140291{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:95%;margin-bottom:20px;}.communities-container.jsx-268140291{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx */\"\n    }, void 0, false, void 0, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Question, \"drH/5d1/8I7O3YYc61Z+eGUFwRY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx"],"names":["React","useContext","useState","useEffect","ReactMarkdown","remarkGfm","FontAwesomeIcon","faSortUp","faSortDown","useRouter","hljs","getCookie","updateVote","host","UserContext","AskedBy","Tag","css","OPActions","Question","question","setEditMode","editMode","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","userContext","router","upvote","downvote","style","cursor","user","fetch","uuid","method","headers","body","JSON","stringify","userUuid","then","res","json","data","status","type","pres","document","querySelectorAll","i","length","classList","remove","highlightBlock","add","vote","voteType","Authorization","alert","push","undefined","color","margin","communities","slice","map","community","name","username","createdAt","reputation","role"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\nimport hljs from \"highlight.js\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport { getCookie, updateVote } from \"../utils/functions\";\nimport { VoteType } from \"../utils/types/voteType\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport AskedBy from \"./AskedBy\";\nimport Tag from \"./Tag\";\nimport * as css from \"../utils/cssVariables\";\nimport OPActions from \"./OPActions\";\n\ninterface Props {\n  question: QuestionType;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  editMode: boolean;\n}\n\nconst Question: React.FC<Props> = ({ question, setEditMode, editMode }) => {\n  const [votes, setVotes] = useState<number>(question.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const upvote = css.upvote;\n  const downvote = css.downvote;\n\n  const style = { cursor: \"pointer\" };\n\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${question.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data: VoteType) => {\n          if (data.status) {\n            if (data.type === \"upvote\") {\n              setUpvoteColor(upvote);\n            } else if (data.type === \"downvote\") {\n              setDownvoteColor(downvote);\n            }\n          }\n        });\n    }\n  }, [userContext]);\n\n  useEffect(() => {\n    const pres = document.querySelectorAll(\"pre\");\n\n    if (!editMode) {\n      for (let i = 0; i < pres.length; i++) {\n        pres[i].classList.remove(\"plaintext\");\n        hljs.highlightBlock(pres[i]);\n      }\n    } else {\n      for (let i = 0; i < pres.length; i++) {\n        pres[i].classList.add(\"plaintext\");\n      }\n    }\n  }, [editMode]);\n\n  const vote = async (voteType: \"upvote\" | \"downvote\") => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== question.user.uuid) {\n        fetch(`${host}/posts/${question.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data: VoteType) =>\n            updateVote(\n              data,\n              voteType,\n              setVotes,\n              setUpvoteColor,\n              setDownvoteColor,\n              votes,\n              upvote,\n              downvote\n            )\n          );\n        await fetch(`${host}/posts/${question.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType,\n          }),\n        });\n      } else {\n        alert(\"You can't vote on your own post!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {userContext.user === undefined ? (\n        <main>\n          <div className=\"question-container\">\n            <div className=\"main\">\n              <div className=\"votes\">\n                <FontAwesomeIcon\n                  icon={faSortUp}\n                  color={upvoteColor}\n                  style={style}\n                  size={\"2x\"}\n                  onClick={() => vote(\"upvote\")}\n                />\n                <p\n                  className=\"vote-count\"\n                  style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n                >\n                  {votes}\n                </p>\n                <FontAwesomeIcon\n                  icon={faSortDown}\n                  color={downvoteColor}\n                  style={style}\n                  size={\"2x\"}\n                  onClick={() => vote(\"downvote\")}\n                />\n              </div>\n              <div className=\"main-right\">\n                <div className=\"post-body\">\n                  <ReactMarkdown\n                    className=\"preview post-body-mkd\"\n                    source={question.body}\n                    plugins={[remarkGfm]}\n                  />\n                </div>\n                <div className=\"post-body-btm\">\n                  <div className=\"communities-container\">\n                    {question?.communities.slice(0, 4).map((community) => (\n                      <Tag name={community.name} key={community.name} />\n                    ))}\n                  </div>\n                  <AskedBy\n                    type={\"asked\"}\n                    username={question.user.username}\n                    createdAt={question.createdAt}\n                    postUuid={question.user.uuid}\n                    userUuid={userContext?.user?.uuid}\n                    reputation={question.user.reputation}\n                  />\n                </div>\n                {question.user.uuid === userContext?.user?.uuid ||\n                userContext?.user?.role === \"god\" ? (\n                  <OPActions\n                    uuid={question.uuid}\n                    type={\"question\"}\n                    setEditMode={setEditMode}\n                  />\n                ) : (\n                  <div />\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      ) : (\n        <div />\n      )}\n\n      <style jsx>{`\n        .question-container {\n          width: 92%;\n          margin: 0 auto;\n        }\n\n        .main {\n          display: flex;\n          margin: 20px 0;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin: 14px 20px;\n        }\n\n        .main-right {\n          width: 95%;\n        }\n\n        .post-body-btm {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 95%;\n          margin-bottom: 20px;\n        }\n\n        .communities-container {\n          display: flex;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}