{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useRouter } from \"next/router\";\nimport { useQueryClient } from \"react-query\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\nvar PostAnswer = function PostAnswer(_ref) {\n  var question = _ref.question;\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var userContext = useContext(UserContext);\n  var router = useRouter();\n  var queryClient = useQueryClient();\n\n  var postAnswer = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var errMsg;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              errMsg = document.getElementById(\"err-msg\");\n\n              if (!userContext.user) {\n                _context2.next = 6;\n                break;\n              }\n\n              if (text.length > 20 && text.length < 19000) {\n                fetch(\"\".concat(host, \"/posts/\").concat(question.uuid, \"/comments\"), {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \".concat(getCookie(\"token\"))\n                  },\n                  body: JSON.stringify({\n                    userUuid: userContext.user.uuid,\n                    body: text\n                  })\n                }).then(function (res) {\n                  return res.json();\n                }).then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!data.msg) {\n                              _context.next = 4;\n                              break;\n                            }\n\n                            errMsg.innerText = data.msg;\n                            _context.next = 8;\n                            break;\n\n                          case 4:\n                            _context.next = 6;\n                            return queryClient.prefetchQuery([\"individual-question\"]);\n\n                          case 6:\n                            errMsg.innerText = \"\";\n                            setText(\"\");\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }())[\"catch\"](function (err) {\n                  return console.log(err);\n                });\n              } else {\n                errMsg.innerText = \"Your reply must be longer than 20 characters\";\n              }\n\n              _context2.next = 8;\n              break;\n\n            case 6:\n              _context2.next = 8;\n              return router.push(\"/auth/signup\");\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function postAnswer(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-container\",\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: postAnswer,\n        className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]),\n        children: [/*#__PURE__*/_jsx(\"textarea\", {\n          id: \"reply\",\n          placeholder: \"Reply to this question\",\n          value: text,\n          onChange: function onChange(e) {\n            setText(e.target.value);\n          },\n          className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-form-textarea\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-btn\",\n          children: \"Post your Answer\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          id: \"err-msg\",\n          className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"err-msg\"\n        }), /*#__PURE__*/_jsx(ReactMarkdown, {\n          className: \"preview reply-preview\",\n          source: text,\n          plugins: [remarkGfm]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"1534518532\",\n      dynamic: [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover],\n      children: [\".reply-container.__jsx-style-dynamic-selector{width:82%;margin:40px auto;}\", \".reply-form-textarea.__jsx-style-dynamic-selector{width:100%;resize:none;display:block;height:\".concat(text.length === 0 ? \"120px\" : \"200px\", \";background:\").concat(css.inputBackground, \";color:#ffffff;border:2px solid \").concat(css.inputBorder, \";padding:15px;line-height:1.4em;}\"), \".reply-form-textarea.__jsx-style-dynamic-selector:focus{height:200px;}\", \".reply-btn.__jsx-style-dynamic-selector{margin:20px 10px;float:right;border:none;color:#fff;background:\".concat(css.mainButton, \";border-radius:3px;padding:7px 10px;cursor:pointer;}\"), \".reply-btn.__jsx-style-dynamic-selector:hover{background:\".concat(css.mainButtonHover, \";}\"), \".err-msg.__jsx-style-dynamic-selector{color:red;margin:20px 0;}\"]\n    })]\n  });\n};\n\nexport default PostAnswer;","map":null,"metadata":{},"sourceType":"module"}