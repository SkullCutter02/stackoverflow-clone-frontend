{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/questions/[uuid]/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../../../utils/host\";\nimport Question from \"../../../components/Question\";\nimport Reply from \"../../../components/Reply\";\nimport Aside from \"../../../components/Aside\";\n\nconst QuestionPage = ({\n  uuid\n}) => {\n  const fetchQuestions = async () => {\n    const res = await fetch(`${host}/posts/${uuid}`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data\n  } = useQuery([\"individual-question\"], () => fetchQuestions(), {\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-2622748850\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2622748850\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2622748850\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"jsx-2622748850\",\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"jsx-2622748850\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-2622748850\" + \" \" + \"left\",\n            children: [/*#__PURE__*/_jsxDEV(Question, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Reply, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Aside, {\n            borderSide: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2622748850\",\n      children: \"h1.jsx-2622748850{font-size:1.3rem;line-height:1.4em;margin:20px auto;width:88%;}main.jsx-2622748850{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.left.jsx-2622748850{border:1px solid red;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvcGFnZXMvcXVlc3Rpb25zL1t1dWlkXS9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0NrQixBQUc0QixBQU9KLEFBS1EsaUJBWEgsSUFZUCxXQUNiLEdBWm1CLGlCQUNQLFVBQ1osWUFJZ0MsbUhBQ2hDIiwiZmlsZSI6Ii9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvcGFnZXMvcXVlc3Rpb25zL1t1dWlkXS9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJyZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSBcIm5leHRcIjtcblxuaW1wb3J0IGhvc3QgZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2hvc3RcIjtcbmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gXCIuLi8uLi8uLi91dGlscy90eXBlcy9pbmRpdmlkdWFsUXVlc3Rpb25UeXBlXCI7XG5pbXBvcnQgUXVlc3Rpb24gZnJvbSBcIi4uLy4uLy4uL2NvbXBvbmVudHMvUXVlc3Rpb25cIjtcbmltcG9ydCBSZXBseSBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50cy9SZXBseVwiO1xuaW1wb3J0IEFzaWRlIGZyb20gXCIuLi8uLi8uLi9jb21wb25lbnRzL0FzaWRlXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHV1aWQ6IHN0cmluZztcbn1cblxuY29uc3QgUXVlc3Rpb25QYWdlOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB1dWlkIH0pID0+IHtcbiAgY29uc3QgZmV0Y2hRdWVzdGlvbnMgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7aG9zdH0vcG9zdHMvJHt1dWlkfWApO1xuICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICB9O1xuXG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0Vycm9yLCBlcnJvciwgZGF0YSB9ID0gdXNlUXVlcnk8UXVlc3Rpb25UeXBlLCBFcnJvcj4oXG4gICAgW1wiaW5kaXZpZHVhbC1xdWVzdGlvblwiXSxcbiAgICAoKSA9PiBmZXRjaFF1ZXN0aW9ucygpLFxuICAgIHsgY2FjaGVUaW1lOiAwIH1cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxkaXY+XG4gICAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgICAgPGRpdj5Mb2FkaW5nLi4uPC9kaXY+XG4gICAgICAgICkgOiBpc0Vycm9yID8gKFxuICAgICAgICAgIDxkaXY+e2Vycm9yLm1lc3NhZ2V9PC9kaXY+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgPGgxPntkYXRhLnRpdGxlfTwvaDE+XG4gICAgICAgICAgICA8bWFpbj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0XCI+XG4gICAgICAgICAgICAgICAgPFF1ZXN0aW9uIGRhdGE9e2RhdGF9IC8+XG4gICAgICAgICAgICAgICAgPFJlcGx5IC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8QXNpZGUgYm9yZGVyU2lkZT17XCJsZWZ0XCJ9IC8+XG4gICAgICAgICAgICA8L21haW4+XG4gICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS40ZW07XG4gICAgICAgICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgICAgICAgd2lkdGg6IDg4JTtcbiAgICAgICAgfVxuXG4gICAgICAgIG1haW4ge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICB9XG5cbiAgICAgICAgLmxlZnQge1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzOiBHZXRTZXJ2ZXJTaWRlUHJvcHMgPSBhc3luYyAoY29udGV4dCkgPT4ge1xuICByZXR1cm4ge1xuICAgIHByb3BzOiB7XG4gICAgICB1dWlkOiBjb250ZXh0LnBhcmFtcy51dWlkLFxuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBRdWVzdGlvblBhZ2U7XG4iXX0= */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/questions/[uuid]/index.tsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = async context => {\n  return {\n    props: {\n      uuid: context.params.uuid\n    }\n  };\n};\nexport default QuestionPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/questions/[uuid]/index.tsx"],"names":["React","useQuery","host","Question","Reply","Aside","QuestionPage","uuid","fetchQuestions","res","fetch","json","isLoading","isError","error","data","cacheTime","message","title","getServerSideProps","context","props","params"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAMA,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClD,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAER,IAAK,UAASK,IAAK,EAAvB,CAAvB;AACA,WAAO,MAAME,GAAG,CAACE,IAAJ,EAAb;AACD,GAHD;;AAKA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAAsCd,QAAQ,CAClD,CAAC,qBAAD,CADkD,EAElD,MAAMO,cAAc,EAF8B,EAGlD;AAAEQ,IAAAA,SAAS,EAAE;AAAb,GAHkD,CAApD;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA,gBACGJ,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENC,OAAO,gBACT;AAAA;AAAA,kBAAMC,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cADS,gBAGT,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAA;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA,kCACE;AAAA,gDAAe,MAAf;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD;AAAO,YAAA,UAAU,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CArDD;;AAuDA,OAAO,MAAMI,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACvE,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLd,MAAAA,IAAI,EAAEa,OAAO,CAACE,MAAR,CAAef;AADhB;AADF,GAAP;AAKD,CANM;AAQP,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { GetServerSideProps } from \"next\";\n\nimport host from \"../../../utils/host\";\nimport { QuestionType } from \"../../../utils/types/individualQuestionType\";\nimport Question from \"../../../components/Question\";\nimport Reply from \"../../../components/Reply\";\nimport Aside from \"../../../components/Aside\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst QuestionPage: React.FC<Props> = ({ uuid }) => {\n  const fetchQuestions = async () => {\n    const res = await fetch(`${host}/posts/${uuid}`);\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data } = useQuery<QuestionType, Error>(\n    [\"individual-question\"],\n    () => fetchQuestions(),\n    { cacheTime: 0 }\n  );\n\n  return (\n    <React.Fragment>\n      <div>\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>{error.message}</div>\n        ) : (\n          <React.Fragment>\n            <h1>{data.title}</h1>\n            <main>\n              <div className=\"left\">\n                <Question data={data} />\n                <Reply />\n              </div>\n              <Aside borderSide={\"left\"} />\n            </main>\n          </React.Fragment>\n        )}\n      </div>\n\n      <style jsx>{`\n        h1 {\n          font-size: 1.3rem;\n          line-height: 1.4em;\n          margin: 20px auto;\n          width: 88%;\n        }\n\n        main {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        .left {\n          border: 1px solid red;\n          width: 100%;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  return {\n    props: {\n      uuid: context.params.uuid,\n    },\n  };\n};\n\nexport default QuestionPage;\n"]},"metadata":{},"sourceType":"module"}