{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/admin.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport PageHandlers from \"../components/PageHandlers\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst AdminPage = () => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const userContext = useContext(UserContext);\n\n  const fetchRequests = async page => {\n    const res = await fetch(`${host}/requests?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"requests\", page], () => fetchRequests(page), {\n    keepPreviousData: true\n  });\n\n  if (userContext.user === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-area-container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requests-container\",\n          children: data.requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: request.uuid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PageHandlers, {\n          page: page,\n          setPage: setPage,\n          isPreviousData: isPreviousData,\n          hasMore: data.hasMore,\n          width: 100,\n          flex: \"flex-start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/admin.tsx"],"names":["React","useState","useContext","useQuery","PageHandlers","host","UserContext","AdminPage","page","setPage","userContext","fetchRequests","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","user","undefined","message","requests","map","request","uuid","hasMore"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAaA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAS,CAAT,CAAhC;AAEA,QAAMS,WAAW,GAAGR,UAAU,CAACI,WAAD,CAA9B;;AAEA,QAAMK,aAAa,GAAG,MAAOH,IAAP,IAAwB;AAC5C,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAER,IAAK,kBAAiBG,IAAK,WAA/B,CAAvB;AACA,WAAO,MAAMI,GAAG,CAACE,IAAJ,EAAb;AACD,GAHD;;AAKA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,MAAsDhB,QAAQ,CAGlE,CAAC,UAAD,EAAaK,IAAb,CAHkE,EAG9C,MAAMG,aAAa,CAACH,IAAD,CAH2B,EAGnB;AAC/CY,IAAAA,gBAAgB,EAAE;AAD6B,GAHmB,CAApE;;AAOA,MAAIV,WAAW,CAACW,IAAZ,KAAqBC,SAAzB,EAAoC;AAClC,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGP,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENC,OAAO,gBACT;AAAA,kBAAMC,KAAK,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cADS,gBAGT,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACGL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAmBC,OAAD,iBACjB;AAAA,sBAAMA,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,YAAD;AACE,UAAA,IAAI,EAAEnB,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,cAAc,EAAEU,cAHlB;AAIE,UAAA,OAAO,EAAED,IAAI,CAACU,OAJhB;AAKE,UAAA,KAAK,EAAE,GALT;AAME,UAAA,IAAI,EAAE;AANR;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAhDD;;AAkDA,eAAerB,SAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport PageHandlers from \"../components/PageHandlers\";\n\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\n\ntype RequestType = {\n  requests: {\n    uuid: string;\n    name: string;\n    link: string;\n    createdAt: string;\n    updatedAt: string;\n  }[];\n  hasMore: boolean;\n};\n\nconst AdminPage = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const userContext = useContext(UserContext);\n\n  const fetchRequests = async (page: number) => {\n    const res = await fetch(`${host}/requests?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    RequestType,\n    Error\n  >([\"requests\", page], () => fetchRequests(page), {\n    keepPreviousData: true,\n  });\n\n  if (userContext.user === undefined) {\n    return <div />;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"admin-area-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>{error.message}</div>\n        ) : (\n          <React.Fragment>\n            <div className=\"requests-container\">\n              {data.requests.map((request) => (\n                <div>{request.uuid}</div>\n              ))}\n            </div>\n            <PageHandlers\n              page={page}\n              setPage={setPage}\n              isPreviousData={isPreviousData}\n              hasMore={data.hasMore}\n              width={100}\n              flex={\"flex-start\"}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AdminPage;\n"]},"metadata":{},"sourceType":"module"}