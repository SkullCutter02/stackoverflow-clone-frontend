{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { useRouter } from \"next/router\";\nimport { useQueryClient } from \"react-query\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PostAnswer = ({\n  question\n}) => {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n  const queryClient = useQueryClient();\n\n  const postAnswer = async e => {\n    e.preventDefault();\n    const errMsg = document.getElementById(\"err-msg\");\n\n    if (userContext.user) {\n      if (text.length > 20 && text.length < 19000) {\n        fetch(`${host}/posts/${question.uuid}/comments`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            body: text\n          })\n        }).then(res => res.json()).then(async data => {\n          if (data.msg) {\n            errMsg.innerText = data.msg;\n          } else {\n            await queryClient.prefetchQuery([\"individual-question\"]);\n            errMsg.innerText = \"\";\n            setText(\"\");\n          }\n        }).catch(err => console.log(err));\n      } else {\n        errMsg.innerText = \"Your reply must be longer than 20 characters\";\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-container\",\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: postAnswer,\n        className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]),\n        children: [/*#__PURE__*/_jsx(\"textarea\", {\n          id: \"reply\",\n          placeholder: \"Reply to this question\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          },\n          className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-form-textarea\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"reply-btn\",\n          children: \"Post your Answer\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          id: \"err-msg\",\n          className: _JSXStyle.dynamic([[\"1534518532\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover]]]) + \" \" + \"err-msg\"\n        }), /*#__PURE__*/_jsx(ReactMarkdown, {\n          className: \"preview reply-preview\",\n          source: text,\n          plugins: [remarkGfm]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"1534518532\",\n      dynamic: [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover],\n      children: [\".reply-container.__jsx-style-dynamic-selector{width:82%;margin:40px auto;}\", `.reply-form-textarea.__jsx-style-dynamic-selector{width:100%;resize:none;display:block;height:${text.length === 0 ? \"120px\" : \"200px\"};background:${css.inputBackground};color:#ffffff;border:2px solid ${css.inputBorder};padding:15px;line-height:1.4em;}`, \".reply-form-textarea.__jsx-style-dynamic-selector:focus{height:200px;}\", `.reply-btn.__jsx-style-dynamic-selector{margin:20px 10px;float:right;border:none;color:#fff;background:${css.mainButton};border-radius:3px;padding:7px 10px;cursor:pointer;}`, `.reply-btn.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}`, \".err-msg.__jsx-style-dynamic-selector{color:red;margin:20px 0;}\"]\n    })]\n  });\n};\n\nexport default PostAnswer;","map":null,"metadata":{},"sourceType":"module"}