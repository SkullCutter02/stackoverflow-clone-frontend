{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport PageHandlers from \"./PageHandlers\";\n\nvar UserAnswers = function UserAnswers(_ref) {\n  _s();\n\n  var uuid = _ref.uuid;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchUserAnswers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/users/\").concat(uuid, \"/comments?page=\").concat(page, \"&limit=20\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchUserAnswers(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"user-answers\", page], function () {\n    return fetchUserAnswers(page);\n  }, {\n    keepPreviousData: true,\n    cacheTime: 0\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isPreviousData = _useQuery.isPreviousData;\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: uuid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(PageHandlers, {\n        page: page,\n        setPage: setPage,\n        isPreviousData: isPreviousData,\n        hasMore: data.hasMore,\n        width: 97\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UserAnswers, \"B8AHcuIhDtcfT64L9EclU84Jm5E=\", false, function () {\n  return [useQuery];\n});\n\n_c = UserAnswers;\nexport default UserAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAnswers\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/UserAnswers.tsx"],"names":["React","useState","useQuery","host","PageHandlers","UserAnswers","uuid","page","setPage","fetchUserAnswers","fetch","res","json","keepPreviousData","cacheTime","isLoading","isError","error","data","isPreviousData","message","hasMore"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AAGA,OAAOC,YAAP,MAAyB,gBAAzB;;AAMA,IAAMC,WAA4B,GAAG,SAA/BA,WAA+B,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACzBL,QAAQ,CAAS,CAAT,CADiB;AAAA,MAC1CM,IAD0C;AAAA,MACpCC,OADoC;;AAGjD,MAAMC,gBAAgB;AAAA,yEAAG,iBAAOF,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACLG,KAAK,WAClBP,IADkB,oBACJG,IADI,4BACkBC,IADlB,eADA;;AAAA;AACjBI,cAAAA,GADiB;AAAA;AAAA,qBAIVA,GAAG,CAACC,IAAJ,EAJU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBH,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAHiD,kBAUWP,QAAQ,CAGlE,CAAC,cAAD,EAAiBK,IAAjB,CAHkE,EAG1C;AAAA,WAAME,gBAAgB,CAACF,IAAD,CAAtB;AAAA,GAH0C,EAGZ;AACtDM,IAAAA,gBAAgB,EAAE,IADoC;AAEtDC,IAAAA,SAAS,EAAE;AAF2C,GAHY,CAVnB;AAAA,MAUzCC,SAVyC,aAUzCA,SAVyC;AAAA,MAU9BC,OAV8B,aAU9BA,OAV8B;AAAA,MAUrBC,KAVqB,aAUrBA,KAVqB;AAAA,MAUdC,IAVc,aAUdA,IAVc;AAAA,MAURC,cAVQ,aAURA,cAVQ;;AAkBjD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGJ,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADQ,GAENC,OAAO,gBACT;AAAA,gBAAMC,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,aADS,gBAGT,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA,kBAAMd;AAAN;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,YAAD;AACE,QAAA,IAAI,EAAEC,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,cAAc,EAAEW,cAHlB;AAIE,QAAA,OAAO,EAAED,IAAI,CAACG,OAJhB;AAKE,QAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CAtCD;;GAAMhB,W;UAUwDH,Q;;;KAVxDG,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport { UserAnswersType } from \"../utils/types/userAnswersType\";\nimport PageHandlers from \"./PageHandlers\";\n\ninterface Props {\n  uuid: string;\n}\n\nconst UserAnswers: React.FC<Props> = ({ uuid }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchUserAnswers = async (page: number) => {\n    const res = await fetch(\n      `${host}/users/${uuid}/comments?page=${page}&limit=20`\n    );\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    UserAnswersType,\n    Error\n  >([\"user-answers\", page], () => fetchUserAnswers(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : isError ? (\n        <div>{error.message}</div>\n      ) : (\n        <React.Fragment>\n          <div>{uuid}</div>\n          <PageHandlers\n            page={page}\n            setPage={setPage}\n            isPreviousData={isPreviousData}\n            hasMore={data.hasMore}\n            width={97}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserAnswers;\n"]},"metadata":{},"sourceType":"module"}