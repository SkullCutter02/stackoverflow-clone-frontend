{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/admin.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\n\nvar AdminPage = function AdminPage() {\n  _s();\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchRequests = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/requests?page=\").concat(page, \"&limit=20\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchRequests(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"requests\", page], function () {\n    return fetchRequests(page);\n  }, {\n    keepPreviousData: true\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isPreviousData = _useQuery.isPreviousData;\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-area-container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requests-container\",\n          children: data.map(function (request) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: request.uuid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AdminPage, \"B8AHcuIhDtcfT64L9EclU84Jm5E=\", false, function () {\n  return [useQuery];\n});\n\n_c = AdminPage;\nexport default AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/admin.tsx"],"names":["React","useState","useQuery","host","AdminPage","page","setPage","fetchRequests","fetch","res","json","keepPreviousData","isLoading","isError","error","data","isPreviousData","message","map","request","uuid"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAOC,IAAP,MAAiB,eAAjB;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACEH,QAAQ,CAAS,CAAT,CADV;AAAA,MACfI,IADe;AAAA,MACTC,OADS;;AAGtB,MAAMC,aAAa;AAAA,wEAAG,iBAAOF,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFG,KAAK,WAAIL,IAAJ,4BAA0BE,IAA1B,eADH;;AAAA;AACdI,cAAAA,GADc;AAAA;AAAA,qBAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbH,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAHsB,kBAQsCL,QAAQ,CAGlE,CAAC,UAAD,EAAaG,IAAb,CAHkE,EAG9C;AAAA,WAAME,aAAa,CAACF,IAAD,CAAnB;AAAA,GAH8C,EAGnB;AAC/CM,IAAAA,gBAAgB,EAAE;AAD6B,GAHmB,CAR9C;AAAA,MAQdC,SARc,aAQdA,SARc;AAAA,MAQHC,OARG,aAQHA,OARG;AAAA,MAQMC,KARN,aAQMA,KARN;AAAA,MAQaC,IARb,aAQaA,IARb;AAAA,MAQmBC,cARnB,aAQmBA,cARnB;;AAetB,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGJ,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADQ,GAENC,OAAO,gBACT;AAAA,kBAAMC,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,eADS,gBAGT,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACGF,IAAI,CAACG,GAAL,CAAS,UAACC,OAAD;AAAA,gCACR;AAAA,wBAAMA,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,qBADQ;AAAA,WAAT;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CAnCD;;GAAMhB,S;UAQwDF,Q;;;KARxDE,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport PageHandlers from \"../components/PageHandlers\";\n\nimport host from \"../utils/host\";\n\ntype RequestType = {\n  requests: {\n    uuid: string;\n    name: string;\n    link: string;\n    createdAt: string;\n    updatedAt: string;\n  };\n};\n\nconst AdminPage = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchRequests = async (page: number) => {\n    const res = await fetch(`${host}/requests?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    RequestType[],\n    Error\n  >([\"requests\", page], () => fetchRequests(page), {\n    keepPreviousData: true,\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"admin-area-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>{error.message}</div>\n        ) : (\n          <React.Fragment>\n            <div className=\"requests-container\">\n              {data.map((request) => (\n                <div>{request.uuid}</div>\n              ))}\n            </div>\n            {/*<PageHandlers page={} setPage={} isPreviousData={} hasMore={} width={}/>*/}\n          </React.Fragment>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AdminPage;\n"]},"metadata":{},"sourceType":"module"}