{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\n\nvar EditAnswer = function EditAnswer(_ref) {\n  _s();\n\n  var setEditMode = _ref.setEditMode,\n      comment = _ref.comment;\n\n  var _useState = useState(comment.body),\n      body = _useState[0],\n      setBody = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: _JSXStyle.dynamic([[\"2477029013\", [css.inputBackground, css.inputBorder]]]) + \" \" + \"edit-answer-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: function onChange(e) {\n          return setBody(e.target.value);\n        },\n        className: _JSXStyle.dynamic([[\"2477029013\", [css.inputBackground, css.inputBorder]]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-post-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2477029013\",\n      dynamic: [css.inputBackground, css.inputBorder],\n      children: \"#edit-form-body.__jsx-style-dynamic-selector{width:90%;resize:none;height:400px;margin-bottom:20px;background:\".concat(css.inputBackground, \";border:2px solid \").concat(css.inputBorder, \";color:#fff;padding:15px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0QW5zd2VyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQ2tCLEFBR3FCLFVBQ0UsWUFDQyxhQUNNLG1CQUNxQix3Q0FDTSw4Q0FDbkMsV0FDRSxhQUNmIiwiZmlsZSI6Ii9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0QW5zd2VyLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5cbmltcG9ydCAqIGFzIGNzcyBmcm9tIFwiLi4vdXRpbHMvY3NzVmFyaWFibGVzXCI7XG5pbXBvcnQgeyBDb21tZW50VHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy9pbmRpdmlkdWFsUXVlc3Rpb25UeXBlXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHNldEVkaXRNb2RlOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxib29sZWFuPj47XG4gIGNvbW1lbnQ6IENvbW1lbnRUeXBlO1xufVxuXG5jb25zdCBFZGl0QW5zd2VyOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBzZXRFZGl0TW9kZSwgY29tbWVudCB9KSA9PiB7XG4gIGNvbnN0IFtib2R5LCBzZXRCb2R5XSA9IHVzZVN0YXRlPHN0cmluZz4oY29tbWVudC5ib2R5KTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxmb3JtIGNsYXNzTmFtZT1cImVkaXQtYW5zd2VyLWJvZHlcIj5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgaWQ9XCJlZGl0LWZvcm0tYm9keVwiXG4gICAgICAgICAgY29scz17MzB9XG4gICAgICAgICAgcm93cz17MTB9XG4gICAgICAgICAgdmFsdWU9e2JvZHl9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRCb2R5KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgLz5cbiAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICBjbGFzc05hbWU9XCJwcmV2aWV3IGVkaXQtcG9zdC1wcmV2aWV3XCJcbiAgICAgICAgICBzb3VyY2U9e2JvZHl9XG4gICAgICAgICAgcGx1Z2lucz17W3JlbWFya0dmbV19XG4gICAgICAgIC8+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgI2VkaXQtZm9ybS1ib2R5IHtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgIHJlc2l6ZTogbm9uZTtcbiAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaW5wdXRCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke2Nzcy5pbnB1dEJvcmRlcn07XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFZGl0QW5zd2VyO1xuIl19 */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx */\")\n    }, void 0, false, void 0, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EditAnswer, \"mA0RpvX6/2SjxkjT6785gSTyujk=\");\n\n_c = EditAnswer;\nexport default EditAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAnswer\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditAnswer.tsx"],"names":["React","useState","ReactMarkdown","remarkGfm","css","EditAnswer","setEditMode","comment","body","setBody","inputBackground","inputBorder","e","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;;AAQA,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAA8B;AAAA;;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACxCN,QAAQ,CAASM,OAAO,CAACC,IAAjB,CADgC;AAAA,MACzDA,IADyD;AAAA,MACnDC,OADmD;;AAGhE,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,oDAqBkBL,GAAG,CAACM,eArBtB,EAsBwBN,GAAG,CAACO,WAtB5B,aAAgB,kBAAhB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAEH,IAJT;AAKE,QAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,iBAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,SALZ;AAAA,sDAoBgBV,GAAG,CAACM,eApBpB,EAqBsBN,GAAG,CAACO,WArB1B;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAQE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,MAAM,EAAEH,IAFV;AAGE,QAAA,OAAO,EAAE,CAACL,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAAA;AAAA,gBAsBoBC,GAAG,CAACM,eAtBxB,EAuB0BN,GAAG,CAACO,WAvB9B;AAAA,wIAsBoBP,GAAG,CAACM,eAtBxB,+BAuB0BN,GAAG,CAACO,WAvB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA+BD,CAlCD;;GAAMN,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport * as css from \"../utils/cssVariables\";\nimport { CommentType } from \"../utils/types/individualQuestionType\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  comment: CommentType;\n}\n\nconst EditAnswer: React.FC<Props> = ({ setEditMode, comment }) => {\n  const [body, setBody] = useState<string>(comment.body);\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-answer-body\">\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-post-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n      </form>\n\n      <style jsx>{`\n        #edit-form-body {\n          width: 90%;\n          resize: none;\n          height: 400px;\n          margin-bottom: 20px;\n          background: ${css.inputBackground};\n          border: 2px solid ${css.inputBorder};\n          color: #fff;\n          padding: 15px;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default EditAnswer;\n"]},"metadata":{},"sourceType":"module"}