{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx\",\n    _this = this;\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { getTime } from \"../utils/functions\";\n\nvar AskedBy = function AskedBy(_ref) {\n  var username = _ref.username,\n      createdAt = _ref.createdAt,\n      postUuid = _ref.postUuid,\n      userUuid = _ref.userUuid;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: _JSXStyle.dynamic([[\"1842940873\", [postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\"]]]),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: _JSXStyle.dynamic([[\"1842940873\", [postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\"]]]) + \" \" + \"asked-by\",\n        children: [\"asked by: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: _JSXStyle.dynamic([[\"1842940873\", [postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\"]]]) + \" \" + \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: _JSXStyle.dynamic([[\"1842940873\", [postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\"]]]) + \" \" + \"time\",\n          children: [\" \", getTime(createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1842940873\",\n      dynamic: [postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\"],\n      children: \".asked-by.__jsx-style-dynamic-selector{font-size:0.9rem;color:#fff;margin-right:15px;}.asked-by.__jsx-style-dynamic-selector .username.__jsx-style-dynamic-selector{color:\".concat(postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\", \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Bc2tlZEJ5LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQmtCLEFBRzRCLEFBTWtCLGlCQUx4QixXQUNPLE9BS3BCLFdBSkEiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9jb21wb25lbnRzL0Fza2VkQnkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBnZXRUaW1lIH0gZnJvbSBcIi4uL3V0aWxzL2Z1bmN0aW9uc1wiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICB1c2VybmFtZTogc3RyaW5nO1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbiAgcG9zdFV1aWQ6IHN0cmluZztcbiAgdXNlclV1aWQ6IHN0cmluZztcbn1cblxuY29uc3QgQXNrZWRCeTogUmVhY3QuRkM8UHJvcHM+ID0gKHtcbiAgdXNlcm5hbWUsXG4gIGNyZWF0ZWRBdCxcbiAgcG9zdFV1aWQsXG4gIHVzZXJVdWlkLFxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxzcGFuPlxuICAgICAgICA8aSBjbGFzc05hbWU9XCJhc2tlZC1ieVwiPlxuICAgICAgICAgIGFza2VkIGJ5OiA8c3BhbiBjbGFzc05hbWU9XCJ1c2VybmFtZVwiPnt1c2VybmFtZX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGltZVwiPiB7Z2V0VGltZShjcmVhdGVkQXQpfTwvc3Bhbj5cbiAgICAgICAgPC9pPlxuICAgICAgPC9zcGFuPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5hc2tlZC1ieSB7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjlyZW07XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmFza2VkLWJ5IC51c2VybmFtZSB7XG4gICAgICAgICAgY29sb3I6ICR7cG9zdFV1aWQgIT09IHVzZXJVdWlkID8gXCIjM2NhNGZmXCIgOiBcIiNmZmZcIn07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXNrZWRCeTtcbiJdfQ== */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx */\")\n    }, void 0, false, void 0, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = AskedBy;\nexport default AskedBy;\n\nvar _c;\n\n$RefreshReg$(_c, \"AskedBy\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/AskedBy.tsx"],"names":["React","getTime","AskedBy","username","createdAt","postUuid","userUuid"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;;AASA,IAAMC,OAAwB,GAAG,SAA3BA,OAA2B,OAK3B;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,oDAeaD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAfjD;AAAA,6BACE;AAAA,sDAcWD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAd/C,aAAa,UAAb;AAAA,8CACY;AAAA,wDAaDD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAbnC,aAAgB,UAAhB;AAAA,oBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,iBADZ,eAEE;AAAA,wDAYSE,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAZ7C,aAAgB,MAAhB;AAAA,0BAAyBL,OAAO,CAACG,SAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF;AAAA;AAAA,gBAgBeC,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAhBnD;AAAA,oMAgBeD,QAAQ,KAAKC,QAAb,GAAwB,SAAxB,GAAoC,MAhBnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsBD,CA5BD;;KAAMJ,O;AA8BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nimport { getTime } from \"../utils/functions\";\n\ninterface Props {\n  username: string;\n  createdAt: string;\n  postUuid: string;\n  userUuid: string;\n}\n\nconst AskedBy: React.FC<Props> = ({\n  username,\n  createdAt,\n  postUuid,\n  userUuid,\n}) => {\n  return (\n    <React.Fragment>\n      <span>\n        <i className=\"asked-by\">\n          asked by: <span className=\"username\">{username}</span>\n          <span className=\"time\"> {getTime(createdAt)}</span>\n        </i>\n      </span>\n\n      <style jsx>{`\n        .asked-by {\n          font-size: 0.9rem;\n          color: #fff;\n          margin-right: 15px;\n        }\n\n        .asked-by .username {\n          color: ${postUuid !== userUuid ? \"#3ca4ff\" : \"#fff\"};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default AskedBy;\n"]},"metadata":{},"sourceType":"module"}