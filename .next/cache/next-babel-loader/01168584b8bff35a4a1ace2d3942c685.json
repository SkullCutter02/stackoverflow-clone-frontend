{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/user/[username]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserInfo from \"../../../components/UserInfo\";\n\nvar UserProfilePage = function UserProfilePage(_ref) {\n  _s();\n\n  var username = _ref.username;\n\n  var _useState = useState(0),\n      key = _useState[0],\n      setKey = _useState[1];\n\n  useEffect(function () {\n    setKey(function (old) {\n      return old + 1;\n    });\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(UserInfo, {\n    username: username\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(UserProfilePage, \"IYPkcXl41O+JlGV1m7sUxVH9Exo=\");\n\n_c = UserProfilePage;\nexport var __N_SSP = true;\nexport default UserProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfilePage\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/user/[username]/index.tsx"],"names":["React","useEffect","useState","UserInfo","UserProfilePage","username","key","setKey","old"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,QAAP,MAAqB,8BAArB;;AAMA,IAAMC,eAAgC,GAAG,SAAnCA,eAAmC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACnCH,QAAQ,CAAS,CAAT,CAD2B;AAAA,MAClDI,GADkD;AAAA,MAC7CC,MAD6C;;AAGzDN,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,MAAM,CAAC,UAACC,GAAD;AAAA,aAASA,GAAG,GAAG,CAAf;AAAA,KAAD,CAAN;AACD,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;AAIA,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA;AAApB,KAAmCC,GAAnC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CARD;;GAAMF,e;;KAAAA,e;;AAmBN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GetServerSideProps } from \"next\";\n\nimport UserInfo from \"../../../components/UserInfo\";\n\ninterface Props {\n  username: string;\n}\n\nconst UserProfilePage: React.FC<Props> = ({ username }) => {\n  const [key, setKey] = useState<number>(0);\n\n  useEffect(() => {\n    setKey((old) => old + 1);\n  }, [username]);\n\n  return <UserInfo username={username} key={key} />;\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  return {\n    props: {\n      username: context.query.username,\n      type: context.params.type,\n    },\n  };\n};\n\nexport default UserProfilePage;\n"]},"metadata":{},"sourceType":"module"}