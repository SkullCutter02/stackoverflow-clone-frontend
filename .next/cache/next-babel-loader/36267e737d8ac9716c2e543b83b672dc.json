{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/context/UserContext.tsx\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport host from \"../host\";\nimport { getCookie } from \"../utils\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const UserContextProvider = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState();\n  useEffect(() => {\n    // document.cookie = \"token=df215923-8a3c-44f0-80c2-9c331e1a58df\"; // testing\n    const token = getCookie(\"token\");\n\n    if (token !== \"\") {\n      fetch(`${host}/users/${JSON.parse(atob(token.split(\".\")[1])).uuid}`).then(res => res.json()).then(data => setState(data)).catch(err => console.log(err));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user: state,\n      setState\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/context/UserContext.tsx"],"names":["React","createContext","useState","useEffect","host","getCookie","UserContext","UserContextProvider","props","state","setState","token","fetch","JSON","parse","atob","split","uuid","then","res","json","data","catch","err","console","log","user","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAkBA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAyB,IAAzB,CAAjC;AAEP,OAAO,MAAMM,mBAAmB,GAAIC,KAAD,IAAW;AAC5C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,KAAK,GAAGN,SAAS,CAAC,OAAD,CAAvB;;AACA,QAAIM,KAAK,KAAK,EAAd,EAAkB;AAChBC,MAAAA,KAAK,CAAE,GAAER,IAAK,UAASS,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,EAAsCC,IAAK,EAA7D,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUX,QAAQ,CAACW,IAAD,CAF1B,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID;AACF,GATQ,EASN,EATM,CAAT;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAEjB,KAAR;AAAeC,MAAAA;AAAf,KAA7B;AAAA,cACGF,KAAK,CAACmB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnBM","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nimport host from \"../host\";\nimport { getCookie } from \"../utils\";\n\ntype UserContextType = {\n  user: UserType;\n  setState: (user: UserType) => void;\n};\n\ntype UserType = {\n  uuid: string;\n  username: string;\n  email: string;\n  verified: boolean;\n  reputation: number;\n  // role: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport const UserContext = createContext<UserContextType | null>(null);\n\nexport const UserContextProvider = (props) => {\n  const [state, setState] = useState<UserType | null>();\n\n  useEffect(() => {\n    // document.cookie = \"token=df215923-8a3c-44f0-80c2-9c331e1a58df\"; // testing\n    const token = getCookie(\"token\");\n    if (token !== \"\") {\n      fetch(`${host}/users/${JSON.parse(atob(token.split(\".\")[1])).uuid}`)\n        .then((res) => res.json())\n        .then((data) => setState(data))\n        .catch((err) => console.log(err));\n    }\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ user: state, setState }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}