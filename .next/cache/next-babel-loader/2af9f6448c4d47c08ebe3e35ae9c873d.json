{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\nvar Communities = function Communities() {\n  _s();\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchCommunities = function fetchCommunities() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    fetch(\"\".concat(host, \"/communities?page=\").concat(page, \"&limit=5\")).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      for (var community in data) {\n        fetch(\"\".concat(host, \"/communities/\").concat(community.uuid, \"/posts/count\")).then(function (res) {\n          return res.json();\n        });\n      }\n    });\n  };\n\n  var _useQuery = useQuery([\"communities\", page], function () {\n    return fetchCommunities(page);\n  }, {\n    keepPreviousData: true\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isFetching = _useQuery.isFetching,\n      isPreviousData = _useQuery.isPreviousData;\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communities-container\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [data.communities.map(function (community) {\n          return /*#__PURE__*/_jsxDEV(Community, {\n            uuid: community.uuid,\n            name: community.name,\n            description: community.description\n          }, community.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return setPage(function (old) {\n              return Math.max(old - 1, 0);\n            });\n          },\n          disabled: page === 1,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            if (!isPreviousData && data.hasMore) {\n              setPage(function (old) {\n                return old + 1;\n              });\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, _this), isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Communities, \"ROZZXDCpSyTccMsQYEDldIx7+gA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Communities;\nexport default Communities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Communities\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx"],"names":["React","useState","useQuery","host","Community","Communities","page","setPage","fetchCommunities","fetch","then","res","json","data","community","uuid","keepPreviousData","isLoading","isError","error","isFetching","isPreviousData","message","communities","map","name","description","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\ntype DataType = {\n  communities: CommunityType[];\n  hasMore: boolean;\n};\n\nconst Communities: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchCommunities = (page: number = 1) => {\n    fetch(`${host}/communities?page=${page}&limit=5`)\n      .then((res) => res.json())\n      .then((data) => {\n        for (const community in data) {\n          fetch(\n            `${host}/communities/${community.uuid}/posts/count`\n          ).then((res) => res.json());\n        }\n      });\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<DataType, Error>(\n    [\"communities\", page],\n    () => fetchCommunities(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"communities-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <React.Fragment>\n            {data.communities.map((community) => (\n              <Community\n                uuid={community.uuid}\n                name={community.name}\n                description={community.description}\n                key={community.uuid}\n              />\n            ))}\n            <span>Current Page: {page}</span>\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </React.Fragment>\n        )}\n        {isFetching ? <span>Loading...</span> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n"]},"metadata":{},"sourceType":"module"}