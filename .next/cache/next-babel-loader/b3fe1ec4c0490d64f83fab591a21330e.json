{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/CommunityQuestions.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport CommunityQuestion from \"./CommunityQuestion\";\nimport Aside from \"./Aside\";\nimport * as css from \"../utils/cssVariables\";\n\nconst CommunityQuestions = ({\n  community\n}) => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchPosts = async page => {\n    const res = await fetch(`${host}/communities/${community}/posts?page=${page}&limit=20`);\n    const data = await res.json();\n    return data;\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"community-posts\", page], () => fetchPosts(page), {\n    keepPreviousData: true,\n    cacheTime: 0\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"community-post-header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"header-title\",\n        children: data === null || data === void 0 ? void 0 : data.community.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"header-description\",\n        children: data === null || data === void 0 ? void 0 : data.community.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"community-post-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"posts-container\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]),\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]),\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"community-posts-container\",\n            children: data.posts.map(post => /*#__PURE__*/_jsxDEV(CommunityQuestion, {\n              post: post\n            }, post.uuid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"page-handlers\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]) + \" \" + \"current-page\",\n              children: [\"Current Page: \", page]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setPage(old => Math.max(old - 1, 0));\n                window.scrollTo(0, -500);\n              },\n              disabled: page === 1,\n              className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]),\n              children: \"Previous Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage(old => old + 1);\n                  window.scrollTo(0, -500);\n                }\n              },\n              disabled: isPreviousData || !data.hasMore,\n              className: _JSXStyle.dynamic([[\"1650154702\", [css.headerBackground]]]),\n              children: \"Next Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Aside, {\n        borderSide: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1650154702\",\n      dynamic: [css.headerBackground],\n      children: `.community-post-header-container.__jsx-style-dynamic-selector{width:100%;background:${css.headerBackground};display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.header-title.__jsx-style-dynamic-selector,.header-description.__jsx-style-dynamic-selector{width:90%;}.header-title.__jsx-style-dynamic-selector{margin:20px 0;}.header-description.__jsx-style-dynamic-selector{margin-bottom:20px;}.community-post-page-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}.posts-container.__jsx-style-dynamic-selector{width:80%;}.community-posts-container.__jsx-style-dynamic-selector{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.page-handlers.__jsx-style-dynamic-selector{width:90%;margin:30px auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:30px;}button.__jsx-style-dynamic-selector{height:70%;width:90px;margin:0 5px;font-size:0.6rem;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Db21tdW5pdHlRdWVzdGlvbnMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlGa0IsQUFJc0IsQUFVRCxBQUlJLEFBSUssQUFJTixBQUtILEFBSUMsQUFPRCxBQVNDLFVBcENiLEFBaUJBLEFBV21CLENBdEN1QixBQStCM0IsQUFnQkYsR0FqQ2IsS0FJQSxHQThCZSxLQVRBLFFBVUksZ0JBaERKLENBaURmLHNCQTVCYSxXQUNiLEFBU3dCLGdCQVFHLHdCQXRDSCxzQ0ErQkgsbUNBUUEsS0F0Q0kscURBK0J6QixtQ0FRYyxXQXRDTyxDQXVDckIsNEZBdENBIiwiZmlsZSI6Ii9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9Db21tdW5pdHlRdWVzdGlvbnMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gXCJyZWFjdC1xdWVyeVwiO1xuXG5pbXBvcnQgaG9zdCBmcm9tIFwiLi4vdXRpbHMvaG9zdFwiO1xuaW1wb3J0IHsgQ29tbXVuaXR5UG9zdHNUeXBlIH0gZnJvbSBcIi4uL3V0aWxzL3R5cGVzL3F1ZXN0aW9uVHlwZVwiO1xuaW1wb3J0IENvbW11bml0eVF1ZXN0aW9uIGZyb20gXCIuL0NvbW11bml0eVF1ZXN0aW9uXCI7XG5pbXBvcnQgQXNpZGUgZnJvbSBcIi4vQXNpZGVcIjtcbmltcG9ydCAqIGFzIGNzcyBmcm9tIFwiLi4vdXRpbHMvY3NzVmFyaWFibGVzXCI7XG5pbXBvcnQgUGFnZUhhbmRsZXJzIGZyb20gXCIuL1BhZ2VIYW5kbGVyc1wiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBjb21tdW5pdHk6IHN0cmluZztcbn1cblxuY29uc3QgQ29tbXVuaXR5UXVlc3Rpb25zOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBjb21tdW5pdHkgfSkgPT4ge1xuICBjb25zdCBbcGFnZSwgc2V0UGFnZV0gPSB1c2VTdGF0ZTxudW1iZXI+KDEpO1xuXG4gIGNvbnN0IGZldGNoUG9zdHMgPSBhc3luYyAocGFnZTogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICBgJHtob3N0fS9jb21tdW5pdGllcy8ke2NvbW11bml0eX0vcG9zdHM/cGFnZT0ke3BhZ2V9JmxpbWl0PTIwYFxuICAgICk7XG4gICAgY29uc3QgZGF0YTogQ29tbXVuaXR5UG9zdHNUeXBlID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICBjb25zdCB7IGlzTG9hZGluZywgaXNFcnJvciwgZXJyb3IsIGRhdGEsIGlzUHJldmlvdXNEYXRhIH0gPSB1c2VRdWVyeTxcbiAgICBDb21tdW5pdHlQb3N0c1R5cGUsXG4gICAgRXJyb3JcbiAgPihbXCJjb21tdW5pdHktcG9zdHNcIiwgcGFnZV0sICgpID0+IGZldGNoUG9zdHMocGFnZSksIHtcbiAgICBrZWVwUHJldmlvdXNEYXRhOiB0cnVlLFxuICAgIGNhY2hlVGltZTogMCxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbW11bml0eS1wb3N0LWhlYWRlci1jb250YWluZXJcIj5cbiAgICAgICAgPGgxIGNsYXNzTmFtZT1cImhlYWRlci10aXRsZVwiPntkYXRhPy5jb21tdW5pdHkubmFtZX08L2gxPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJoZWFkZXItZGVzY3JpcHRpb25cIj57ZGF0YT8uY29tbXVuaXR5LmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tdW5pdHktcG9zdC1wYWdlLWNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3RzLWNvbnRhaW5lclwiPlxuICAgICAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgICAgICA8ZGl2PkxvYWRpbmcuLi48L2Rpdj5cbiAgICAgICAgICApIDogaXNFcnJvciA/IChcbiAgICAgICAgICAgIDxkaXY+e2Vycm9yLm1lc3NhZ2V9PC9kaXY+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21tdW5pdHktcG9zdHMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAge2RhdGEucG9zdHMubWFwKChwb3N0KSA9PiAoXG4gICAgICAgICAgICAgICAgICA8Q29tbXVuaXR5UXVlc3Rpb24gcG9zdD17cG9zdH0ga2V5PXtwb3N0LnV1aWR9IC8+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2UtaGFuZGxlcnNcIj5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjdXJyZW50LXBhZ2VcIj5DdXJyZW50IFBhZ2U6IHtwYWdlfTwvcD5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldFBhZ2UoKG9sZCkgPT4gTWF0aC5tYXgob2xkIC0gMSwgMCkpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgLTUwMCk7XG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3BhZ2UgPT09IDF9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgUHJldmlvdXMgUGFnZVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1ByZXZpb3VzRGF0YSAmJiBkYXRhLmhhc01vcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBzZXRQYWdlKChvbGQpID0+IG9sZCArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAtNTAwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc1ByZXZpb3VzRGF0YSB8fCAhZGF0YS5oYXNNb3JlfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIE5leHQgUGFnZVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxBc2lkZSBib3JkZXJTaWRlPXtcImxlZnRcIn0gLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5jb21tdW5pdHktcG9zdC1oZWFkZXItY29udGFpbmVyIHtcbiAgICAgICAgICAvL2hlaWdodDogMTQwcHg7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaGVhZGVyQmFja2dyb3VuZH07XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVhZGVyLXRpdGxlLFxuICAgICAgICAuaGVhZGVyLWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlYWRlci10aXRsZSB7XG4gICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVhZGVyLWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNvbW11bml0eS1wb3N0LXBhZ2UtY29udGFpbmVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBvc3RzLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDgwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb21tdW5pdHktcG9zdHMtY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wYWdlLWhhbmRsZXJzIHtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgIG1hcmdpbjogMzBweCBhdXRvO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgaGVpZ2h0OiA3MCU7XG4gICAgICAgICAgd2lkdGg6IDkwcHg7XG4gICAgICAgICAgbWFyZ2luOiAwIDVweDtcbiAgICAgICAgICBmb250LXNpemU6IDAuNnJlbTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21tdW5pdHlRdWVzdGlvbnM7XG4iXX0= */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/CommunityQuestions.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CommunityQuestions;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/CommunityQuestions.tsx"],"names":["React","useState","useQuery","host","CommunityQuestion","Aside","css","CommunityQuestions","community","page","setPage","fetchPosts","res","fetch","data","json","isLoading","isError","error","isPreviousData","keepPreviousData","cacheTime","headerBackground","name","description","message","posts","map","post","uuid","old","Math","max","window","scrollTo","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport { CommunityPostsType } from \"../utils/types/questionType\";\nimport CommunityQuestion from \"./CommunityQuestion\";\nimport Aside from \"./Aside\";\nimport * as css from \"../utils/cssVariables\";\nimport PageHandlers from \"./PageHandlers\";\n\ninterface Props {\n  community: string;\n}\n\nconst CommunityQuestions: React.FC<Props> = ({ community }) => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchPosts = async (page: number) => {\n    const res = await fetch(\n      `${host}/communities/${community}/posts?page=${page}&limit=20`\n    );\n    const data: CommunityPostsType = await res.json();\n    return data;\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    CommunityPostsType,\n    Error\n  >([\"community-posts\", page], () => fetchPosts(page), {\n    keepPreviousData: true,\n    cacheTime: 0,\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"community-post-header-container\">\n        <h1 className=\"header-title\">{data?.community.name}</h1>\n        <p className=\"header-description\">{data?.community.description}</p>\n      </div>\n      <div className=\"community-post-page-container\">\n        <div className=\"posts-container\">\n          {isLoading ? (\n            <div>Loading...</div>\n          ) : isError ? (\n            <div>{error.message}</div>\n          ) : (\n            <React.Fragment>\n              <div className=\"community-posts-container\">\n                {data.posts.map((post) => (\n                  <CommunityQuestion post={post} key={post.uuid} />\n                ))}\n              </div>\n              <div className=\"page-handlers\">\n                <p className=\"current-page\">Current Page: {page}</p>\n                <button\n                  onClick={() => {\n                    setPage((old) => Math.max(old - 1, 0));\n                    window.scrollTo(0, -500);\n                  }}\n                  disabled={page === 1}\n                >\n                  Previous Page\n                </button>\n                <button\n                  onClick={() => {\n                    if (!isPreviousData && data.hasMore) {\n                      setPage((old) => old + 1);\n                      window.scrollTo(0, -500);\n                    }\n                  }}\n                  disabled={isPreviousData || !data.hasMore}\n                >\n                  Next Page\n                </button>\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n        <Aside borderSide={\"left\"} />\n      </div>\n\n      <style jsx>{`\n        .community-post-header-container {\n          //height: 140px;\n          width: 100%;\n          background: ${css.headerBackground};\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .header-title,\n        .header-description {\n          width: 90%;\n        }\n\n        .header-title {\n          margin: 20px 0;\n        }\n\n        .header-description {\n          margin-bottom: 20px;\n        }\n\n        .community-post-page-container {\n          display: flex;\n          width: 100%;\n        }\n\n        .posts-container {\n          width: 80%;\n        }\n\n        .community-posts-container {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n\n        .page-handlers {\n          width: 90%;\n          margin: 30px auto;\n          display: flex;\n          justify-content: flex-end;\n          align-items: center;\n          height: 30px;\n        }\n\n        button {\n          height: 70%;\n          width: 90px;\n          margin: 0 5px;\n          font-size: 0.6rem;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default CommunityQuestions;\n"]},"metadata":{},"sourceType":"module"}