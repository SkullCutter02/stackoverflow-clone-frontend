{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answer.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\nimport AskedBy from \"./AskedBy\";\nimport { UserContext } from \"../context/UserContext\";\nimport hljs from \"highlight.js\";\nimport host from \"../utils/host\";\n\nconst Answer = ({\n  comment\n}) => {\n  var _userContext$user;\n\n  const {\n    0: votes,\n    1: setVotes\n  } = useState(comment.votes);\n  const {\n    0: upvoteColor,\n    1: setUpvoteColor\n  } = useState(\"grey\");\n  const {\n    0: downvoteColor,\n    1: setDownvoteColor\n  } = useState(\"grey\");\n  const userContext = useContext(UserContext);\n  const style = {\n    cursor: \"pointer\"\n  };\n  useEffect(() => {\n    const pres = document.querySelectorAll(\"pre\");\n\n    for (let i = 0; i < pres.length; i++) {\n      hljs.highlightBlock(pres[i]);\n    }\n  }, []);\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/comments/${comment.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.status) {\n          if (data.type === \"upvote\") {\n            setUpvoteColor(css.upvote);\n          } else if (data.type === \"downvote\") {\n            setDownvoteColor(css.downvote);\n          }\n        }\n      });\n    }\n  }, [userContext]);\n\n  const vote = voteType => {};\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1321083110\", [css.floatingPostBackground]]]) + \" \" + \"answer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"1321083110\", [css.floatingPostBackground]]]) + \" \" + \"votes\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSortUp,\n          color: upvoteColor,\n          style: style,\n          size: \"2x\",\n          onClick: () => vote(\"upvote\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#c6c6c6\",\n            margin: \"-8px 0\"\n          },\n          className: _JSXStyle.dynamic([[\"1321083110\", [css.floatingPostBackground]]]) + \" \" + \"vote-count\",\n          children: votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSortDown,\n          color: downvoteColor,\n          style: style,\n          size: \"2x\",\n          onClick: () => vote(\"downvote\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"95%\"\n        },\n        className: _JSXStyle.dynamic([[\"1321083110\", [css.floatingPostBackground]]]),\n        children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"preview answer-pre\",\n          source: comment.body,\n          plugins: [remarkGfm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1321083110\", [css.floatingPostBackground]]]) + \" \" + \"user\",\n          children: /*#__PURE__*/_jsxDEV(AskedBy, {\n            type: \"answered\",\n            username: comment.user.username,\n            createdAt: comment.createdAt,\n            postUuid: comment.user.uuid,\n            userUuid: userContext === null || userContext === void 0 ? void 0 : (_userContext$user = userContext.user) === null || _userContext$user === void 0 ? void 0 : _userContext$user.uuid,\n            reputation: comment.user.reputation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1321083110\",\n      dynamic: [css.floatingPostBackground],\n      children: `.answer-container.__jsx-style-dynamic-selector{width:100%;margin-bottom:30px;padding:5px 5px 20px;border-radius:10px;background:${css.floatingPostBackground};position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.user.__jsx-style-dynamic-selector{position:absolute;bottom:10px;right:5px;}.votes.__jsx-style-dynamic-selector{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-top:14px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9BbnN3ZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlHa0IsQUFHc0IsQUFVTyxBQU1ULFNBQ0ksRUFoQk0sT0FVUCxZQVRTLEFBVVgsVUFDWixXQVZxQixtQkFDcUIsYUFjbEIsMkJBYkosa0JBQ0wsaUNBYU0seUNBWnJCLG9EQWE2Qix5R0FDWCxnQkFDbEIiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9jb21wb25lbnRzL0Fuc3dlci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgRm9udEF3ZXNvbWVJY29uIH0gZnJvbSBcIkBmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZVwiO1xuaW1wb3J0IHsgZmFTb3J0RG93biwgZmFTb3J0VXAgfSBmcm9tIFwiQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zXCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcbmltcG9ydCByZW1hcmtHZm0gZnJvbSBcInJlbWFyay1nZm1cIjtcblxuaW1wb3J0IHsgQ29tbWVudFR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvaW5kaXZpZHVhbFF1ZXN0aW9uVHlwZVwiO1xuaW1wb3J0IHsgVm90ZVR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvdHlwZXMvdm90ZVR5cGVcIjtcbmltcG9ydCAqIGFzIGNzcyBmcm9tIFwiLi4vdXRpbHMvY3NzVmFyaWFibGVzXCI7XG5pbXBvcnQgQXNrZWRCeSBmcm9tIFwiLi9Bc2tlZEJ5XCI7XG5pbXBvcnQgeyBVc2VyQ29udGV4dCB9IGZyb20gXCIuLi9jb250ZXh0L1VzZXJDb250ZXh0XCI7XG5pbXBvcnQgaGxqcyBmcm9tIFwiaGlnaGxpZ2h0LmpzXCI7XG5pbXBvcnQgaG9zdCBmcm9tIFwiLi4vdXRpbHMvaG9zdFwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBjb21tZW50OiBDb21tZW50VHlwZTtcbn1cblxuY29uc3QgQW5zd2VyOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBjb21tZW50IH0pID0+IHtcbiAgY29uc3QgW3ZvdGVzLCBzZXRWb3Rlc10gPSB1c2VTdGF0ZTxudW1iZXI+KGNvbW1lbnQudm90ZXMpO1xuICBjb25zdCBbdXB2b3RlQ29sb3IsIHNldFVwdm90ZUNvbG9yXSA9IHVzZVN0YXRlPHN0cmluZz4oXCJncmV5XCIpO1xuICBjb25zdCBbZG93bnZvdGVDb2xvciwgc2V0RG93bnZvdGVDb2xvcl0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiZ3JleVwiKTtcblxuICBjb25zdCB1c2VyQ29udGV4dCA9IHVzZUNvbnRleHQoVXNlckNvbnRleHQpO1xuXG4gIGNvbnN0IHN0eWxlID0geyBjdXJzb3I6IFwicG9pbnRlclwiIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBwcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInByZVwiKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJlcy5sZW5ndGg7IGkrKykge1xuICAgICAgaGxqcy5oaWdobGlnaHRCbG9jayhwcmVzW2ldKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1c2VyQ29udGV4dC51c2VyKSB7XG4gICAgICBmZXRjaChgJHtob3N0fS9wb3N0cy9jb21tZW50cy8ke2NvbW1lbnQudXVpZH0vdm90ZS9zdGF0dXNgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHVzZXJVdWlkOiB1c2VyQ29udGV4dC51c2VyLnV1aWQsXG4gICAgICAgIH0pLFxuICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgLnRoZW4oKGRhdGE6IFZvdGVUeXBlKSA9PiB7XG4gICAgICAgICAgaWYgKGRhdGEuc3RhdHVzKSB7XG4gICAgICAgICAgICBpZiAoZGF0YS50eXBlID09PSBcInVwdm90ZVwiKSB7XG4gICAgICAgICAgICAgIHNldFVwdm90ZUNvbG9yKGNzcy51cHZvdGUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09IFwiZG93bnZvdGVcIikge1xuICAgICAgICAgICAgICBzZXREb3dudm90ZUNvbG9yKGNzcy5kb3dudm90ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gIH0sIFt1c2VyQ29udGV4dF0pO1xuXG4gIGNvbnN0IHZvdGUgPSAodm90ZVR5cGU6IFwidXB2b3RlXCIgfCBcImRvd252b3RlXCIpID0+IHt9O1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbnN3ZXItY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidm90ZXNcIj5cbiAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uXG4gICAgICAgICAgICBpY29uPXtmYVNvcnRVcH1cbiAgICAgICAgICAgIGNvbG9yPXt1cHZvdGVDb2xvcn1cbiAgICAgICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgICAgIHNpemU9e1wiMnhcIn1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHZvdGUoXCJ1cHZvdGVcIil9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidm90ZS1jb3VudFwiXG4gICAgICAgICAgICBzdHlsZT17eyBjb2xvcjogXCIjYzZjNmM2XCIsIG1hcmdpbjogXCItOHB4IDBcIiB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt2b3Rlc31cbiAgICAgICAgICA8L3A+XG4gICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblxuICAgICAgICAgICAgaWNvbj17ZmFTb3J0RG93bn1cbiAgICAgICAgICAgIGNvbG9yPXtkb3dudm90ZUNvbG9yfVxuICAgICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgICAgc2l6ZT17XCIyeFwifVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdm90ZShcImRvd252b3RlXCIpfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHdpZHRoOiBcIjk1JVwiIH19PlxuICAgICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwcmV2aWV3IGFuc3dlci1wcmVcIlxuICAgICAgICAgICAgc291cmNlPXtjb21tZW50LmJvZHl9XG4gICAgICAgICAgICBwbHVnaW5zPXtbcmVtYXJrR2ZtXX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlclwiPlxuICAgICAgICAgICAgPEFza2VkQnlcbiAgICAgICAgICAgICAgdHlwZT17XCJhbnN3ZXJlZFwifVxuICAgICAgICAgICAgICB1c2VybmFtZT17Y29tbWVudC51c2VyLnVzZXJuYW1lfVxuICAgICAgICAgICAgICBjcmVhdGVkQXQ9e2NvbW1lbnQuY3JlYXRlZEF0fVxuICAgICAgICAgICAgICBwb3N0VXVpZD17Y29tbWVudC51c2VyLnV1aWR9XG4gICAgICAgICAgICAgIHVzZXJVdWlkPXt1c2VyQ29udGV4dD8udXNlcj8udXVpZH1cbiAgICAgICAgICAgICAgcmVwdXRhdGlvbj17Y29tbWVudC51c2VyLnJlcHV0YXRpb259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5hbnN3ZXItY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDVweCA1cHggMjBweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLmZsb2F0aW5nUG9zdEJhY2tncm91bmR9O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnVzZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBib3R0b206IDEwcHg7XG4gICAgICAgICAgcmlnaHQ6IDVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC52b3RlcyB7XG4gICAgICAgICAgd2lkdGg6IDUlO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFuc3dlcjtcbiJdfQ== */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answer.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Answer;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Answer.tsx"],"names":["React","useEffect","useState","useContext","FontAwesomeIcon","faSortDown","faSortUp","ReactMarkdown","remarkGfm","css","AskedBy","UserContext","hljs","host","Answer","comment","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","userContext","style","cursor","pres","document","querySelectorAll","i","length","highlightBlock","user","fetch","uuid","method","headers","body","JSON","stringify","userUuid","then","res","json","data","status","type","upvote","downvote","vote","voteType","floatingPostBackground","color","margin","width","username","createdAt","reputation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport { CommentType } from \"../utils/types/individualQuestionType\";\nimport { VoteType } from \"../utils/types/voteType\";\nimport * as css from \"../utils/cssVariables\";\nimport AskedBy from \"./AskedBy\";\nimport { UserContext } from \"../context/UserContext\";\nimport hljs from \"highlight.js\";\nimport host from \"../utils/host\";\n\ninterface Props {\n  comment: CommentType;\n}\n\nconst Answer: React.FC<Props> = ({ comment }) => {\n  const [votes, setVotes] = useState<number>(comment.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n\n  const userContext = useContext(UserContext);\n\n  const style = { cursor: \"pointer\" };\n\n  useEffect(() => {\n    const pres = document.querySelectorAll(\"pre\");\n\n    for (let i = 0; i < pres.length; i++) {\n      hljs.highlightBlock(pres[i]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/comments/${comment.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data: VoteType) => {\n          if (data.status) {\n            if (data.type === \"upvote\") {\n              setUpvoteColor(css.upvote);\n            } else if (data.type === \"downvote\") {\n              setDownvoteColor(css.downvote);\n            }\n          }\n        });\n    }\n  }, [userContext]);\n\n  const vote = (voteType: \"upvote\" | \"downvote\") => {};\n\n  return (\n    <React.Fragment>\n      <div className=\"answer-container\">\n        <div className=\"votes\">\n          <FontAwesomeIcon\n            icon={faSortUp}\n            color={upvoteColor}\n            style={style}\n            size={\"2x\"}\n            onClick={() => vote(\"upvote\")}\n          />\n          <p\n            className=\"vote-count\"\n            style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n          >\n            {votes}\n          </p>\n          <FontAwesomeIcon\n            icon={faSortDown}\n            color={downvoteColor}\n            style={style}\n            size={\"2x\"}\n            onClick={() => vote(\"downvote\")}\n          />\n        </div>\n        <div style={{ width: \"95%\" }}>\n          <ReactMarkdown\n            className=\"preview answer-pre\"\n            source={comment.body}\n            plugins={[remarkGfm]}\n          />\n          <div className=\"user\">\n            <AskedBy\n              type={\"answered\"}\n              username={comment.user.username}\n              createdAt={comment.createdAt}\n              postUuid={comment.user.uuid}\n              userUuid={userContext?.user?.uuid}\n              reputation={comment.user.reputation}\n            />\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .answer-container {\n          width: 100%;\n          margin-bottom: 30px;\n          padding: 5px 5px 20px;\n          border-radius: 10px;\n          background: ${css.floatingPostBackground};\n          position: relative;\n          display: flex;\n        }\n\n        .user {\n          position: absolute;\n          bottom: 10px;\n          right: 5px;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin-top: 14px;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Answer;\n"]},"metadata":{},"sourceType":"module"}