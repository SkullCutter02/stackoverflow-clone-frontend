{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\nconst Communities = () => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchCommunities = async (page = 1) => {\n    const res = await fetch(`${host}/communities?page=${page}&limit=5`);\n    const data = res.json();\n\n    for (let community in data.communities) {\n      const res2 = await fetch(`${host}/communities/${community.uuid}/posts/count`);\n      const data2 = await res2.json();\n      community = _objectSpread(_objectSpread({}, community), {}, {\n        data2\n      });\n    }\n\n    return data;\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData\n  } = useQuery([\"communities\", page], () => fetchCommunities(page), {\n    keepPreviousData: true\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communities-container\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [data.communities.map(community => /*#__PURE__*/_jsxDEV(Community, {\n          uuid: community.uuid,\n          name: community.name,\n          description: community.description\n        }, community.uuid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPage(old => Math.max(old - 1, 0)),\n          disabled: page === 1,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!isPreviousData && data.hasMore) {\n              setPage(old => old + 1);\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Communities;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx"],"names":["React","useState","useQuery","host","Community","Communities","page","setPage","fetchCommunities","res","fetch","data","json","community","communities","res2","uuid","data2","isLoading","isError","error","isFetching","isPreviousData","keepPreviousData","message","map","name","description","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\nimport Community from \"./Community\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\ntype DataType = {\n  communities: CommunityType[];\n  hasMore: boolean;\n};\n\nconst Communities: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchCommunities = async (page: number = 1) => {\n    const res = await fetch(`${host}/communities?page=${page}&limit=5`);\n    const data: DataType = res.json();\n    for (let community in data.communities) {\n      const res2 = await fetch(\n        `${host}/communities/${community.uuid}/posts/count`\n      );\n      const data2 = await res2.json();\n      community = { ...community, data2 };\n    }\n    return data;\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<DataType, Error>(\n    [\"communities\", page],\n    () => fetchCommunities(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"communities-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <React.Fragment>\n            {data.communities.map((community) => (\n              <Community\n                uuid={community.uuid}\n                name={community.name}\n                description={community.description}\n                key={community.uuid}\n              />\n            ))}\n            <span>Current Page: {page}</span>\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 1}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </React.Fragment>\n        )}\n        {isFetching ? <span>Loading...</span> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n"]},"metadata":{},"sourceType":"module"}