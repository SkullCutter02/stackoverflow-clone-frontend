{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/admin.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\n\nconst AdminPage = () => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n\n  const fetchRequests = async page => {\n    const res = await fetch(`${host}/requests?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isPreviousData\n  } = useQuery([\"requests\", page], () => fetchRequests(page), {\n    keepPreviousData: true\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-area-container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requests-container\",\n          children: data.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: request.uuid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/admin.tsx"],"names":["React","useState","useQuery","host","AdminPage","page","setPage","fetchRequests","res","fetch","json","isLoading","isError","error","data","isPreviousData","keepPreviousData","message","map","request","uuid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAOC,IAAP,MAAiB,eAAjB;;AAYA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAS,CAAT,CAAhC;;AAEA,QAAMM,aAAa,GAAG,MAAOF,IAAP,IAAwB;AAC5C,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,kBAAiBE,IAAK,WAA/B,CAAvB;AACA,WAAO,MAAMG,GAAG,CAACE,IAAJ,EAAb;AACD,GAHD;;AAKA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,MAAsDb,QAAQ,CAGlE,CAAC,UAAD,EAAaG,IAAb,CAHkE,EAG9C,MAAME,aAAa,CAACF,IAAD,CAH2B,EAGnB;AAC/CW,IAAAA,gBAAgB,EAAE;AAD6B,GAHmB,CAApE;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGL,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENC,OAAO,gBACT;AAAA,kBAAMC,KAAK,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,cADS,gBAGT,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACGH,IAAI,CAACI,GAAL,CAAUC,OAAD,iBACR;AAAA,sBAAMA,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAnCD;;AAqCA,eAAehB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport PageHandlers from \"../components/PageHandlers\";\n\nimport host from \"../utils/host\";\n\ntype RequestType = {\n  requests: {\n    uuid: string;\n    name: string;\n    link: string;\n    createdAt: string;\n    updatedAt: string;\n  };\n};\n\nconst AdminPage = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchRequests = async (page: number) => {\n    const res = await fetch(`${host}/requests?page=${page}&limit=20`);\n    return await res.json();\n  };\n\n  const { isLoading, isError, error, data, isPreviousData } = useQuery<\n    RequestType[],\n    Error\n  >([\"requests\", page], () => fetchRequests(page), {\n    keepPreviousData: true,\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"admin-area-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>{error.message}</div>\n        ) : (\n          <React.Fragment>\n            <div className=\"requests-container\">\n              {data.map((request) => (\n                <div>{request.uuid}</div>\n              ))}\n            </div>\n            {/*<PageHandlers page={} setPage={} isPreviousData={} hasMore={} width={}/>*/}\n          </React.Fragment>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AdminPage;\n"]},"metadata":{},"sourceType":"module"}