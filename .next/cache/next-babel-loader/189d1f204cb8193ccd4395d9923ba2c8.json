{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Link from \"next/link\";\nimport host from \"../utils/host\";\nimport * as css from \"../utils/cssVariables\";\nimport Tag from \"./Tag\";\nimport PageHandlers from \"./PageHandlers\";\n\nvar UserQuestions = function UserQuestions(_ref) {\n  var uuid = _ref.uuid;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchUserPosts = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(host, \"/users/\").concat(uuid, \"/posts?page=\").concat(page, \"&limit=20\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchUserPosts(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery([\"user-posts\", page], function () {\n    return fetchUserPosts(page);\n  }, {\n    keepPreviousData: true,\n    cacheTime: 0\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isPreviousData = _useQuery.isPreviousData;\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]),\n      children: \"Loading...\"\n    }) : isError ? /*#__PURE__*/_jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]),\n      children: error.message\n    }) : /*#__PURE__*/_jsx(React.Fragment, {\n      children: data.posts.length !== 0 ? /*#__PURE__*/_jsxs(\"div\", {\n        className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"user-posts-container\",\n        children: [data.posts.map(function (post) {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"user-post-container\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"post-aside\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"votes\",\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"number\",\n                  children: post.votes\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"text\",\n                  children: [\"Vote\", post.votes === 1 ? \"\" : \"s\"]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"comments\",\n                children: [/*#__PURE__*/_jsx(\"p\", {\n                  className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"number\",\n                  children: post.comments.length\n                }), /*#__PURE__*/_jsxs(\"p\", {\n                  className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"text\",\n                  children: [\"Answer\", post.comments.length === 1 ? \"\" : \"s\"]\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"post-main\",\n              children: [/*#__PURE__*/_jsx(Link, {\n                href: \"/questions/\".concat(post.uuid),\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"post-title\",\n                  children: post.title\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"communities-container\",\n                children: post.communities.slice(0, 4).map(function (community) {\n                  return /*#__PURE__*/_jsx(Tag, {\n                    name: community.name\n                  }, community.name);\n                })\n              })]\n            })]\n          }, post.uuid);\n        }), /*#__PURE__*/_jsx(PageHandlers, {\n          page: page,\n          setPage: setPage,\n          isPreviousData: isPreviousData,\n          hasMore: data.hasMore,\n          width: 97\n        })]\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]) + \" \" + \"empty\",\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          className: _JSXStyle.dynamic([[\"4220044538\", [css.floatingPostBackground]]]),\n          children: \"This user doesn't have any questions...\"\n        })\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"4220044538\",\n      dynamic: [css.floatingPostBackground],\n      children: [\".user-post-container.__jsx-style-dynamic-selector{height:100px;background:\".concat(css.floatingPostBackground, \";margin:30px 20px;border-radius:10px;padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"), \".empty.__jsx-style-dynamic-selector{height:300px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \".post-aside.__jsx-style-dynamic-selector{width:3%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0 5px;}\", \".votes.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector{width:100%;height:50%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \".votes.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector p.__jsx-style-dynamic-selector{color:#dedede;font-size:1rem;}\", \".votes.__jsx-style-dynamic-selector .text.__jsx-style-dynamic-selector,.comments.__jsx-style-dynamic-selector .text.__jsx-style-dynamic-selector{font-size:0.7rem;}\", \".post-main.__jsx-style-dynamic-selector{width:97%;margin-left:9px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\", \".post-title.__jsx-style-dynamic-selector{color:#ffffff;cursor:pointer;font-size:0.95rem;display:block;word-wrap:break-word;overflow:hidden;line-height:1.2em;max-height:2.4em;margin-left:6px;margin-top:6px;}\", \".post-title.__jsx-style-dynamic-selector:hover{color:#bebebe;}\", \".communities-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"]\n    })]\n  });\n};\n\nexport default UserQuestions;","map":null,"metadata":{},"sourceType":"module"}