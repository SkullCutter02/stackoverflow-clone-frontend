{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditQuestion.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState, useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst EditQuestion = ({\n  setEditMode,\n  question,\n  setTargetBody\n}) => {\n  const {\n    0: body,\n    1: setBody\n  } = useState(question.body);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"Save\");\n  const userContext = useContext(UserContext);\n\n  const editForm = e => {\n    e.preventDefault();\n\n    if (userContext.user) {\n      const spinner = document.getElementById(\"spinner\");\n      spinner.style.display = \"block\";\n      setText(\"\");\n      fetch(`${host}/posts/${question.uuid}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        },\n        body: JSON.stringify({\n          body: body,\n          userUuid: userContext.user.uuid\n        })\n      }).then(async res => {\n        if (res.status >= 200 && res.status < 300) {\n          const data = await res.json();\n          setTargetBody(data);\n          setEditMode(false);\n          window.scrollBy(0, -1000);\n        } else {\n          alert(\"Something went wrong\");\n          setText(\"Save\");\n          spinner.style.display = \"none\";\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editForm,\n      className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"edit-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"edit-form-body\",\n        cols: 30,\n        rows: 10,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"preview edit-post-preview\",\n        source: body,\n        plugins: [remarkGfm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"save\",\n          className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"save\",\n          children: [text, /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"spinner\",\n            className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"smt-spinner-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"smt-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const confirm = window.confirm(\"Are you sure to discard your changes?\");\n\n            if (confirm) {\n              setEditMode(false);\n              window.scrollTo(0, -1000);\n            }\n          },\n          className: _JSXStyle.dynamic([[\"3254893101\", [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover]]]) + \" \" + \"cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3254893101\",\n      dynamic: [css.inputBackground, css.inputBorder, css.mainButton, css.mainButtonHover, css.cancelButton, css.cancelButtonHover],\n      children: `.edit-post-container.__jsx-style-dynamic-selector{width:92%;margin:20px auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}#edit-form-body.__jsx-style-dynamic-selector{width:90%;resize:none;height:400px;margin-bottom:20px;background:${css.inputBackground};border:2px solid ${css.inputBorder};color:#fff;padding:15px;}.buttons-container.__jsx-style-dynamic-selector{width:90%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}button.__jsx-style-dynamic-selector{margin-left:20px;border:none;border-radius:4px;width:80px;height:25px;cursor:pointer;color:#fff;font-size:0.8rem;}.save.__jsx-style-dynamic-selector{background:${css.mainButton};}.save.__jsx-style-dynamic-selector:hover{background:${css.mainButtonHover};}.cancel.__jsx-style-dynamic-selector{background:${css.cancelButton};}.cancel.__jsx-style-dynamic-selector:hover{background:${css.cancelButtonHover};}.smt-spinner-circle.__jsx-style-dynamic-selector{width:17px;height:17px;position:relative;border-radius:50%;margin:0 auto;display:none;}.smt-spinner.__jsx-style-dynamic-selector{height:100%;width:100%;border-radius:50%;border-right:2px solid rgba(255,255,255,0.6);border-top:2px solid #bababa;border-left:2px solid #dedede;border-bottom:2px solid #ffffff;-webkit-animation:rotate--spinner-__jsx-style-dynamic-selector 1.6s infinite;animation:rotate--spinner-__jsx-style-dynamic-selector 1.6s infinite;}@-webkit-keyframes rotate--spinner-__jsx-style-dynamic-selector{from{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}@keyframes rotate--spinner-__jsx-style-dynamic-selector{from{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9FZGl0UXVlc3Rpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtHa0IsQUFHcUIsQUFRQSxBQVdBLEFBTU8sQUFXdUIsQUFJQSxBQUlBLEFBSUEsQUFJN0IsQUFTQyxBQVlVLEFBR0ssVUEzRVYsQUFRTCxBQVdDLENBaUNELENBU0QsS0FwQ0MsS0FoQkMsQ0E0Q0ssQUFTQSxJQTdETCxFQXlCSyxNQWhCQyxLQTBCckIsQUFJQSxBQUlBLEFBSUEsQ0FNb0IsQUFTOEIsTUFwQ3JDLE9BaEI2QixJQWlCNUIsQ0EyQkUsV0ExQkMsRUE0Q2YsQ0FqQmEsV0FwQ1ksQ0FVZCxDQTJCYixBQU8rQixDQVk3QixPQWhFOEMsRUFtQjdCLEtBN0JLLFlBOEJ4QixFQWlDZ0MseUJBcERuQixLQXFEcUIsTUFwRG5CLGFBQ2YsYUFvRDBDLEVBaEVyQixFQWtCckIsMkZBakJBLG1EQWdFQSIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvRWRpdFF1ZXN0aW9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5pbXBvcnQgcmVtYXJrR2ZtIGZyb20gXCJyZW1hcmstZ2ZtXCI7XG5cbmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy9pbmRpdmlkdWFsUXVlc3Rpb25UeXBlXCI7XG5pbXBvcnQgKiBhcyBjc3MgZnJvbSBcIi4uL3V0aWxzL2Nzc1ZhcmlhYmxlc1wiO1xuaW1wb3J0IGhvc3QgZnJvbSBcIi4uL3V0aWxzL2hvc3RcIjtcbmltcG9ydCB7IGdldENvb2tpZSB9IGZyb20gXCIuLi91dGlscy9mdW5jdGlvbnNcIjtcbmltcG9ydCB7IFVzZXJDb250ZXh0IH0gZnJvbSBcIi4uL2NvbnRleHQvVXNlckNvbnRleHRcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgc2V0RWRpdE1vZGU6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPGJvb2xlYW4+PjtcbiAgcXVlc3Rpb246IFF1ZXN0aW9uVHlwZTtcbiAgc2V0VGFyZ2V0Qm9keTogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248UXVlc3Rpb25UeXBlIHwgbnVsbD4+O1xufVxuXG5jb25zdCBFZGl0UXVlc3Rpb246IFJlYWN0LkZDPFByb3BzPiA9ICh7XG4gIHNldEVkaXRNb2RlLFxuICBxdWVzdGlvbixcbiAgc2V0VGFyZ2V0Qm9keSxcbn0pID0+IHtcbiAgY29uc3QgW2JvZHksIHNldEJvZHldID0gdXNlU3RhdGU8c3RyaW5nPihxdWVzdGlvbi5ib2R5KTtcbiAgY29uc3QgW3RleHQsIHNldFRleHRdID0gdXNlU3RhdGU8c3RyaW5nPihcIlNhdmVcIik7XG5cbiAgY29uc3QgdXNlckNvbnRleHQgPSB1c2VDb250ZXh0KFVzZXJDb250ZXh0KTtcblxuICBjb25zdCBlZGl0Rm9ybSA9IChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgaWYgKHVzZXJDb250ZXh0LnVzZXIpIHtcbiAgICAgIGNvbnN0IHNwaW5uZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXJcIikgYXMgSFRNTERpdkVsZW1lbnQ7XG4gICAgICBzcGlubmVyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICBzZXRUZXh0KFwiXCIpO1xuXG4gICAgICBmZXRjaChgJHtob3N0fS9wb3N0cy8ke3F1ZXN0aW9uLnV1aWR9YCwge1xuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtnZXRDb29raWUoXCJ0b2tlblwiKX1gLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgYm9keTogYm9keSxcbiAgICAgICAgICB1c2VyVXVpZDogdXNlckNvbnRleHQudXNlci51dWlkLFxuICAgICAgICB9KSxcbiAgICAgIH0pLnRoZW4oYXN5bmMgKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLnN0YXR1cyA+PSAyMDAgJiYgcmVzLnN0YXR1cyA8IDMwMCkge1xuICAgICAgICAgIGNvbnN0IGRhdGE6IFF1ZXN0aW9uVHlwZSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgICAgc2V0VGFyZ2V0Qm9keShkYXRhKTtcbiAgICAgICAgICBzZXRFZGl0TW9kZShmYWxzZSk7XG4gICAgICAgICAgd2luZG93LnNjcm9sbEJ5KDAsIC0xMDAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhbGVydChcIlNvbWV0aGluZyB3ZW50IHdyb25nXCIpO1xuICAgICAgICAgIHNldFRleHQoXCJTYXZlXCIpO1xuICAgICAgICAgIHNwaW5uZXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8Zm9ybSBjbGFzc05hbWU9XCJlZGl0LXBvc3QtY29udGFpbmVyXCIgb25TdWJtaXQ9e2VkaXRGb3JtfT5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgaWQ9XCJlZGl0LWZvcm0tYm9keVwiXG4gICAgICAgICAgY29scz17MzB9XG4gICAgICAgICAgcm93cz17MTB9XG4gICAgICAgICAgdmFsdWU9e2JvZHl9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRCb2R5KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgLz5cbiAgICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgICBjbGFzc05hbWU9XCJwcmV2aWV3IGVkaXQtcG9zdC1wcmV2aWV3XCJcbiAgICAgICAgICBzb3VyY2U9e2JvZHl9XG4gICAgICAgICAgcGx1Z2lucz17W3JlbWFya0dmbV19XG4gICAgICAgIC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9ucy1jb250YWluZXJcIj5cbiAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInNhdmVcIiBpZD1cInNhdmVcIj5cbiAgICAgICAgICAgIHt0ZXh0fVxuICAgICAgICAgICAgPGRpdiBpZD1cInNwaW5uZXJcIiBjbGFzc05hbWU9XCJzbXQtc3Bpbm5lci1jaXJjbGVcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzbXQtc3Bpbm5lclwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGNvbmZpcm0gPSB3aW5kb3cuY29uZmlybShcbiAgICAgICAgICAgICAgICBcIkFyZSB5b3Ugc3VyZSB0byBkaXNjYXJkIHlvdXIgY2hhbmdlcz9cIlxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBpZiAoY29uZmlybSkge1xuICAgICAgICAgICAgICAgIHNldEVkaXRNb2RlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgLTEwMDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2FuY2VsXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBDYW5jZWxcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmVkaXQtcG9zdC1jb250YWluZXIge1xuICAgICAgICAgIHdpZHRoOiA5MiU7XG4gICAgICAgICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAjZWRpdC1mb3JtLWJvZHkge1xuICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgcmVzaXplOiBub25lO1xuICAgICAgICAgIGhlaWdodDogNDAwcHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5pbnB1dEJhY2tncm91bmR9O1xuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICR7Y3NzLmlucHV0Qm9yZGVyfTtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmJ1dHRvbnMtY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLnNhdmUge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLm1haW5CdXR0b259O1xuICAgICAgICB9XG5cbiAgICAgICAgLnNhdmU6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y3NzLm1haW5CdXR0b25Ib3Zlcn07XG4gICAgICAgIH1cblxuICAgICAgICAuY2FuY2VsIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAke2Nzcy5jYW5jZWxCdXR0b259O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhbmNlbDpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuY2FuY2VsQnV0dG9uSG92ZXJ9O1xuICAgICAgICB9XG5cbiAgICAgICAgLnNtdC1zcGlubmVyLWNpcmNsZSB7XG4gICAgICAgICAgd2lkdGg6IDE3cHg7XG4gICAgICAgICAgaGVpZ2h0OiAxN3B4O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zbXQtc3Bpbm5lciB7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG4gICAgICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNiYWJhYmE7XG4gICAgICAgICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjZGVkZWRlO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmZmZmO1xuICAgICAgICAgIGFuaW1hdGlvbjogcm90YXRlLS1zcGlubmVyIDEuNnMgaW5maW5pdGU7XG4gICAgICAgIH1cblxuICAgICAgICBAa2V5ZnJhbWVzIHJvdGF0ZS0tc3Bpbm5lciB7XG4gICAgICAgICAgZnJvbSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdG8ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRWRpdFF1ZXN0aW9uO1xuIl19 */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditQuestion.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EditQuestion;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/EditQuestion.tsx"],"names":["React","useState","useContext","ReactMarkdown","remarkGfm","css","host","getCookie","UserContext","EditQuestion","setEditMode","question","setTargetBody","body","setBody","text","setText","userContext","editForm","e","preventDefault","user","spinner","document","getElementById","style","display","fetch","uuid","method","headers","Authorization","JSON","stringify","userUuid","then","res","status","data","json","window","scrollBy","alert","inputBackground","inputBorder","mainButton","mainButtonHover","cancelButton","cancelButtonHover","target","value","confirm","scrollTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAQA,MAAMC,YAA6B,GAAG,CAAC;AACrCC,EAAAA,WADqC;AAErCC,EAAAA,QAFqC;AAGrCC,EAAAA;AAHqC,CAAD,KAIhC;AACJ,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAASU,QAAQ,CAACE,IAAlB,CAAhC;AACA,QAAM;AAAA,OAACE,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAS,MAAT,CAAhC;AAEA,QAAMgB,WAAW,GAAGf,UAAU,CAACM,WAAD,CAA9B;;AAEA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIH,WAAW,CAACI,IAAhB,EAAsB;AACpB,YAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACAF,MAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACAV,MAAAA,OAAO,CAAC,EAAD,CAAP;AAEAW,MAAAA,KAAK,CAAE,GAAErB,IAAK,UAASK,QAAQ,CAACiB,IAAK,EAAhC,EAAmC;AACtCC,QAAAA,MAAM,EAAE,OAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASxB,SAAS,CAAC,OAAD,CAAU;AAFrC,SAF6B;AAMtCM,QAAAA,IAAI,EAAEmB,IAAI,CAACC,SAAL,CAAe;AACnBpB,UAAAA,IAAI,EAAEA,IADa;AAEnBqB,UAAAA,QAAQ,EAAEjB,WAAW,CAACI,IAAZ,CAAiBO;AAFR,SAAf;AANgC,OAAnC,CAAL,CAUGO,IAVH,CAUQ,MAAOC,GAAP,IAAe;AACrB,YAAIA,GAAG,CAACC,MAAJ,IAAc,GAAd,IAAqBD,GAAG,CAACC,MAAJ,GAAa,GAAtC,EAA2C;AACzC,gBAAMC,IAAkB,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjC;AACA3B,UAAAA,aAAa,CAAC0B,IAAD,CAAb;AACA5B,UAAAA,WAAW,CAAC,KAAD,CAAX;AACA8B,UAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAC,IAApB;AACD,SALD,MAKO;AACLC,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACA1B,UAAAA,OAAO,CAAC,MAAD,CAAP;AACAM,UAAAA,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACD;AACF,OArBD;AAsBD;AACF,GA/BD;;AAiCA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAsC,MAAA,QAAQ,EAAER,QAAhD;AAAA,oDAmDkBb,GAAG,CAACsC,eAnDtB,EAoDwBtC,GAAG,CAACuC,WApD5B,EA2EkBvC,GAAG,CAACwC,UA3EtB,EA+EkBxC,GAAG,CAACyC,eA/EtB,EAmFkBzC,GAAG,CAAC0C,YAnFtB,EAuFkB1C,GAAG,CAAC2C,iBAvFtB,aAAgB,qBAAhB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAEnC,IAJT;AAKE,QAAA,QAAQ,EAAGM,CAAD,IAAOL,OAAO,CAACK,CAAC,CAAC8B,MAAF,CAASC,KAAV,CAL1B;AAAA,sDAkDgB7C,GAAG,CAACsC,eAlDpB,EAmDsBtC,GAAG,CAACuC,WAnD1B,EA0EgBvC,GAAG,CAACwC,UA1EpB,EA8EgBxC,GAAG,CAACyC,eA9EpB,EAkFgBzC,GAAG,CAAC0C,YAlFpB,EAsFgB1C,GAAG,CAAC2C,iBAtFpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,MAAM,EAAEnC,IAFV;AAGE,QAAA,OAAO,EAAE,CAACT,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA,cARF,eAaE;AAAA,sDAsCgBC,GAAG,CAACsC,eAtCpB,EAuCsBtC,GAAG,CAACuC,WAvC1B,EA8DgBvC,GAAG,CAACwC,UA9DpB,EAkEgBxC,GAAG,CAACyC,eAlEpB,EAsEgBzC,GAAG,CAAC0C,YAtEpB,EA0EgB1C,GAAG,CAAC2C,iBA1EpB,aAAe,mBAAf;AAAA,gCACE;AAAyB,UAAA,EAAE,EAAC,MAA5B;AAAA,wDAqCc3C,GAAG,CAACsC,eArClB,EAsCoBtC,GAAG,CAACuC,WAtCxB,EA6DcvC,GAAG,CAACwC,UA7DlB,EAiEcxC,GAAG,CAACyC,eAjElB,EAqEczC,GAAG,CAAC0C,YArElB,EAyEc1C,GAAG,CAAC2C,iBAzElB,aAAkB,MAAlB;AAAA,qBACGjC,IADH,eAEE;AAAK,YAAA,EAAE,EAAC,SAAR;AAAA,0DAmCYV,GAAG,CAACsC,eAnChB,EAoCkBtC,GAAG,CAACuC,WApCtB,EA2DYvC,GAAG,CAACwC,UA3DhB,EA+DYxC,GAAG,CAACyC,eA/DhB,EAmEYzC,GAAG,CAAC0C,YAnEhB,EAuEY1C,GAAG,CAAC2C,iBAvEhB,aAA4B,oBAA5B;AAAA,mCACE;AAAA,4DAkCU3C,GAAG,CAACsC,eAlCd,EAmCgBtC,GAAG,CAACuC,WAnCpB,EA0DUvC,GAAG,CAACwC,UA1Dd,EA8DUxC,GAAG,CAACyC,eA9Dd,EAkEUzC,GAAG,CAAC0C,YAlEd,EAsEU1C,GAAG,CAAC2C,iBAtEd,aAAe;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMG,OAAO,GAAGX,MAAM,CAACW,OAAP,CACd,uCADc,CAAhB;;AAGA,gBAAIA,OAAJ,EAAa;AACXzC,cAAAA,WAAW,CAAC,KAAD,CAAX;AACA8B,cAAAA,MAAM,CAACY,QAAP,CAAgB,CAAhB,EAAmB,CAAC,IAApB;AACD;AACF,WATH;AAAA,wDA+Bc/C,GAAG,CAACsC,eA/BlB,EAgCoBtC,GAAG,CAACuC,WAhCxB,EAuDcvC,GAAG,CAACwC,UAvDlB,EA2DcxC,GAAG,CAACyC,eA3DlB,EA+DczC,GAAG,CAAC0C,YA/DlB,EAmEc1C,GAAG,CAAC2C,iBAnElB,aAUY,QAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA,gBAoDoB3C,GAAG,CAACsC,eApDxB,EAqD0BtC,GAAG,CAACuC,WArD9B,EA4EoBvC,GAAG,CAACwC,UA5ExB,EAgFoBxC,GAAG,CAACyC,eAhFxB,EAoFoBzC,GAAG,CAAC0C,YApFxB,EAwFoB1C,GAAG,CAAC2C,iBAxFxB;AAAA,ocAoDoB3C,GAAG,CAACsC,eApDxB,qBAqD0BtC,GAAG,CAACuC,WArD9B,ucA4EoBvC,GAAG,CAACwC,UA5ExB,yDAgFoBxC,GAAG,CAACyC,eAhFxB,qDAoFoBzC,GAAG,CAAC0C,YApFxB,2DAwFoB1C,GAAG,CAAC2C,iBAxFxB;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2HD,CAtKD;;AAwKA,eAAevC,YAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport * as css from \"../utils/cssVariables\";\nimport host from \"../utils/host\";\nimport { getCookie } from \"../utils/functions\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  question: QuestionType;\n  setTargetBody: React.Dispatch<React.SetStateAction<QuestionType | null>>;\n}\n\nconst EditQuestion: React.FC<Props> = ({\n  setEditMode,\n  question,\n  setTargetBody,\n}) => {\n  const [body, setBody] = useState<string>(question.body);\n  const [text, setText] = useState<string>(\"Save\");\n\n  const userContext = useContext(UserContext);\n\n  const editForm = (e) => {\n    e.preventDefault();\n\n    if (userContext.user) {\n      const spinner = document.getElementById(\"spinner\") as HTMLDivElement;\n      spinner.style.display = \"block\";\n      setText(\"\");\n\n      fetch(`${host}/posts/${question.uuid}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`,\n        },\n        body: JSON.stringify({\n          body: body,\n          userUuid: userContext.user.uuid,\n        }),\n      }).then(async (res) => {\n        if (res.status >= 200 && res.status < 300) {\n          const data: QuestionType = await res.json();\n          setTargetBody(data);\n          setEditMode(false);\n          window.scrollBy(0, -1000);\n        } else {\n          alert(\"Something went wrong\");\n          setText(\"Save\");\n          spinner.style.display = \"none\";\n        }\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <form className=\"edit-post-container\" onSubmit={editForm}>\n        <textarea\n          id=\"edit-form-body\"\n          cols={30}\n          rows={10}\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n        <ReactMarkdown\n          className=\"preview edit-post-preview\"\n          source={body}\n          plugins={[remarkGfm]}\n        />\n        <div className=\"buttons-container\">\n          <button className=\"save\" id=\"save\">\n            {text}\n            <div id=\"spinner\" className=\"smt-spinner-circle\">\n              <div className=\"smt-spinner\" />\n            </div>\n          </button>\n          <button\n            onClick={() => {\n              const confirm = window.confirm(\n                \"Are you sure to discard your changes?\"\n              );\n              if (confirm) {\n                setEditMode(false);\n                window.scrollTo(0, -1000);\n              }\n            }}\n            className=\"cancel\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      <style jsx>{`\n        .edit-post-container {\n          width: 92%;\n          margin: 20px auto;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n\n        #edit-form-body {\n          width: 90%;\n          resize: none;\n          height: 400px;\n          margin-bottom: 20px;\n          background: ${css.inputBackground};\n          border: 2px solid ${css.inputBorder};\n          color: #fff;\n          padding: 15px;\n        }\n\n        .buttons-container {\n          width: 90%;\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        button {\n          margin-left: 20px;\n          border: none;\n          border-radius: 4px;\n          width: 80px;\n          height: 25px;\n          cursor: pointer;\n          color: #fff;\n          font-size: 0.8rem;\n        }\n\n        .save {\n          background: ${css.mainButton};\n        }\n\n        .save:hover {\n          background: ${css.mainButtonHover};\n        }\n\n        .cancel {\n          background: ${css.cancelButton};\n        }\n\n        .cancel:hover {\n          background: ${css.cancelButtonHover};\n        }\n\n        .smt-spinner-circle {\n          width: 17px;\n          height: 17px;\n          position: relative;\n          border-radius: 50%;\n          margin: 0 auto;\n          display: none;\n        }\n\n        .smt-spinner {\n          height: 100%;\n          width: 100%;\n          border-radius: 50%;\n          border-right: 2px solid rgba(255, 255, 255, 0.6);\n          border-top: 2px solid #bababa;\n          border-left: 2px solid #dedede;\n          border-bottom: 2px solid #ffffff;\n          animation: rotate--spinner 1.6s infinite;\n        }\n\n        @keyframes rotate--spinner {\n          from {\n            transform: rotate(0);\n          }\n          to {\n            transform: rotate(360deg);\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default EditQuestion;\n"]},"metadata":{},"sourceType":"module"}