{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/user/[username]/index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport UserInfo from \"../../../components/UserInfo\";\n\nconst UserProfilePage = ({\n  username\n}) => {\n  const {\n    0: key,\n    1: setKey\n  } = useState(0);\n  useEffect(() => {\n    setKey(old => old + 1);\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(UserInfo, {\n    username: username\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getServerSideProps = async context => {\n  return {\n    props: {\n      username: context.query.username\n    }\n  };\n};\nexport default UserProfilePage;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/pages/user/[username]/index.tsx"],"names":["React","useEffect","useState","UserInfo","UserProfilePage","username","key","setKey","old","getServerSideProps","context","props","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,QAAP,MAAqB,8BAArB;;AAMA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzD,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAAS,CAAT,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAAEC,GAAD,IAASA,GAAG,GAAG,CAAhB,CAAN;AACD,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;AAIA,sBAAO,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA;AAApB,KAAmCC,GAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARD;;AAUA,OAAO,MAAMG,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACvE,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLN,MAAAA,QAAQ,EAAEK,OAAO,CAACE,KAAR,CAAcP;AADnB;AADF,GAAP;AAKD,CANM;AAQP,eAAeD,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GetServerSideProps } from \"next\";\n\nimport UserInfo from \"../../../components/UserInfo\";\n\ninterface Props {\n  username: string;\n}\n\nconst UserProfilePage: React.FC<Props> = ({ username }) => {\n  const [key, setKey] = useState<number>(0);\n\n  useEffect(() => {\n    setKey((old) => old + 1);\n  }, [username]);\n\n  return <UserInfo username={username} key={key} />;\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  return {\n    props: {\n      username: context.query.username,\n    },\n  };\n};\n\nexport default UserProfilePage;\n"]},"metadata":{},"sourceType":"module"}