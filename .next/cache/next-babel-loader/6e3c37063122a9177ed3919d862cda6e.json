{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\nimport { getCookie, updateVote } from \"../utils/functions\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport AskedBy from \"./AskedBy\";\nimport Tag from \"./Tag\";\nimport * as css from \"../utils/cssVariables\";\n\nconst Question = ({\n  question\n}) => {\n  var _userContext$user;\n\n  const {\n    0: votes,\n    1: setVotes\n  } = useState(question.votes);\n  const {\n    0: upvoteColor,\n    1: setUpvoteColor\n  } = useState(\"grey\");\n  const {\n    0: downvoteColor,\n    1: setDownvoteColor\n  } = useState(\"grey\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n  const upvote = css.upvote;\n  const downvote = css.downvote;\n  const style = {\n    cursor: \"pointer\"\n  };\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${question.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.status) {\n          if (data.type === \"upvote\") {\n            setUpvoteColor(upvote);\n          } else if (data.type === \"downvote\") {\n            setDownvoteColor(downvote);\n          }\n        }\n      });\n    }\n  }, [userContext]);\n\n  const vote = async voteType => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== question.user.uuid) {\n        fetch(`${host}/posts/${question.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid\n          })\n        }).then(res => res.json()).then(data => updateVote(data, voteType, setVotes, setUpvoteColor, setDownvoteColor, votes, upvote, downvote));\n        await fetch(`${host}/posts/${question.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType\n          })\n        });\n      } else {\n        alert(\"You can't vote on your own post!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"jsx-268140291\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-268140291\" + \" \" + \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-268140291\" + \" \" + \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-268140291\" + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortUp,\n              color: upvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"upvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#c6c6c6\",\n                margin: \"-8px 0\"\n              },\n              className: \"jsx-268140291\" + \" \" + \"vote-count\",\n              children: votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortDown,\n              color: downvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"downvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-268140291\" + \" \" + \"main-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsx-268140291\" + \" \" + \"post-body\",\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                className: \"preview post-body-mkd\",\n                source: question.body,\n                plugins: [remarkGfm]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jsx-268140291\" + \" \" + \"post-body-btm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"jsx-268140291\" + \" \" + \"communities-container\",\n                children: question.communities.slice(0, 4).map(community => /*#__PURE__*/_jsxDEV(Tag, {\n                  name: community.name\n                }, community.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AskedBy, {\n                username: question.user.username,\n                createdAt: question.createdAt,\n                postUuid: question.user.uuid,\n                userUuid: userContext === null || userContext === void 0 ? void 0 : (_userContext$user = userContext.user) === null || _userContext$user === void 0 ? void 0 : _userContext$user.uuid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"268140291\",\n      children: \".question-container.jsx-268140291{width:92%;margin:0 auto;}.main.jsx-268140291{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:20px 0;}.votes.jsx-268140291{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin:14px 20px;}.main-right.jsx-268140291{width:95%;}.post-body-btm.jsx-268140291{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:95%;margin-bottom:20px;}.communities-container.jsx-268140291{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Question;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx"],"names":["React","useContext","useState","useEffect","ReactMarkdown","remarkGfm","FontAwesomeIcon","faSortUp","faSortDown","useRouter","getCookie","updateVote","host","UserContext","AskedBy","Tag","css","Question","question","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","userContext","router","upvote","downvote","style","cursor","user","fetch","uuid","method","headers","body","JSON","stringify","userUuid","then","res","json","data","status","type","vote","voteType","Authorization","alert","push","color","margin","communities","slice","map","community","name","username","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mCAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;;AAMA,MAAMC,QAAyB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAClD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAASgB,QAAQ,CAACC,KAAlB,CAAlC;AACA,QAAM;AAAA,OAACE,WAAD;AAAA,OAAcC;AAAd,MAAgCpB,QAAQ,CAAS,MAAT,CAA9C;AACA,QAAM;AAAA,OAACqB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCtB,QAAQ,CAAS,MAAT,CAAlD;AAEA,QAAMuB,WAAW,GAAGxB,UAAU,CAACY,WAAD,CAA9B;AACA,QAAMa,MAAM,GAAGjB,SAAS,EAAxB;AAEA,QAAMkB,MAAM,GAAGX,GAAG,CAACW,MAAnB;AACA,QAAMC,QAAQ,GAAGZ,GAAG,CAACY,QAArB;AAEA,QAAMC,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAd;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,WAAW,CAACM,IAAhB,EAAsB;AACpBC,MAAAA,KAAK,CAAE,GAAEpB,IAAK,UAASM,QAAQ,CAACe,IAAK,cAAhC,EAA+C;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFyC;AAKlDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,QAAQ,EAAEd,WAAW,CAACM,IAAZ,CAAiBE;AADR,SAAf;AAL4C,OAA/C,CAAL,CASGO,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSG,IAAD,IAAoB;AACxB,YAAIA,IAAI,CAACC,MAAT,EAAiB;AACf,cAAID,IAAI,CAACE,IAAL,KAAc,QAAlB,EAA4B;AAC1BvB,YAAAA,cAAc,CAACK,MAAD,CAAd;AACD,WAFD,MAEO,IAAIgB,IAAI,CAACE,IAAL,KAAc,UAAlB,EAA8B;AACnCrB,YAAAA,gBAAgB,CAACI,QAAD,CAAhB;AACD;AACF;AACF,OAlBH;AAmBD;AACF,GAtBQ,EAsBN,CAACH,WAAD,CAtBM,CAAT;;AAwBA,QAAMqB,IAAI,GAAG,MAAOC,QAAP,IAA2C;AACtD,QAAItB,WAAW,CAACM,IAAhB,EAAsB;AACpB,UAAIN,WAAW,CAACM,IAAZ,CAAiBE,IAAjB,KAA0Bf,QAAQ,CAACa,IAAT,CAAcE,IAA5C,EAAkD;AAChDD,QAAAA,KAAK,CAAE,GAAEpB,IAAK,UAASM,QAAQ,CAACe,IAAK,cAAhC,EAA+C;AAClDC,UAAAA,MAAM,EAAE,MAD0C;AAElDC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT,WAFyC;AAKlDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,QAAQ,EAAEd,WAAW,CAACM,IAAZ,CAAiBE;AADR,WAAf;AAL4C,SAA/C,CAAL,CASGO,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSG,IAAD,IACJhC,UAAU,CACRgC,IADQ,EAERI,QAFQ,EAGR3B,QAHQ,EAIRE,cAJQ,EAKRE,gBALQ,EAMRL,KANQ,EAORQ,MAPQ,EAQRC,QARQ,CAXd;AAsBA,cAAMI,KAAK,CAAE,GAAEpB,IAAK,UAASM,QAAQ,CAACe,IAAK,OAAhC,EAAwC;AACjDC,UAAAA,MAAM,EAAE,MADyC;AAEjDC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPa,YAAAA,aAAa,EAAG,UAAStC,SAAS,CAAC,OAAD,CAAU;AAFrC,WAFwC;AAMjD0B,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,QAAQ,EAAEd,WAAW,CAACM,IAAZ,CAAiBE,IADR;AAEnBc,YAAAA,QAAQ,EAAEA;AAFS,WAAf;AAN2C,SAAxC,CAAX;AAWD,OAlCD,MAkCO;AACLE,QAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;AACF,KAtCD,MAsCO;AACL,YAAMvB,MAAM,CAACwB,IAAP,CAAY,cAAZ,CAAN;AACD;AACF,GA1CD;;AA4CA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA,6BACE;AAAA,2CAAe,oBAAf;AAAA,+BACE;AAAA,6CAAe,MAAf;AAAA,kCACE;AAAA,+CAAe,OAAf;AAAA,oCACE,QAAC,eAAD;AACE,cAAA,IAAI,EAAE3C,QADR;AAEE,cAAA,KAAK,EAAEc,WAFT;AAGE,cAAA,KAAK,EAAEQ,KAHT;AAIE,cAAA,IAAI,EAAE,IAJR;AAKE,cAAA,OAAO,EAAE,MAAMiB,IAAI,CAAC,QAAD;AALrB;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAEE,cAAA,KAAK,EAAE;AAAEK,gBAAAA,KAAK,EAAE,SAAT;AAAoBC,gBAAAA,MAAM,EAAE;AAA5B,eAFT;AAAA,iDACY,YADZ;AAAA,wBAIGjC;AAJH;AAAA;AAAA;AAAA;AAAA,oBARF,eAcE,QAAC,eAAD;AACE,cAAA,IAAI,EAAEX,UADR;AAEE,cAAA,KAAK,EAAEe,aAFT;AAGE,cAAA,KAAK,EAAEM,KAHT;AAIE,cAAA,IAAI,EAAE,IAJR;AAKE,cAAA,OAAO,EAAE,MAAMiB,IAAI,CAAC,UAAD;AALrB;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAuBE;AAAA,+CAAe,YAAf;AAAA,oCACE;AAAA,iDAAe,WAAf;AAAA,qCACE,QAAC,aAAD;AACE,gBAAA,SAAS,EAAC,uBADZ;AAEE,gBAAA,MAAM,EAAE5B,QAAQ,CAACkB,IAFnB;AAGE,gBAAA,OAAO,EAAE,CAAC/B,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA,iDAAe,eAAf;AAAA,sCACE;AAAA,mDAAe,uBAAf;AAAA,0BACGa,QAAQ,CAACmC,WAAT,CAAqBC,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,EAAiCC,GAAjC,CAAsCC,SAAD,iBACpC,QAAC,GAAD;AAAK,kBAAA,IAAI,EAAEA,SAAS,CAACC;AAArB,mBAAgCD,SAAS,CAACC,IAA1C;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,OAAD;AACE,gBAAA,QAAQ,EAAEvC,QAAQ,CAACa,IAAT,CAAc2B,QAD1B;AAEE,gBAAA,SAAS,EAAExC,QAAQ,CAACyC,SAFtB;AAGE,gBAAA,QAAQ,EAAEzC,QAAQ,CAACa,IAAT,CAAcE,IAH1B;AAIE,gBAAA,QAAQ,EAAER,WAAF,aAAEA,WAAF,4CAAEA,WAAW,CAAEM,IAAf,sDAAE,kBAAmBE;AAJ/B;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2FD,CA5KD;;AA8KA,eAAehB,QAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport { getCookie, updateVote } from \"../utils/functions\";\nimport { voteType } from \"../utils/types/voteType\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport AskedBy from \"./AskedBy\";\nimport Tag from \"./Tag\";\nimport * as css from \"../utils/cssVariables\";\n\ninterface Props {\n  question: QuestionType;\n}\n\nconst Question: React.FC<Props> = ({ question }) => {\n  const [votes, setVotes] = useState<number>(question.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const upvote = css.upvote;\n  const downvote = css.downvote;\n\n  const style = { cursor: \"pointer\" };\n\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${question.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data: voteType) => {\n          if (data.status) {\n            if (data.type === \"upvote\") {\n              setUpvoteColor(upvote);\n            } else if (data.type === \"downvote\") {\n              setDownvoteColor(downvote);\n            }\n          }\n        });\n    }\n  }, [userContext]);\n\n  const vote = async (voteType: \"upvote\" | \"downvote\") => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== question.user.uuid) {\n        fetch(`${host}/posts/${question.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data: voteType) =>\n            updateVote(\n              data,\n              voteType,\n              setVotes,\n              setUpvoteColor,\n              setDownvoteColor,\n              votes,\n              upvote,\n              downvote\n            )\n          );\n        await fetch(`${host}/posts/${question.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType,\n          }),\n        });\n      } else {\n        alert(\"You can't vote on your own post!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <main>\n        <div className=\"question-container\">\n          <div className=\"main\">\n            <div className=\"votes\">\n              <FontAwesomeIcon\n                icon={faSortUp}\n                color={upvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"upvote\")}\n              />\n              <p\n                className=\"vote-count\"\n                style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n              >\n                {votes}\n              </p>\n              <FontAwesomeIcon\n                icon={faSortDown}\n                color={downvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"downvote\")}\n              />\n            </div>\n            <div className=\"main-right\">\n              <div className=\"post-body\">\n                <ReactMarkdown\n                  className=\"preview post-body-mkd\"\n                  source={question.body}\n                  plugins={[remarkGfm]}\n                />\n              </div>\n              <div className=\"post-body-btm\">\n                <div className=\"communities-container\">\n                  {question.communities.slice(0, 4).map((community) => (\n                    <Tag name={community.name} key={community.name} />\n                  ))}\n                </div>\n                <AskedBy\n                  username={question.user.username}\n                  createdAt={question.createdAt}\n                  postUuid={question.user.uuid}\n                  userUuid={userContext?.user?.uuid}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <style jsx>{`\n        .question-container {\n          width: 92%;\n          margin: 0 auto;\n        }\n\n        .main {\n          display: flex;\n          margin: 20px 0;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin: 14px 20px;\n        }\n\n        .main-right {\n          width: 95%;\n        }\n\n        .post-body-btm {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 95%;\n          margin-bottom: 20px;\n        }\n\n        .communities-container {\n          display: flex;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}