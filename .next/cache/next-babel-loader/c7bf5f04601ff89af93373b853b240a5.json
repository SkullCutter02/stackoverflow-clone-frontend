{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\nimport Aside from \"./Aside\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport { getCookie } from \"../utils/functions\";\n\nconst Question = ({\n  data\n}) => {\n  const {\n    0: votes,\n    1: setVotes\n  } = useState(data.votes);\n  const {\n    0: upvoteColor,\n    1: setUpvoteColor\n  } = useState(\"grey\");\n  const {\n    0: downvoteColor,\n    1: setDownvoteColor\n  } = useState(\"grey\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n  const upvote = \"#ff4400\";\n  const downvote = \"#7193ff\";\n  const style = {\n    cursor: \"pointer\"\n  };\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${data.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data2 => {\n        if (data2.status) {\n          if (data2.type === \"upvote\") {\n            setUpvoteColor(upvote);\n          } else if (data2.type === \"downvote\") {\n            setDownvoteColor(downvote);\n          }\n        }\n      });\n    }\n  }, [userContext]);\n\n  const vote = async voteType => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${data.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data2 => {\n        if (data2.status === false) {\n          if (voteType === \"upvote\") {\n            setVotes(data.votes + 1);\n            setUpvoteColor(upvote);\n          } else if (voteType === \"downvote\") {\n            setVotes(data.votes - 1);\n            setDownvoteColor(downvote);\n          }\n        } else if (data2.status === true) {\n          if (data2.type === \"upvote\" && voteType === \"upvote\") {\n            setVotes(data.votes);\n            setUpvoteColor(\"grey\");\n            setDownvoteColor(\"grey\");\n          } else if (data2.type === \"downvote\" && voteType === \"downvote\") {\n            setVotes(data.votes + 1);\n            setUpvoteColor(\"grey\");\n            setDownvoteColor(\"grey\");\n          } else if (data2.type === \"upvote\" && voteType === \"downvote\") {\n            setVotes(data.votes - 1);\n            setUpvoteColor(\"grey\");\n            setDownvoteColor(downvote);\n          } else if (data2.type === \"downvote\" && voteType === \"upvote\") {\n            setVotes(data.votes + 1);\n            setUpvoteColor(upvote);\n            setDownvoteColor(\"grey\");\n          }\n        }\n      });\n      await fetch(`${host}/posts/${data.uuid}/vote`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n          voteType: voteType\n        })\n      });\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"jsx-2426090784\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-2426090784\" + \" \" + \"h1-border-btm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"jsx-2426090784\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2426090784\" + \" \" + \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-2426090784\" + \" \" + \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-2426090784\" + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortUp,\n              color: upvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"upvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#c6c6c6\",\n                margin: \"-8px 0\"\n              },\n              className: \"jsx-2426090784\" + \" \" + \"vote-count\",\n              children: votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortDown,\n              color: downvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"downvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-2426090784\" + \" \" + \"main-right\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              source: data.body,\n              plugins: [remarkGfm]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Aside, {\n        borderSide: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2426090784\",\n      children: \"main.jsx-2426090784{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.question-container.jsx-2426090784{width:73%;margin:0 auto;}h1.jsx-2426090784{font-size:1.3rem;line-height:1.4em;margin:20px auto;width:88%;}.h1-border-btm.jsx-2426090784{width:93%;margin:0 auto;border-bottom:1px solid #fff;}.main.jsx-2426090784{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:20px 0;}.votes.jsx-2426090784{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-right:10px;}.main-right.jsx-2426090784{width:95%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Question;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx"],"names":["React","useContext","useState","useEffect","ReactMarkdown","remarkGfm","FontAwesomeIcon","faSortUp","faSortDown","useRouter","Aside","host","UserContext","getCookie","Question","data","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","userContext","router","upvote","downvote","style","cursor","user","fetch","uuid","method","headers","body","JSON","stringify","userUuid","then","res","json","data2","status","type","vote","voteType","Authorization","push","title","color","margin"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport Aside from \"./Aside\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\nimport { getCookie } from \"../utils/functions\";\n\ninterface Props {\n  data: QuestionType;\n}\n\nconst Question: React.FC<Props> = ({ data }) => {\n  const [votes, setVotes] = useState<number>(data.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const upvote = \"#ff4400\";\n  const downvote = \"#7193ff\";\n\n  const style = { cursor: \"pointer\" };\n\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${data.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data2) => {\n          if (data2.status) {\n            if (data2.type === \"upvote\") {\n              setUpvoteColor(upvote);\n            } else if (data2.type === \"downvote\") {\n              setDownvoteColor(downvote);\n            }\n          }\n        });\n    }\n  }, [userContext]);\n\n  const vote = async (voteType: \"upvote\" | \"downvote\") => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${data.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data2) => {\n          if (data2.status === false) {\n            if (voteType === \"upvote\") {\n              setVotes(data.votes + 1);\n              setUpvoteColor(upvote);\n            } else if (voteType === \"downvote\") {\n              setVotes(data.votes - 1);\n              setDownvoteColor(downvote);\n            }\n          } else if (data2.status === true) {\n            if (data2.type === \"upvote\" && voteType === \"upvote\") {\n              setVotes(data.votes);\n              setUpvoteColor(\"grey\");\n              setDownvoteColor(\"grey\");\n            } else if (data2.type === \"downvote\" && voteType === \"downvote\") {\n              setVotes(data.votes + 1);\n              setUpvoteColor(\"grey\");\n              setDownvoteColor(\"grey\");\n            } else if (data2.type === \"upvote\" && voteType === \"downvote\") {\n              setVotes(data.votes - 1);\n              setUpvoteColor(\"grey\");\n              setDownvoteColor(downvote);\n            } else if (data2.type === \"downvote\" && voteType === \"upvote\") {\n              setVotes(data.votes + 1);\n              setUpvoteColor(upvote);\n              setDownvoteColor(\"grey\");\n            }\n          }\n        });\n      await fetch(`${host}/posts/${data.uuid}/vote`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`,\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n          voteType: voteType,\n        }),\n      });\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1>{data.title}</h1>\n      <div className=\"h1-border-btm\" />\n      <main>\n        <div className=\"question-container\">\n          <div className=\"main\">\n            <div className=\"votes\">\n              <FontAwesomeIcon\n                icon={faSortUp}\n                color={upvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"upvote\")}\n              />\n              <p\n                className=\"vote-count\"\n                style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n              >\n                {votes}\n              </p>\n              <FontAwesomeIcon\n                icon={faSortDown}\n                color={downvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"downvote\")}\n              />\n            </div>\n            <div className=\"main-right\">\n              <ReactMarkdown source={data.body} plugins={[remarkGfm]} />\n            </div>\n          </div>\n        </div>\n        <Aside borderSide={\"left\"} />\n      </main>\n\n      <style jsx>{`\n        main {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        .question-container {\n          width: 73%;\n          margin: 0 auto;\n        }\n\n        h1 {\n          font-size: 1.3rem;\n          line-height: 1.4em;\n          margin: 20px auto;\n          width: 88%;\n        }\n\n        .h1-border-btm {\n          width: 93%;\n          margin: 0 auto;\n          border-bottom: 1px solid #fff;\n        }\n\n        .main {\n          display: flex;\n          margin: 20px 0;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin-right: 10px;\n        }\n\n        .main-right {\n          width: 95%;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}