{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\nimport { getCookie, updateVote } from \"../utils/functions\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst Question = ({\n  data\n}) => {\n  const {\n    0: votes,\n    1: setVotes\n  } = useState(data.votes);\n  const {\n    0: upvoteColor,\n    1: setUpvoteColor\n  } = useState(\"grey\");\n  const {\n    0: downvoteColor,\n    1: setDownvoteColor\n  } = useState(\"grey\");\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n  const upvote = \"#ff4400\";\n  const downvote = \"#7193ff\";\n  const style = {\n    cursor: \"pointer\"\n  };\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${data.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid\n        })\n      }).then(res => res.json()).then(data2 => {\n        if (data2.status) {\n          if (data2.type === \"upvote\") {\n            setUpvoteColor(upvote);\n          } else if (data2.type === \"downvote\") {\n            setDownvoteColor(downvote);\n          }\n        }\n      });\n    }\n  }, [userContext]);\n\n  const vote = async voteType => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== data.user.uuid) {\n        fetch(`${host}/posts/${data.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid\n          })\n        }).then(res => res.json()).then(data2 => updateVote(data2, voteType, setVotes, setUpvoteColor, setDownvoteColor, votes, upvote, downvote));\n        await fetch(`${host}/posts/${data.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType\n          })\n        });\n      } else {\n        alert(\"You can't vote on your own post!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-2667570463\" + \" \" + \"h1-border-btm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"jsx-2667570463\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-2667570463\" + \" \" + \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-2667570463\" + \" \" + \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-2667570463\" + \" \" + \"votes\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortUp,\n              color: upvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"upvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#c6c6c6\",\n                margin: \"-8px 0\"\n              },\n              className: \"jsx-2667570463\" + \" \" + \"vote-count\",\n              children: votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSortDown,\n              color: downvoteColor,\n              style: style,\n              size: \"2x\",\n              onClick: () => vote(\"downvote\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jsx-2667570463\" + \" \" + \"main-right\",\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              source: data.body,\n              plugins: [remarkGfm]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2667570463\",\n      children: \".question-container.jsx-2667570463{width:92%;margin:0 auto;}.h1-border-btm.jsx-2667570463{width:96%;margin:0 auto;border-bottom:1px solid #fff;}.main.jsx-2667570463{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:20px 0;}.votes.jsx-2667570463{width:5%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-right:10px;}.main-right.jsx-2667570463{width:95%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9RdWVzdGlvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUlrQixBQUdxQixBQUtBLEFBTUcsQUFLSixBQVNDLFNBUkcsQ0FoQkMsQUFLQSxBQW9CaEIsY0F4QkEsQUFLK0IsNkJBQy9CLHFCQUlnQixTQU1RLEtBTHhCLHlFQU1xQiw2RkFDUSx5R0FDVCxrQkFDcEIiLCJmaWxlIjoiL1VzZXJzL3NrdWxsY3V0dGVyL1dlYlN0b3JtUHJvamVjdHMvc3RhY2tvdmVyZmxvdy1jbG9uZS9mcm9udGVuZC9jb21wb25lbnRzL1F1ZXN0aW9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcbmltcG9ydCByZW1hcmtHZm0gZnJvbSBcInJlbWFyay1nZm1cIjtcbmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gXCJAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWVcIjtcbmltcG9ydCB7IGZhU29ydFVwLCBmYVNvcnREb3duIH0gZnJvbSBcIkBmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29uc1wiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy9pbmRpdmlkdWFsUXVlc3Rpb25UeXBlXCI7XG5pbXBvcnQgeyBnZXRDb29raWUsIHVwZGF0ZVZvdGUgfSBmcm9tIFwiLi4vdXRpbHMvZnVuY3Rpb25zXCI7XG5pbXBvcnQgeyB2b3RlVHlwZSB9IGZyb20gXCIuLi91dGlscy90eXBlcy92b3RlVHlwZVwiO1xuaW1wb3J0IGhvc3QgZnJvbSBcIi4uL3V0aWxzL2hvc3RcIjtcbmltcG9ydCB7IFVzZXJDb250ZXh0IH0gZnJvbSBcIi4uL2NvbnRleHQvVXNlckNvbnRleHRcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgZGF0YTogUXVlc3Rpb25UeXBlO1xufVxuXG5jb25zdCBRdWVzdGlvbjogUmVhY3QuRkM8UHJvcHM+ID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnN0IFt2b3Rlcywgc2V0Vm90ZXNdID0gdXNlU3RhdGU8bnVtYmVyPihkYXRhLnZvdGVzKTtcbiAgY29uc3QgW3Vwdm90ZUNvbG9yLCBzZXRVcHZvdGVDb2xvcl0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiZ3JleVwiKTtcbiAgY29uc3QgW2Rvd252b3RlQ29sb3IsIHNldERvd252b3RlQ29sb3JdID0gdXNlU3RhdGU8c3RyaW5nPihcImdyZXlcIik7XG5cbiAgY29uc3QgdXNlckNvbnRleHQgPSB1c2VDb250ZXh0KFVzZXJDb250ZXh0KTtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG5cbiAgY29uc3QgdXB2b3RlID0gXCIjZmY0NDAwXCI7XG4gIGNvbnN0IGRvd252b3RlID0gXCIjNzE5M2ZmXCI7XG5cbiAgY29uc3Qgc3R5bGUgPSB7IGN1cnNvcjogXCJwb2ludGVyXCIgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1c2VyQ29udGV4dC51c2VyKSB7XG4gICAgICBmZXRjaChgJHtob3N0fS9wb3N0cy8ke2RhdGEudXVpZH0vdm90ZS9zdGF0dXNgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHVzZXJVdWlkOiB1c2VyQ29udGV4dC51c2VyLnV1aWQsXG4gICAgICAgIH0pLFxuICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgLnRoZW4oKGRhdGEyOiB2b3RlVHlwZSkgPT4ge1xuICAgICAgICAgIGlmIChkYXRhMi5zdGF0dXMpIHtcbiAgICAgICAgICAgIGlmIChkYXRhMi50eXBlID09PSBcInVwdm90ZVwiKSB7XG4gICAgICAgICAgICAgIHNldFVwdm90ZUNvbG9yKHVwdm90ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEyLnR5cGUgPT09IFwiZG93bnZvdGVcIikge1xuICAgICAgICAgICAgICBzZXREb3dudm90ZUNvbG9yKGRvd252b3RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSwgW3VzZXJDb250ZXh0XSk7XG5cbiAgY29uc3Qgdm90ZSA9IGFzeW5jICh2b3RlVHlwZTogXCJ1cHZvdGVcIiB8IFwiZG93bnZvdGVcIikgPT4ge1xuICAgIGlmICh1c2VyQ29udGV4dC51c2VyKSB7XG4gICAgICBpZiAodXNlckNvbnRleHQudXNlci51dWlkICE9PSBkYXRhLnVzZXIudXVpZCkge1xuICAgICAgICBmZXRjaChgJHtob3N0fS9wb3N0cy8ke2RhdGEudXVpZH0vdm90ZS9zdGF0dXNgLCB7XG4gICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHVzZXJVdWlkOiB1c2VyQ29udGV4dC51c2VyLnV1aWQsXG4gICAgICAgICAgfSksXG4gICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgICAudGhlbigoZGF0YTI6IHZvdGVUeXBlKSA9PlxuICAgICAgICAgICAgdXBkYXRlVm90ZShcbiAgICAgICAgICAgICAgZGF0YTIsXG4gICAgICAgICAgICAgIHZvdGVUeXBlLFxuICAgICAgICAgICAgICBzZXRWb3RlcyxcbiAgICAgICAgICAgICAgc2V0VXB2b3RlQ29sb3IsXG4gICAgICAgICAgICAgIHNldERvd252b3RlQ29sb3IsXG4gICAgICAgICAgICAgIHZvdGVzLFxuICAgICAgICAgICAgICB1cHZvdGUsXG4gICAgICAgICAgICAgIGRvd252b3RlXG4gICAgICAgICAgICApXG4gICAgICAgICAgKTtcbiAgICAgICAgYXdhaXQgZmV0Y2goYCR7aG9zdH0vcG9zdHMvJHtkYXRhLnV1aWR9L3ZvdGVgLCB7XG4gICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtnZXRDb29raWUoXCJ0b2tlblwiKX1gLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgdXNlclV1aWQ6IHVzZXJDb250ZXh0LnVzZXIudXVpZCxcbiAgICAgICAgICAgIHZvdGVUeXBlOiB2b3RlVHlwZSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbGVydChcIllvdSBjYW4ndCB2b3RlIG9uIHlvdXIgb3duIHBvc3QhXCIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBhd2FpdCByb3V0ZXIucHVzaChcIi9hdXRoL3NpZ251cFwiKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImgxLWJvcmRlci1idG1cIiAvPlxuICAgICAgPG1haW4+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVlc3Rpb24tY29udGFpbmVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZvdGVzXCI+XG4gICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25cbiAgICAgICAgICAgICAgICBpY29uPXtmYVNvcnRVcH1cbiAgICAgICAgICAgICAgICBjb2xvcj17dXB2b3RlQ29sb3J9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgICAgICAgIHNpemU9e1wiMnhcIn1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2b3RlKFwidXB2b3RlXCIpfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8cFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInZvdGUtY291bnRcIlxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGNvbG9yOiBcIiNjNmM2YzZcIiwgbWFyZ2luOiBcIi04cHggMFwiIH19XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dm90ZXN9XG4gICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblxuICAgICAgICAgICAgICAgIGljb249e2ZhU29ydERvd259XG4gICAgICAgICAgICAgICAgY29sb3I9e2Rvd252b3RlQ29sb3J9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgICAgICAgIHNpemU9e1wiMnhcIn1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2b3RlKFwiZG93bnZvdGVcIil9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbi1yaWdodFwiPlxuICAgICAgICAgICAgICA8UmVhY3RNYXJrZG93biBzb3VyY2U9e2RhdGEuYm9keX0gcGx1Z2lucz17W3JlbWFya0dmbV19IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L21haW4+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnF1ZXN0aW9uLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDkyJTtcbiAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgIC5oMS1ib3JkZXItYnRtIHtcbiAgICAgICAgICB3aWR0aDogOTYlO1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1haW4ge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICAudm90ZXMge1xuICAgICAgICAgIHdpZHRoOiA1JTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1haW4tcmlnaHQge1xuICAgICAgICAgIHdpZHRoOiA5NSU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUXVlc3Rpb247XG4iXX0= */\\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Question;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Question.tsx"],"names":["React","useContext","useState","useEffect","ReactMarkdown","remarkGfm","FontAwesomeIcon","faSortUp","faSortDown","useRouter","getCookie","updateVote","host","UserContext","Question","data","votes","setVotes","upvoteColor","setUpvoteColor","downvoteColor","setDownvoteColor","userContext","router","upvote","downvote","style","cursor","user","fetch","uuid","method","headers","body","JSON","stringify","userUuid","then","res","json","data2","status","type","vote","voteType","Authorization","alert","push","color","margin"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\n\nimport { QuestionType } from \"../utils/types/individualQuestionType\";\nimport { getCookie, updateVote } from \"../utils/functions\";\nimport { voteType } from \"../utils/types/voteType\";\nimport host from \"../utils/host\";\nimport { UserContext } from \"../context/UserContext\";\n\ninterface Props {\n  data: QuestionType;\n}\n\nconst Question: React.FC<Props> = ({ data }) => {\n  const [votes, setVotes] = useState<number>(data.votes);\n  const [upvoteColor, setUpvoteColor] = useState<string>(\"grey\");\n  const [downvoteColor, setDownvoteColor] = useState<string>(\"grey\");\n\n  const userContext = useContext(UserContext);\n  const router = useRouter();\n\n  const upvote = \"#ff4400\";\n  const downvote = \"#7193ff\";\n\n  const style = { cursor: \"pointer\" };\n\n  useEffect(() => {\n    if (userContext.user) {\n      fetch(`${host}/posts/${data.uuid}/vote/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userUuid: userContext.user.uuid,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data2: voteType) => {\n          if (data2.status) {\n            if (data2.type === \"upvote\") {\n              setUpvoteColor(upvote);\n            } else if (data2.type === \"downvote\") {\n              setDownvoteColor(downvote);\n            }\n          }\n        });\n    }\n  }, [userContext]);\n\n  const vote = async (voteType: \"upvote\" | \"downvote\") => {\n    if (userContext.user) {\n      if (userContext.user.uuid !== data.user.uuid) {\n        fetch(`${host}/posts/${data.uuid}/vote/status`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data2: voteType) =>\n            updateVote(\n              data2,\n              voteType,\n              setVotes,\n              setUpvoteColor,\n              setDownvoteColor,\n              votes,\n              upvote,\n              downvote\n            )\n          );\n        await fetch(`${host}/posts/${data.uuid}/vote`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`,\n          },\n          body: JSON.stringify({\n            userUuid: userContext.user.uuid,\n            voteType: voteType,\n          }),\n        });\n      } else {\n        alert(\"You can't vote on your own post!\");\n      }\n    } else {\n      await router.push(\"/auth/signup\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"h1-border-btm\" />\n      <main>\n        <div className=\"question-container\">\n          <div className=\"main\">\n            <div className=\"votes\">\n              <FontAwesomeIcon\n                icon={faSortUp}\n                color={upvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"upvote\")}\n              />\n              <p\n                className=\"vote-count\"\n                style={{ color: \"#c6c6c6\", margin: \"-8px 0\" }}\n              >\n                {votes}\n              </p>\n              <FontAwesomeIcon\n                icon={faSortDown}\n                color={downvoteColor}\n                style={style}\n                size={\"2x\"}\n                onClick={() => vote(\"downvote\")}\n              />\n            </div>\n            <div className=\"main-right\">\n              <ReactMarkdown source={data.body} plugins={[remarkGfm]} />\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <style jsx>{`\n        .question-container {\n          width: 92%;\n          margin: 0 auto;\n        }\n\n        .h1-border-btm {\n          width: 96%;\n          margin: 0 auto;\n          border-bottom: 1px solid #fff;\n        }\n\n        .main {\n          display: flex;\n          margin: 20px 0;\n        }\n\n        .votes {\n          width: 5%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: flex-start;\n          margin-right: 10px;\n        }\n\n        .main-right {\n          width: 95%;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}