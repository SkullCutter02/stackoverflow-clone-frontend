{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport * as css from \"../utils/cssVariables\";\n\nconst Reply = () => {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n\n  const postAnswer = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"3015423969\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder]]]) + \" \" + \"reply-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: postAnswer,\n        className: _JSXStyle.dynamic([[\"3015423969\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder]]]),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"reply\",\n          required: true,\n          placeholder: \"Reply to this question\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n            window.scrollBy(0, 100);\n          },\n          className: _JSXStyle.dynamic([[\"3015423969\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder]]]) + \" \" + \"reply-form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: _JSXStyle.dynamic([[\"3015423969\", [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder]]]),\n          children: \"Post your Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"preview reply-preview\",\n          source: text,\n          plugins: [remarkGfm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3015423969\",\n      dynamic: [text.length === 0 ? \"120px\" : \"200px\", css.inputBackground, css.inputBorder],\n      children: `.reply-container.__jsx-style-dynamic-selector{width:82%;border:1px solid red;margin:40px auto;}.reply-form-textarea.__jsx-style-dynamic-selector{width:100%;resize:none;display:block;height:${text.length === 0 ? \"120px\" : \"200px\"};background:${css.inputBackground};color:#ffffff;border:2px solid ${css.inputBorder};padding:15px;}.reply-form-textarea.__jsx-style-dynamic-selector:focus{height:200px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9za3VsbGN1dHRlci9XZWJTdG9ybVByb2plY3RzL3N0YWNrb3ZlcmZsb3ctY2xvbmUvZnJvbnRlbmQvY29tcG9uZW50cy9SZXBseS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUNrQixBQUdxQixBQU1DLEFBV0UsVUFoQlEsQ0FNVCxFQVdkLFVBVmdCLFFBTkcsTUFPbUIsV0FOdEMseUJBTzBDLHdDQUMxQixjQUNnQyw4Q0FDakMsYUFDZiIsImZpbGUiOiIvVXNlcnMvc2t1bGxjdXR0ZXIvV2ViU3Rvcm1Qcm9qZWN0cy9zdGFja292ZXJmbG93LWNsb25lL2Zyb250ZW5kL2NvbXBvbmVudHMvUmVwbHkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcbmltcG9ydCByZW1hcmtHZm0gZnJvbSBcInJlbWFyay1nZm1cIjtcblxuaW1wb3J0ICogYXMgY3NzIGZyb20gXCIuLi91dGlscy9jc3NWYXJpYWJsZXNcIjtcblxuY29uc3QgUmVwbHk6IFJlYWN0LkZDID0gKCkgPT4ge1xuICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xuXG4gIGNvbnN0IHBvc3RBbnN3ZXIgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVwbHktY29udGFpbmVyXCI+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXtwb3N0QW5zd2VyfT5cbiAgICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICAgIGlkPVwicmVwbHlcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVwbHktZm9ybS10ZXh0YXJlYVwiXG4gICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1wiUmVwbHkgdG8gdGhpcyBxdWVzdGlvblwifVxuICAgICAgICAgICAgdmFsdWU9e3RleHR9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgc2V0VGV4dChlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxCeSgwLCAxMDApO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxidXR0b24gdHlwZT17XCJzdWJtaXRcIn0+UG9zdCB5b3VyIEFuc3dlcjwvYnV0dG9uPlxuICAgICAgICAgIDxSZWFjdE1hcmtkb3duXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwcmV2aWV3IHJlcGx5LXByZXZpZXdcIlxuICAgICAgICAgICAgc291cmNlPXt0ZXh0fVxuICAgICAgICAgICAgcGx1Z2lucz17W3JlbWFya0dmbV19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9mb3JtPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnJlcGx5LWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDgyJTtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG87XG4gICAgICAgIH1cblxuICAgICAgICAucmVwbHktZm9ybS10ZXh0YXJlYSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgcmVzaXplOiBub25lO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIGhlaWdodDogJHt0ZXh0Lmxlbmd0aCA9PT0gMCA/IFwiMTIwcHhcIiA6IFwiMjAwcHhcIn07XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtjc3MuaW5wdXRCYWNrZ3JvdW5kfTtcbiAgICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke2Nzcy5pbnB1dEJvcmRlcn07XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5yZXBseS1mb3JtLXRleHRhcmVhOmZvY3VzIHtcbiAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlcGx5O1xuIl19 */\n/*@ sourceURL=/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Reply;","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Reply.tsx"],"names":["React","useState","ReactMarkdown","remarkGfm","css","Reply","text","setText","postAnswer","e","preventDefault","length","inputBackground","inputBorder","target","value","window","scrollBy"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAC5B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAS,EAAT,CAAhC;;AAEA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,oDAiCcJ,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,OAjC5C,EAkCkBP,GAAG,CAACQ,eAlCtB,EAoCwBR,GAAG,CAACS,WApC5B,aAAe,iBAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEL,UAAhB;AAAA,sDAgCYF,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,OAhC1C,EAiCgBP,GAAG,CAACQ,eAjCpB,EAmCsBR,GAAG,CAACS,WAnC1B;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,OADL;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,WAAW,EAAE,wBAJf;AAKE,UAAA,KAAK,EAAEP,IALT;AAME,UAAA,QAAQ,EAAGG,CAAD,IAAO;AACfF,YAAAA,OAAO,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAP;AACAC,YAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,GAAnB;AACD,WATH;AAAA,wDA+BUX,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,OA/BxC,EAgCcP,GAAG,CAACQ,eAhClB,EAkCoBR,GAAG,CAACS,WAlCxB,aAEY;AAFZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAA,wDAoBUP,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,OApBxC,EAqBcP,GAAG,CAACQ,eArBlB,EAuBoBR,GAAG,CAACS,WAvBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,QAAC,aAAD;AACE,UAAA,SAAS,EAAC,uBADZ;AAEE,UAAA,MAAM,EAAEP,IAFV;AAGE,UAAA,OAAO,EAAE,CAACH,SAAD;AAHX;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA,gBAkCgBG,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,OAlC9C,EAmCoBP,GAAG,CAACQ,eAnCxB,EAqC0BR,GAAG,CAACS,WArC9B;AAAA,gNAkCgBP,IAAI,CAACK,MAAL,KAAgB,CAAhB,GAAoB,OAApB,GAA8B,OAlC9C,eAmCoBP,GAAG,CAACQ,eAnCxB,mCAqC0BR,GAAG,CAACS,WArC9B;AACJ;AACA;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAvDD;;AAyDA,eAAeR,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport * as css from \"../utils/cssVariables\";\n\nconst Reply: React.FC = () => {\n  const [text, setText] = useState<string>(\"\");\n\n  const postAnswer = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"reply-container\">\n        <form onSubmit={postAnswer}>\n          <textarea\n            id=\"reply\"\n            className=\"reply-form-textarea\"\n            required\n            placeholder={\"Reply to this question\"}\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n              window.scrollBy(0, 100);\n            }}\n          />\n          <button type={\"submit\"}>Post your Answer</button>\n          <ReactMarkdown\n            className=\"preview reply-preview\"\n            source={text}\n            plugins={[remarkGfm]}\n          />\n        </form>\n      </div>\n\n      <style jsx>{`\n        .reply-container {\n          width: 82%;\n          border: 1px solid red;\n          margin: 40px auto;\n        }\n\n        .reply-form-textarea {\n          width: 100%;\n          resize: none;\n          display: block;\n          height: ${text.length === 0 ? \"120px\" : \"200px\"};\n          background: ${css.inputBackground};\n          color: #ffffff;\n          border: 2px solid ${css.inputBorder};\n          padding: 15px;\n        }\n\n        .reply-form-textarea:focus {\n          height: 200px;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Reply;\n"]},"metadata":{},"sourceType":"module"}