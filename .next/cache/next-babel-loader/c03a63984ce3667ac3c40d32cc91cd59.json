{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport host from \"../utils/host\";\n\nvar Communities = function Communities() {\n  _s();\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var fetchCommunities = function fetchCommunities() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return fetch(\"\".concat(host, \"/communities?page=\").concat(page, \"&limit=5\")).then(function (res) {\n      return res.json();\n    });\n  };\n\n  var _useQuery = useQuery([\"communities\", page], function () {\n    return fetchCommunities(page);\n  }, {\n    keepPreviousData: true\n  }),\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      isFetching = _useQuery.isFetching,\n      isPreviousData = _useQuery.isPreviousData; // testing\n\n\n  React.useEffect(function () {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communities-container\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, _this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [data.map(function (community) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"community-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: community.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: community.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, _this)]\n          }, community.uuid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return setPage(function (old) {\n              return Math.max(old - 1, 0);\n            });\n          },\n          disabled: page === 0,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            console.log(\"hehh\");\n\n            if (!isPreviousData && data.hasMore) {\n              setPage(function (old) {\n                return old + 1;\n              });\n            }\n          },\n          disabled: isPreviousData || !data.hasMore,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, _this), isFetching ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Communities, \"DXHwwwTGbC4SB33zQr67Gl/jibQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = Communities;\nexport default Communities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Communities\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/stackoverflow-clone/frontend/components/Communities.tsx"],"names":["React","useState","useQuery","host","Communities","page","setPage","fetchCommunities","fetch","then","res","json","keepPreviousData","isLoading","isError","error","data","isFetching","isPreviousData","useEffect","console","log","message","map","community","name","description","uuid","old","Math","max","hasMore"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport host from \"../utils/host\";\n\ntype CommunityType = {\n  uuid: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nconst Communities: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n\n  const fetchCommunities = (page: number = 1) =>\n    fetch(`${host}/communities?page=${page}&limit=5`).then((res) => res.json());\n\n  const {\n    isLoading,\n    isError,\n    error,\n    data,\n    isFetching,\n    isPreviousData,\n  } = useQuery<CommunityType[], Error>(\n    [\"communities\", page],\n    () => fetchCommunities(page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  // testing\n  React.useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      <div className=\"communities-container\">\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : isError ? (\n          <div>Error: {error.message}</div>\n        ) : (\n          <React.Fragment>\n            {data.map((community) => (\n              <div className=\"community-container\" key={community.uuid}>\n                <p>{community.name}</p>\n                <p>{community.description}</p>\n              </div>\n            ))}\n            <span>Current Page: {page}</span>\n            <button\n              onClick={() => setPage((old) => Math.max(old - 1, 0))}\n              disabled={page === 0}\n            >\n              Previous Page\n            </button>\n            <button\n              onClick={() => {\n                console.log(\"hehh\");\n                if (!isPreviousData && data.hasMore) {\n                  setPage((old) => old + 1);\n                }\n              }}\n              disabled={isPreviousData || !data.hasMore}\n            >\n              Next Page\n            </button>\n          </React.Fragment>\n        )}\n        {isFetching ? <span>Loading...</span> : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Communities;\n"]},"metadata":{},"sourceType":"module"}